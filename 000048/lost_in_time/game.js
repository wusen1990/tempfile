var _STRINGS = {
    Ad: {
        Mobile: {
            Preroll: {
                ReadyIn: "The game is ready in ",
                Loading: "Your game is loading...",
                Close: "Close"
            },
            Header: {
                ReadyIn: "The game is ready in ",
                Loading: "Your game is loading...",
                Close: "Close"
            },
            End: {
                ReadyIn: "Advertisement ends in ",
                Loading: "Please wait ...",
                Close: "Close"
            }
        }
    },
    Splash: {
        Loading: "Loading ...",
        LogoLine1: "Some text here",
        LogoLine2: "powered by MarketJS",
        LogoLine3: "none"
    },
    Game: {
        SelectPlayer: "Select Player",
        Win: "You win!",
        Lose: "You lose!",
        Score: "Score",
        Time: "Time",
        moreGames: "More Games",
        dragToMove: "Drag to move view",
        selectLevel: "Select Level",
        startbutton: "START",
        retry: "Retry",
        levelFailed: "Level Failed",
        yourTime: "Your time: ",
        pause: "PAUSED",
        levelFailedDialog1: "Oh no! Caught by Time Bots!",
        levelFailedDialog2: "No! I can't let The Time Lord have the key!",
        levelFailedDialog3: "The universe is doomed!",
        levelFailedDialog4: "No! Not the paralyzer!",
        levelFailedDialog5: "The keys musn't fall to the wrong hands!!",
        levelFailedDialog6: "Destruction is impending!",
        levelFailedDialog7: "The space-time continuum will unravel",
        levelFailedDialog8: "I refuse to be caught like this!",
        levelFailedDialog9: "No! Not the time chamber!",
        levelFailedDialog10: "Is this The End?",
        levelMonologue1: "Finally, I escaped from the clutches of The Time Lord! Time to collect all keys before The Time Lord finds them!",
        levelMonologue2: "Now, where is the next key? Hold on, is that a time bot? The Time Lord must have sent them after me!",
        levelMonologue3: "Great Scott! that's a lot of time bots! The Time Lord must be desperate.",
        levelMonologue4: "Hmmm... This looks like a puzzle map. Those totems could be a clue! Perhaps the height of the totems can offer clues.",
        levelMonologue5: "Seems like I got teleported in between two timeline, better find that key or I'm lost in time!",
        levelMonologue6: "A City? Better find that key fast!",
        levelMonologue7: "The 7th key! I need 8 more to stabilize the space-time continuum!",
        levelMonologue8: "Things could go really wrong if the keys fall into the hands of The Time Lord!",
        levelMonologue9: "The Time Lord would use all the 15 keys to control the existence of everything!",
        levelMonologue10: "There's the 10th key! If only I can get pass all the time bots.",
        levelMonologue11: "Looks like there's a distortion in timeline! I wonder where I am now... What a strange place!",
        levelMonologue12: "Great! The key is right there! I just need to get to it!",
        levelMonologue13: "How ironic... that an entity that called himself The Time Lord wants to ruin all timelines!",
        levelMonologue14: "2 more keys to collect before the timeline gets spiral out of control!",
        levelMonologue15: "The final key!! One more key and all the timelines will be restored. The reign of The Time Lord will be over!"
    },
    Results: {
        Title: "High score"
    }
};
var _SETTINGS = {
    API: {
        Enabled: !0,
        Log: {
            Events: {
                InitializeGame: !0,
                EndGame: !0,
                Level: {
                    Begin: !0,
                    End: !0,
                    Win: !0,
                    Lose: !0,
                    Draw: !0
                }
            }
        }
    },
    Ad: {
        Mobile: {
            Preroll: {
                Enabled: !0,
                Duration: 5,
                Width: 300,
                Height: 250,
                Rotation: {
                    Enabled: !1,
                    Weight: {
                        MobileAdInGamePreroll: 40,
                        MobileAdInGamePreroll2: 40,
                        MobileAdInGamePreroll3: 20
                    }
                }
            },
            Header: {
                Enabled: !1,
                Duration: 5,
                Width: 320,
                Height: 50,
                Rotation: {
                    Enabled: !1,
                    Weight: {
                        MobileAdInGameHeader: 40,
                        MobileAdInGameHeader2: 40,
                        MobileAdInGameHeader3: 20
                    }
                }
            },
            Footer: {
                Enabled: !1,
                Duration: 5,
                Width: 320,
                Height: 50,
                Rotation: {
                    Enabled: !1,
                    Weight: {
                        MobileAdInGameFooter: 40,
                        MobileAdInGameFooter2: 40,
                        MobileAdInGameFooter3: 20
                    }
                }
            },
            End: {
                Enabled: !1,
                Duration: 1,
                Width: 300,
                Height: 250,
                Rotation: {
                    Enabled: !1,
                    Weight: {
                        MobileAdInGameEnd: 40,
                        MobileAdInGameEnd2: 40,
                        MobileAdInGameEnd3: 20
                    }
                }
            }
        }
    },
    Language: {
        Default: "en"
    },
    DeveloperBranding: {
        Splash: {
            Enabled: !0
        },
        Logo: {
            Enabled: !0,
            Link: "http://marketjs.com",
            LinkEnabled: !1,
            NewWindow: !0,
            Width: 166,
            Height: 61
        }
    },
    Branding: {
        Splash: {
            Enabled: !1
        },
        Logo: {
            Enabled: !1,
            Link: "http://google.com",
            LinkEnabled: !0,
            NewWindow: !0,
            Width: 280,
            Height: 34
        }
    },
    MoreGames: {
        Enabled: !1,
        Link: "http://www.marketjs.com/game/links/mobile",
        NewWindow: !0
    },
    Gamecenter: {
        Enabled: !1
    }
};
var MobileAdInGamePreroll = {/*
    ad_duration: _SETTINGS.Ad.Mobile.Preroll.Duration,
    ad_width: _SETTINGS.Ad.Mobile.Preroll.Width,
    ad_height: _SETTINGS.Ad.Mobile.Preroll.Height,
    ready_in: _STRINGS.Ad.Mobile.Preroll.ReadyIn,
    loading: _STRINGS.Ad.Mobile.Preroll.Loading,
    close: _STRINGS.Ad.Mobile.Preroll.Close + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
    Initialize: function() {
        if (_SETTINGS.Ad.Mobile.Preroll.Rotation.Enabled) {
            var b = _SETTINGS.Ad.Mobile.Preroll.Rotation.Weight,
                c = b.MobileAdInGamePreroll,
                d =
                c + b.MobileAdInGamePreroll2,
                b = d + b.MobileAdInGamePreroll3,
                e = Math.floor(100 * Math.random());
            console.log("seed: ", e);
            e <= c ? this.selectedOverlayName = "MobileAdInGamePreroll" : e <= d ? this.selectedOverlayName = "MobileAdInGamePreroll2" : e <= b && (this.selectedOverlayName = "MobileAdInGamePreroll3");
            console.log("Ad rotating preroll enabled")
        } else this.selectedOverlayName = "MobileAdInGamePreroll", console.log("Ad rotating preroll disabled");
        console.log("selected:", this.selectedOverlayName);
        this.overlay = $("#" + this.selectedOverlayName);
        this.box = $("#" + this.selectedOverlayName + "-Box");
        this.game = $("#game");
        this.boxContents = {
            footer: $("#" + this.selectedOverlayName + "-Box-Footer"),
            header: $("#" + this.selectedOverlayName + "-Box-Header"),
            close: $("#" + this.selectedOverlayName + "-Box-Close"),
            body: $("#" + this.selectedOverlayName + "-Box-Body")
        };
        this.box.width(this.ad_width);
        this.box.height(this.ad_height);
        this.box.css("left", (this.overlay.width() - this.box.width()) / 2);
        this.box.css("top", (this.overlay.height() - this.box.height() - this.boxContents.header.height() -
            this.boxContents.footer.height()) / 2);
        this.overlay.show(this.Timer(this.ad_duration))
    },
    Timer: function(b) {
        var c = b,
            d = setInterval(function() {
                MobileAdInGamePreroll.boxContents.header.text(MobileAdInGamePreroll.ready_in + c + "...");
                MobileAdInGamePreroll.boxContents.footer.text(MobileAdInGamePreroll.loading);
                c--;
                0 > c && (clearInterval(d), MobileAdInGamePreroll.boxContents.close.css("left", MobileAdInGamePreroll.boxContents.body.width() - 23), MobileAdInGamePreroll.boxContents.close.show(), MobileAdInGamePreroll.boxContents.header.html(MobileAdInGamePreroll.close),
                    MobileAdInGamePreroll.boxContents.footer.text(""))
            }, 1E3)
    },
    Close: function() {
        this.boxContents.close.hide();
        this.overlay.hide()
    }*/
};
var MobileAdInGameHeader = {
    /*
    ad_duration: _SETTINGS.Ad.Mobile.Header.Duration,
    ad_width: _SETTINGS.Ad.Mobile.Header.Width,
    ad_height: _SETTINGS.Ad.Mobile.Header.Height,
    Initialize: function() {
        if (_SETTINGS.Ad.Mobile.Header.Rotation.Enabled) {
            var b = _SETTINGS.Ad.Mobile.Header.Rotation.Weight,
                c = b.MobileAdInGameHeader,
                d = c + b.MobileAdInGameHeader2,
                b = d + b.MobileAdInGameHeader3,
                e = Math.floor(100 * Math.random());
            console.log("seed: ", e);
            e <= c ? this.selectedOverlayName = "MobileAdInGameHeader" : e <= d ? this.selectedOverlayName = "MobileAdInGameHeader2" :
                e <= b && (this.selectedOverlayName = "MobileAdInGameHeader3");
            console.log("Ad rotating header enabled")
        } else this.selectedOverlayName = "MobileAdInGameHeader", console.log("Ad rotating header disabled");
        this.div = $("#" + this.selectedOverlayName);
        this.game = $("#game");
        this.div.width(this.ad_width);
        this.div.height(this.ad_height);
        this.div.css("left", this.game.position().left + (this.game.width() - this.div.width()) / 2);
        this.div.css("top", 0);
        this.div.show(this.Timer(this.ad_duration))
    },
    Timer: function(b) {
        var c = setInterval(function() {
            b--;
            0 > b && (MobileAdInGameHeader.div.hide(), clearInterval(c))
        }, 1E3)
    }*/
};
var MobileAdInGameFooter = {
    /*
    ad_duration: _SETTINGS.Ad.Mobile.Footer.Duration,
    ad_width: _SETTINGS.Ad.Mobile.Footer.Width,
    ad_height: _SETTINGS.Ad.Mobile.Footer.Height,
    Initialize: function() {
        if (_SETTINGS.Ad.Mobile.Footer.Rotation.Enabled) {
            var b = _SETTINGS.Ad.Mobile.Footer.Rotation.Weight,
                c = b.MobileAdInGameFooter,
                d = c + b.MobileAdInGameFooter2,
                b = d + b.MobileAdInGameFooter3,
                e = Math.floor(100 * Math.random());
            console.log("seed: ", e);
            e <= c ? this.selectedOverlayName = "MobileAdInGameFooter" : e <= d ? this.selectedOverlayName = "MobileAdInGameFooter2" :
                e <= b && (this.selectedOverlayName = "MobileAdInGameFooter3");
            console.log("Ad rotating footer enabled")
        } else this.selectedOverlayName = "MobileAdInGameFooter", console.log("Ad rotating footer disabled");
        this.div = $("#" + this.selectedOverlayName);
        this.game = $("#game");
        this.div.width(this.ad_width);
        this.div.height(this.ad_height);
        this.div.css("left", this.game.position().left + (this.game.width() - this.div.width()) / 2);
        this.div.css("top", this.game.height() - this.div.height() - 5);
        this.div.show(this.Timer(this.ad_duration))
    },
    Timer: function(b) {
        var c = setInterval(function() {
            b--;
            0 > b && (MobileAdInGameFooter.div.hide(), clearInterval(c))
        }, 1E3)
    }*/
};
var MobileAdInGameEnd = {
    /*
    ad_duration: _SETTINGS.Ad.Mobile.End.Duration,
    ad_width: _SETTINGS.Ad.Mobile.End.Width,
    ad_height: _SETTINGS.Ad.Mobile.End.Height,
    ready_in: _STRINGS.Ad.Mobile.End.ReadyIn,
    loading: _STRINGS.Ad.Mobile.End.Loading,
    close: _STRINGS.Ad.Mobile.End.Close + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
    Initialize: function() {
        if (_SETTINGS.Ad.Mobile.End.Rotation.Enabled) {
            var b = _SETTINGS.Ad.Mobile.End.Rotation.Weight,
                c = b.MobileAdInGameEnd,
                d = c + b.MobileAdInGameEnd2,
                b = d + b.MobileAdInGameEnd3,
                e = Math.floor(100 * Math.random());
            console.log("seed: ", e);
            e <= c ? this.selectedOverlayName = "MobileAdInGameEnd" : e <= d ? this.selectedOverlayName = "MobileAdInGameEnd2" : e <= b && (this.selectedOverlayName = "MobileAdInGameEnd3");
            console.log("Ad rotating end enabled")
        } else this.selectedOverlayName = "MobileAdInGameEnd", console.log("Ad rotating end disabled");
        console.log("selected:", this.selectedOverlayName);
        this.overlay = $("#" + this.selectedOverlayName);
        this.box = $("#" + this.selectedOverlayName + "-Box");
        this.game = $("#game");
        this.boxContents = {
            footer: $("#" + this.selectedOverlayName + "-Box-Footer"),
            header: $("#" + this.selectedOverlayName + "-Box-Header"),
            close: $("#" + this.selectedOverlayName + "-Box-Close"),
            body: $("#" + this.selectedOverlayName + "-Box-Body")
        };
        this.box.width(this.ad_width);
        this.box.height(this.ad_height);
        this.box.css("left", (this.overlay.width() - this.box.width()) / 2);
        this.box.css("top", (this.overlay.height() - this.box.height() - this.boxContents.header.height() - this.boxContents.footer.height()) / 2);
        this.overlay.show(this.Timer(this.ad_duration))
    },
    Timer: function(b) {
        var c = b,
            d = setInterval(function() {
                MobileAdInGameEnd.boxContents.header.text(MobileAdInGameEnd.ready_in + c + "...");
                MobileAdInGameEnd.boxContents.footer.text(MobileAdInGameEnd.loading);
                c--;
                0 > c && (clearInterval(d), MobileAdInGameEnd.boxContents.close.css("left", MobileAdInGameEnd.boxContents.body.width() - 23), MobileAdInGameEnd.boxContents.close.show(), MobileAdInGameEnd.boxContents.header.html(MobileAdInGameEnd.close), MobileAdInGameEnd.boxContents.footer.text(""))
            }, 1E3)
    },
    Close: function() {
        this.boxContents.close.hide();
        this.overlay.hide()
    }*/
};
(function(b, c) {
    function d(b, n, A) {
        if (A === c && 1 === b.nodeType)
            if (A = "data-" + n.replace(uc, "-$1").toLowerCase(), A = b.getAttribute(A), "string" == typeof A) {
                try {
                    A = "true" === A ? !0 : "false" === A ? !1 : "null" === A ? null : +A + "" === A ? +A : vc.test(A) ? f.parseJSON(A) : A
                } catch (d) {}
                f.data(b, n, A)
            } else A = c;
        return A
    }

    function e(b) {
        for (var n in b)
            if (!("data" === n && f.isEmptyObject(b[n])) && "toJSON" !== n) return !1;
        return !0
    }

    function g() {
        return !1
    }

    function l() {
        return !0
    }

    function r(b) {
        return !b || !b.parentNode || 11 === b.parentNode.nodeType
    }

    function p(b,
        n) {
        do b = b[n]; while (b && 1 !== b.nodeType);
        return b
    }

    function t(b, n, c) {
        n = n || 0;
        if (f.isFunction(n)) return f.grep(b, function(b, u) {
            return !!n.call(b, u, b) === c
        });
        if (n.nodeType) return f.grep(b, function(b) {
            return b === n === c
        });
        if ("string" == typeof n) {
            var d = f.grep(b, function(b) {
                return 1 === b.nodeType
            });
            if (wc.test(n)) return f.filter(n, d, !c);
            n = f.filter(n, d)
        }
        return f.grep(b, function(b) {
            return 0 <= f.inArray(b, n) === c
        })
    }

    function s(b) {
        var n = yb.split("|");
        b = b.createDocumentFragment();
        if (b.createElement)
            for (; n.length;) b.createElement(n.pop());
        return b
    }

    function y(b, n) {
        if (1 === n.nodeType && f.hasData(b)) {
            var c, d, D;
            d = f._data(b);
            var e = f._data(n, d),
                v = d.events;
            if (v)
                for (c in delete e.handle, e.events = {}, v) {
                    d = 0;
                    for (D = v[c].length; d < D; d++) f.event.add(n, c, v[c][d])
                }
            e.data && (e.data = f.extend({}, e.data))
        }
    }

    function m(b, n) {
        var c;
        1 === n.nodeType && (n.clearAttributes && n.clearAttributes(), n.mergeAttributes && n.mergeAttributes(b), c = n.nodeName.toLowerCase(), "object" === c ? (n.parentNode && (n.outerHTML = b.outerHTML), f.support.html5Clone && b.innerHTML && !f.trim(n.innerHTML) &&
            (n.innerHTML = b.innerHTML)) : "input" === c && zb.test(b.type) ? (n.defaultChecked = n.checked = b.checked, n.value !== b.value && (n.value = b.value)) : "option" === c ? n.selected = b.defaultSelected : "input" === c || "textarea" === c ? n.defaultValue = b.defaultValue : "script" === c && n.text !== b.text && (n.text = b.text), n.removeAttribute(f.expando))
    }

    function q(b) {
        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName("*") : "undefined" != typeof b.querySelectorAll ? b.querySelectorAll("*") : []
    }

    function x(b) {
        zb.test(b.type) && (b.defaultChecked =
            b.checked)
    }

    function F(b, n) {
        if (n in b) return n;
        for (var c = n.charAt(0).toUpperCase() + n.slice(1), d = n, f = Ab.length; f--;)
            if (n = Ab[f] + c, n in b) return n;
        return d
    }

    function N(b, n) {
        return b = n || b, "none" === f.css(b, "display") || !f.contains(b.ownerDocument, b)
    }

    function G(b, n) {
        for (var c, d, D = [], e = 0, v = b.length; e < v; e++) c = b[e], c.style && (D[e] = f._data(c, "olddisplay"), n ? (!D[e] && "none" === c.style.display && (c.style.display = ""), "" === c.style.display && N(c) && (D[e] = f._data(c, "olddisplay", Q(c.nodeName)))) : (d = R(c, "display"), !D[e] && "none" !==
            d && f._data(c, "olddisplay", d)));
        for (e = 0; e < v; e++)
            if (c = b[e], c.style && (!n || "none" === c.style.display || "" === c.style.display)) c.style.display = n ? D[e] || "" : "none";
        return b
    }

    function M(b, n, c) {
        return (b = xc.exec(n)) ? Math.max(0, b[1] - (c || 0)) + (b[2] || "px") : n
    }

    function Za(b, n, c, d) {
        n = c === (d ? "border" : "content") ? 4 : "width" === n ? 1 : 0;
        for (var D = 0; 4 > n; n += 2) "margin" === c && (D += f.css(b, c + fa[n], !0)), d ? ("content" === c && (D -= parseFloat(R(b, "padding" + fa[n])) || 0), "margin" !== c && (D -= parseFloat(R(b, "border" + fa[n] + "Width")) || 0)) : (D += parseFloat(R(b,
            "padding" + fa[n])) || 0, "padding" !== c && (D += parseFloat(R(b, "border" + fa[n] + "Width")) || 0));
        return D
    }

    function H(b, n, c) {
        var d = "width" === n ? b.offsetWidth : b.offsetHeight,
            D = !0,
            e = f.support.boxSizing && "border-box" === f.css(b, "boxSizing");
        if (0 >= d || null == d) {
            d = R(b, n);
            if (0 > d || null == d) d = b.style[n];
            if (za.test(d)) return d;
            D = e && (f.support.boxSizingReliable || d === b.style[n]);
            d = parseFloat(d) || 0
        }
        return d + Za(b, n, c || (e ? "border" : "content"), D) + "px"
    }

    function Q(b) {
        if ($a[b]) return $a[b];
        var n = f("<" + b + ">").appendTo(B.body),
            c = n.css("display");
        n.remove();
        if ("none" === c || "" === c) {
            ma = B.body.appendChild(ma || f.extend(B.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!na || !ma.createElement) na = (ma.contentWindow || ma.contentDocument).document, na.write("<!doctype html><html><body>"), na.close();
            n = na.body.appendChild(na.createElement(b));
            c = R(n, "display");
            B.body.removeChild(ma)
        }
        return $a[b] = c, c
    }

    function O(b, n, c, d) {
        var D;
        if (f.isArray(n)) f.each(n, function(n, f) {
            c || yc.test(b) ? d(b, f) : O(b + "[" + ("object" == typeof f ? n : "") + "]", f, c, d)
        });
        else if (!c &&
            "object" === f.type(n))
            for (D in n) O(b + "[" + D + "]", n[D], c, d);
        else d(b, n)
    }

    function Aa(b) {
        return function(n, c) {
            "string" != typeof n && (c = n, n = "*");
            var d, D, e = n.toLowerCase().split(ga),
                v = 0,
                g = e.length;
            if (f.isFunction(c))
                for (; v < g; v++) d = e[v], (D = /^\+/.test(d)) && (d = d.substr(1) || "*"), d = b[d] = b[d] || [], d[D ? "unshift" : "push"](c)
        }
    }

    function oa(b, n, A, d, f, e) {
        f = f || n.dataTypes[0];
        e = e || {};
        e[f] = !0;
        var v;
        f = b[f];
        for (var g = 0, m = f ? f.length : 0, l = b === ab; g < m && (l || !v); g++) v = f[g](n, A, d), "string" == typeof v && (!l || e[v] ? v = c : (n.dataTypes.unshift(v),
            v = oa(b, n, A, d, v, e)));
        return (l || !v) && !e["*"] && (v = oa(b, n, A, d, "*", e)), v
    }

    function ta(b, n) {
        var d, z, e = f.ajaxSettings.flatOptions || {};
        for (d in n) n[d] !== c && ((e[d] ? b : z || (z = {}))[d] = n[d]);
        z && f.extend(!0, b, z)
    }

    function Bb() {
        try {
            return new b.XMLHttpRequest
        } catch (u) {}
    }

    function Cb() {
        return setTimeout(function() {
            Ba = c
        }, 0), Ba = f.now()
    }

    function Db(b, n, c) {
        var d, e = 0,
            C = Ca.length,
            v = f.Deferred().always(function() {
                delete g.elem
            }),
            g = function() {
                for (var n = Ba || Cb(), n = Math.max(0, m.startTime + m.duration - n), c = 1 - (n / m.duration || 0), d =
                    0, A = m.tweens.length; d < A; d++) m.tweens[d].run(c);
                return v.notifyWith(b, [m, c, n]), 1 > c && A ? n : (v.resolveWith(b, [m]), !1)
            },
            m = v.promise({
                elem: b,
                props: f.extend({}, n),
                opts: f.extend(!0, {
                    specialEasing: {}
                }, c),
                originalProperties: n,
                originalOptions: c,
                startTime: Ba || Cb(),
                duration: c.duration,
                tweens: [],
                createTween: function(n, c) {
                    var d = f.Tween(b, m.opts, n, c, m.opts.specialEasing[n] || m.opts.easing);
                    return m.tweens.push(d), d
                },
                stop: function(n) {
                    for (var c = 0, d = n ? m.tweens.length : 0; c < d; c++) m.tweens[c].run(1);
                    return n ? v.resolveWith(b, [m, n]) : v.rejectWith(b, [m, n]), this
                }
            });
        n = m.props;
        c = m.opts.specialEasing;
        var l, q, p, x;
        for (d in n)
            if (l = f.camelCase(d), q = c[l], p = n[d], f.isArray(p) && (q = p[1], p = n[d] = p[0]), d !== l && (n[l] = p, delete n[d]), (x = f.cssHooks[l]) && "expand" in x)
                for (d in p = x.expand(p), delete n[l], p) d in n || (n[d] = p[d], c[d] = q);
            else c[l] = q;
        for (; e < C; e++)
            if (d = Ca[e].call(m, b, n, m.opts)) return d;
        var r = m;
        f.each(n, function(b, u) {
            for (var n = (ua[b] || []).concat(ua["*"]), c = 0, d = n.length; c < d && !n[c].call(r, b, u); c++);
        });
        return f.isFunction(m.opts.start) && m.opts.start.call(b,
            m), f.fx.timer(f.extend(g, {
            anim: m,
            queue: m.opts.queue,
            elem: b
        })), m.progress(m.opts.progress).done(m.opts.done, m.opts.complete).fail(m.opts.fail).always(m.opts.always)
    }

    function T(b, n, c, d, f) {
        return new T.prototype.init(b, n, c, d, f)
    }

    function Ea(b, n) {
        var c, d = {
                height: b
            },
            f = 0;
        for (n = n ? 1 : 0; 4 > f; f += 2 - n) c = fa[f], d["margin" + c] = d["padding" + c] = b;
        return n && (d.opacity = d.width = b), d
    }

    function Eb(b) {
        return f.isWindow(b) ? b : 9 === b.nodeType ? b.defaultView || b.parentWindow : !1
    }
    var Fb, Fa, B = b.document,
        Ac = b.location,
        Bc = b.navigator,
        Cc =
        b.jQuery,
        Dc = b.$,
        Gb = Array.prototype.push,
        ba = Array.prototype.slice,
        Hb = Array.prototype.indexOf,
        Ec = Object.prototype.toString,
        bb = Object.prototype.hasOwnProperty,
        cb = String.prototype.trim,
        f = function(b, n) {
            return new f.fn.init(b, n, Fb)
        },
        Ga = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,
        Fc = /\S/,
        ga = /\s+/,
        Gc = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        Hc = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
        Ib = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        Ic = /^[\],:{}\s]*$/,
        Jc = /(?:^|:|,)(?:\s*\[)+/g,
        Kc = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
        Lc = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,
        Mc = /^-ms-/,
        Nc = /-([\da-z])/gi,
        Oc = function(b, n) {
            return (n + "").toUpperCase()
        },
        Ha = function() {
            B.addEventListener ? (B.removeEventListener("DOMContentLoaded", Ha, !1), f.ready()) : "complete" === B.readyState && (B.detachEvent("onreadystatechange", Ha), f.ready())
        },
        Jb = {};
    f.fn = f.prototype = {
        constructor: f,
        init: function(b, n, d) {
            var z, e;
            if (!b) return this;
            if (b.nodeType) return this.context = this[0] = b, this.length = 1, this;
            if ("string" == typeof b) {
                "<" === b.charAt(0) && ">" === b.charAt(b.length - 1) && 3 <= b.length ? z = [null, b, null] : z = Hc.exec(b);
                if (z && (z[1] || !n)) {
                    if (z[1]) return n = n instanceof f ? n[0] : n, e = n && n.nodeType ? n.ownerDocument || n : B, b = f.parseHTML(z[1], e, !0), Ib.test(z[1]) && f.isPlainObject(n) && this.attr.call(b, n, !0), f.merge(this, b);
                    if ((n = B.getElementById(z[2])) && n.parentNode) {
                        if (n.id !== z[2]) return d.find(b);
                        this.length = 1;
                        this[0] = n
                    }
                    return this.context = B, this.selector = b, this
                }
                return !n || n.jquery ? (n || d).find(b) : this.constructor(n).find(b)
            }
            return f.isFunction(b) ? d.ready(b) : (b.selector !== c && (this.selector = b.selector, this.context = b.context), f.makeArray(b,
                this))
        },
        selector: "",
        jquery: "1.8.2",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return ba.call(this)
        },
        get: function(b) {
            return null == b ? this.toArray() : 0 > b ? this[this.length + b] : this[b]
        },
        pushStack: function(b, n, c) {
            b = f.merge(this.constructor(), b);
            return b.prevObject = this, b.context = this.context, "find" === n ? b.selector = this.selector + (this.selector ? " " : "") + c : n && (b.selector = this.selector + "." + n + "(" + c + ")"), b
        },
        each: function(b, n) {
            return f.each(this, b, n)
        },
        ready: function(b) {
            return f.ready.promise().done(b),
                this
        },
        eq: function(b) {
            return b = +b, -1 === b ? this.slice(b) : this.slice(b, b + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(ba.apply(this, arguments), "slice", ba.call(arguments).join(","))
        },
        map: function(b) {
            return this.pushStack(f.map(this, function(n, c) {
                return b.call(n, c, n)
            }))
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: Gb,
        sort: [].sort,
        splice: [].splice
    };
    f.fn.init.prototype = f.fn;
    f.extend = f.fn.extend = function() {
        var b,
            n, d, z, e, C, v = arguments[0] || {},
            g = 1,
            m = arguments.length,
            l = !1;
        "boolean" == typeof v && (l = v, v = arguments[1] || {}, g = 2);
        "object" != typeof v && !f.isFunction(v) && (v = {});
        for (m === g && (v = this, --g); g < m; g++)
            if (null != (b = arguments[g]))
                for (n in b) d = v[n], z = b[n], v !== z && (l && z && (f.isPlainObject(z) || (e = f.isArray(z))) ? (e ? (e = !1, C = d && f.isArray(d) ? d : []) : C = d && f.isPlainObject(d) ? d : {}, v[n] = f.extend(l, C, z)) : z !== c && (v[n] = z));
        return v
    };
    f.extend({
        noConflict: function(u) {
            return b.$ === f && (b.$ = Dc), u && b.jQuery === f && (b.jQuery = Cc), f
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(b) {
            b ? f.readyWait++ : f.ready(!0)
        },
        ready: function(b) {
            if (!(!0 === b ? --f.readyWait : f.isReady)) {
                if (!B.body) return setTimeout(f.ready, 1);
                f.isReady = !0;
                !0 !== b && 0 < --f.readyWait || (Fa.resolveWith(B, [f]), f.fn.trigger && f(B).trigger("ready").off("ready"))
            }
        },
        isFunction: function(b) {
            return "function" === f.type(b)
        },
        isArray: Array.isArray || function(b) {
            return "array" === f.type(b)
        },
        isWindow: function(b) {
            return null != b && b == b.window
        },
        isNumeric: function(b) {
            return !isNaN(parseFloat(b)) && isFinite(b)
        },
        type: function(b) {
            return null == b ? String(b) : Jb[Ec.call(b)] || "object"
        },
        isPlainObject: function(b) {
            if (!b || "object" !== f.type(b) || b.nodeType || f.isWindow(b)) return !1;
            try {
                if (b.constructor && !bb.call(b, "constructor") && !bb.call(b.constructor.prototype, "isPrototypeOf")) return !1
            } catch (n) {
                return !1
            }
            for (var d in b);
            return d === c || bb.call(b, d)
        },
        isEmptyObject: function(b) {
            for (var n in b) return !1;
            return !0
        },
        error: function(b) {
            throw Error(b);
        },
        parseHTML: function(b, n, c) {
            var d;
            return !b || "string" != typeof b ? null : ("boolean" ==
                typeof n && (c = n, n = 0), n = n || B, (d = Ib.exec(b)) ? [n.createElement(d[1])] : (d = f.buildFragment([b], n, c ? null : []), f.merge([], (d.cacheable ? f.clone(d.fragment) : d.fragment).childNodes)))
        },
        parseJSON: function(u) {
            if (!u || "string" != typeof u) return null;
            u = f.trim(u);
            if (b.JSON && b.JSON.parse) return b.JSON.parse(u);
            if (Ic.test(u.replace(Kc, "@").replace(Lc, "]").replace(Jc, ""))) return (new Function("return " + u))();
            f.error("Invalid JSON: " + u)
        },
        parseXML: function(u) {
            var n, d;
            if (!u || "string" != typeof u) return null;
            try {
                b.DOMParser ?
                    (d = new DOMParser, n = d.parseFromString(u, "text/xml")) : (n = new ActiveXObject("Microsoft.XMLDOM"), n.async = "false", n.loadXML(u))
            } catch (z) {
                n = c
            }
            return (!n || !n.documentElement || n.getElementsByTagName("parsererror").length) && f.error("Invalid XML: " + u), n
        },
        noop: function() {},
        globalEval: function(u) {
            u && Fc.test(u) && (b.execScript || function(u) {
                b.eval.call(b, u)
            })(u)
        },
        camelCase: function(b) {
            return b.replace(Mc, "ms-").replace(Nc, Oc)
        },
        nodeName: function(b, n) {
            return b.nodeName && b.nodeName.toLowerCase() === n.toLowerCase()
        },
        each: function(b, n, d) {
            var z, e = 0,
                C = b.length,
                v = C === c || f.isFunction(b);
            if (d)
                if (v)
                    for (z in b) {
                        if (!1 === n.apply(b[z], d)) break
                    } else
                        for (; e < C && !1 !== n.apply(b[e++], d););
                else if (v)
                for (z in b) {
                    if (!1 === n.call(b[z], z, b[z])) break
                } else
                    for (; e < C && !1 !== n.call(b[e], e, b[e++]););
            return b
        },
        trim: cb && !cb.call("\ufeff\u00a0") ? function(b) {
            return null == b ? "" : cb.call(b)
        } : function(b) {
            return null == b ? "" : (b + "").replace(Gc, "")
        },
        makeArray: function(b, n) {
            var c, d = n || [];
            return null != b && (c = f.type(b), null == b.length || "string" === c || "function" ===
                c || "regexp" === c || f.isWindow(b) ? Gb.call(d, b) : f.merge(d, b)), d
        },
        inArray: function(b, c, d) {
            var f;
            if (c) {
                if (Hb) return Hb.call(c, b, d);
                f = c.length;
                for (d = d ? 0 > d ? Math.max(0, f + d) : d : 0; d < f; d++)
                    if (d in c && c[d] === b) return d
            }
            return -1
        },
        merge: function(b, n) {
            var d = n.length,
                f = b.length,
                e = 0;
            if ("number" == typeof d)
                for (; e < d; e++) b[f++] = n[e];
            else
                for (; n[e] !== c;) b[f++] = n[e++];
            return b.length = f, b
        },
        grep: function(b, c, d) {
            var f, e = [],
                C = 0,
                v = b.length;
            for (d = !!d; C < v; C++) f = !!c(b[C], C), d !== f && e.push(b[C]);
            return e
        },
        map: function(b, n, d) {
            var z,
                e, C = [],
                v = 0,
                g = b.length;
            if (b instanceof f || g !== c && "number" == typeof g && (0 < g && b[0] && b[g - 1] || 0 === g || f.isArray(b)))
                for (; v < g; v++) z = n(b[v], v, d), null != z && (C[C.length] = z);
            else
                for (e in b) z = n(b[e], e, d), null != z && (C[C.length] = z);
            return C.concat.apply([], C)
        },
        guid: 1,
        proxy: function(b, n) {
            var d, z, e;
            return "string" == typeof n && (d = b[n], n = b, b = d), f.isFunction(b) ? (z = ba.call(arguments, 2), e = function() {
                return b.apply(n, z.concat(ba.call(arguments)))
            }, e.guid = b.guid = b.guid || f.guid++, e) : c
        },
        access: function(b, n, d, z, e, C, v) {
            var g, m =
                null == d,
                l = 0,
                q = b.length;
            if (d && "object" == typeof d) {
                for (l in d) f.access(b, n, l, d[l], 1, C, z);
                e = 1
            } else if (z !== c) {
                g = v === c && f.isFunction(z);
                m && (g ? (g = n, n = function(b, u, c) {
                    return g.call(f(b), c)
                }) : (n.call(b, z), n = null));
                if (n)
                    for (; l < q; l++) n(b[l], d, g ? z.call(b[l], l, n(b[l], d)) : z, v);
                e = 1
            }
            return e ? b : m ? n.call(b) : q ? n(b[0], d) : C
        },
        now: function() {
            return (new Date).getTime()
        }
    });
    f.ready.promise = function(u) {
        if (!Fa)
            if (Fa = f.Deferred(), "complete" === B.readyState) setTimeout(f.ready, 1);
            else if (B.addEventListener) B.addEventListener("DOMContentLoaded",
            Ha, !1), b.addEventListener("load", f.ready, !1);
        else {
            B.attachEvent("onreadystatechange", Ha);
            b.attachEvent("onload", f.ready);
            var c = !1;
            try {
                c = null == b.frameElement && B.documentElement
            } catch (d) {}
            c && c.doScroll && function D() {
                if (!f.isReady) {
                    try {
                        c.doScroll("left")
                    } catch (b) {
                        return setTimeout(D, 50)
                    }
                    f.ready()
                }
            }()
        }
        return Fa.promise(u)
    };
    f.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(b, c) {
        Jb["[object " + c + "]"] = c.toLowerCase()
    });
    Fb = f(B);
    var Kb = {};
    f.Callbacks = function(b) {
        var n;
        if ("string" ==
            typeof b) {
            if (!(n = Kb[b])) {
                n = b;
                var d = Kb[n] = {};
                n = (f.each(n.split(ga), function(b, u) {
                    d[u] = !0
                }), d)
            }
        } else n = f.extend({}, b);
        b = n;
        var z, e, g, v, m, l, q = [],
            p = !b.once && [],
            x = function(c) {
                z = b.memory && c;
                e = !0;
                l = v || 0;
                v = 0;
                m = q.length;
                for (g = !0; q && l < m; l++)
                    if (!1 === q[l].apply(c[0], c[1]) && b.stopOnFalse) {
                        z = !1;
                        break
                    }
                g = !1;
                q && (p ? p.length && x(p.shift()) : z ? q = [] : r.disable())
            },
            r = {
                add: function() {
                    if (q) {
                        var c = q.length;
                        (function zc(c) {
                            f.each(c, function(c, n) {
                                var d = f.type(n);
                                "function" === d && (!b.unique || !r.has(n)) ? q.push(n) : n && n.length && "string" !==
                                    d && zc(n)
                            })
                        })(arguments);
                        g ? m = q.length : z && (v = c, x(z))
                    }
                    return this
                },
                remove: function() {
                    return q && f.each(arguments, function(b, u) {
                        for (var c; - 1 < (c = f.inArray(u, q, c));) q.splice(c, 1), g && (c <= m && m--, c <= l && l--)
                    }), this
                },
                has: function(b) {
                    return -1 < f.inArray(b, q)
                },
                empty: function() {
                    return q = [], this
                },
                disable: function() {
                    return q = p = z = c, this
                },
                disabled: function() {
                    return !q
                },
                lock: function() {
                    return p = c, z || r.disable(), this
                },
                locked: function() {
                    return !p
                },
                fireWith: function(b, u) {
                    return u = u || [], u = [b, u.slice ? u.slice() : u], q && (!e || p) &&
                        (g ? p.push(u) : x(u)), this
                },
                fire: function() {
                    return r.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!e
                }
            };
        return r
    };
    f.extend({
        Deferred: function(b) {
            var c = [
                    ["resolve", "done", f.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", f.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", f.Callbacks("memory")]
                ],
                d = "pending",
                z = {
                    state: function() {
                        return d
                    },
                    always: function() {
                        return e.done(arguments).fail(arguments), this
                    },
                    then: function() {
                        var b = arguments;
                        return f.Deferred(function(u) {
                            f.each(c, function(c,
                                n) {
                                var d = n[0],
                                    A = b[c];
                                e[n[1]](f.isFunction(A) ? function() {
                                    var b = A.apply(this, arguments);
                                    b && f.isFunction(b.promise) ? b.promise().done(u.resolve).fail(u.reject).progress(u.notify) : u[d + "With"](this === e ? u : this, [b])
                                } : u[d])
                            });
                            b = null
                        }).promise()
                    },
                    promise: function(b) {
                        return null != b ? f.extend(b, z) : z
                    }
                },
                e = {};
            return z.pipe = z.then, f.each(c, function(b, u) {
                var f = u[2],
                    g = u[3];
                z[u[1]] = f.add;
                g && f.add(function() {
                    d = g
                }, c[b ^ 1][2].disable, c[2][2].lock);
                e[u[0]] = f.fire;
                e[u[0] + "With"] = f.fireWith
            }), z.promise(e), b && b.call(e, e), e
        },
        when: function(b) {
            var c = 0,
                d = ba.call(arguments),
                z = d.length,
                e = 1 !== z || b && f.isFunction(b.promise) ? z : 0,
                g = 1 === e ? b : f.Deferred(),
                v = function(b, u, c) {
                    return function(n) {
                        u[b] = this;
                        c[b] = 1 < arguments.length ? ba.call(arguments) : n;
                        c === m ? g.notifyWith(u, c) : --e || g.resolveWith(u, c)
                    }
                },
                m, l, q;
            if (1 < z) {
                m = Array(z);
                l = Array(z);
                for (q = Array(z); c < z; c++) d[c] && f.isFunction(d[c].promise) ? d[c].promise().done(v(c, q, d)).fail(g.reject).progress(v(c, l, m)) : --e
            }
            return e || g.resolveWith(q, d), g.promise()
        }
    });
    var Pc = f,
        db, P, Ia, ha, Ja, Ka, U, ia, La, eb,
        va, Lb, K = B.createElement("div");
    K.setAttribute("className", "t");
    K.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
    Ia = K.getElementsByTagName("*");
    ha = K.getElementsByTagName("a")[0];
    ha.style.cssText = "top:1px;float:left;opacity:.5";
    if (!Ia || !Ia.length) db = {};
    else {
        Ja = B.createElement("select");
        Ka = Ja.appendChild(B.createElement("option"));
        U = K.getElementsByTagName("input")[0];
        P = {
            leadingWhitespace: 3 === K.firstChild.nodeType,
            tbody: !K.getElementsByTagName("tbody").length,
            htmlSerialize: !!K.getElementsByTagName("link").length,
            style: /top/.test(ha.getAttribute("style")),
            hrefNormalized: "/a" === ha.getAttribute("href"),
            opacity: /^0.5/.test(ha.style.opacity),
            cssFloat: !!ha.style.cssFloat,
            checkOn: "on" === U.value,
            optSelected: Ka.selected,
            getSetAttribute: "t" !== K.className,
            enctype: !!B.createElement("form").enctype,
            html5Clone: "<:nav></:nav>" !== B.createElement("nav").cloneNode(!0).outerHTML,
            boxModel: "CSS1Compat" === B.compatMode,
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        };
        U.checked = !0;
        P.noCloneChecked = U.cloneNode(!0).checked;
        Ja.disabled = !0;
        P.optDisabled = !Ka.disabled;
        try {
            delete K.test
        } catch (Rd) {
            P.deleteExpando = !1
        }!K.addEventListener && K.attachEvent && K.fireEvent && (K.attachEvent("onclick", Lb = function() {
            P.noCloneEvent = !1
        }), K.cloneNode(!0).fireEvent("onclick"), K.detachEvent("onclick", Lb));
        U = B.createElement("input");
        U.value = "t";
        U.setAttribute("type", "radio");
        P.radioValue = "t" === U.value;
        U.setAttribute("checked",
            "checked");
        U.setAttribute("name", "t");
        K.appendChild(U);
        ia = B.createDocumentFragment();
        ia.appendChild(K.lastChild);
        P.checkClone = ia.cloneNode(!0).cloneNode(!0).lastChild.checked;
        P.appendChecked = U.checked;
        ia.removeChild(U);
        ia.appendChild(K);
        if (K.attachEvent)
            for (eb in {
                submit: !0,
                change: !0,
                focusin: !0
            }) La = "on" + eb, (va = La in K) || (K.setAttribute(La, "return;"), va = "function" == typeof K[La]), P[eb + "Bubbles"] = va;
        db = (f(function() {
            var u, c, d, f, e = B.getElementsByTagName("body")[0];
            e && (u = B.createElement("div"), u.style.cssText =
                "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px", e.insertBefore(u, e.firstChild), c = B.createElement("div"), u.appendChild(c), c.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", d = c.getElementsByTagName("td"), d[0].style.cssText = "padding:0;margin:0;border:0;display:none", va = 0 === d[0].offsetHeight, d[0].style.display = "", d[1].style.display = "none", P.reliableHiddenOffsets = va && 0 === d[0].offsetHeight, c.innerHTML = "", c.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",
                P.boxSizing = 4 === c.offsetWidth, P.doesNotIncludeMarginInBodyOffset = 1 !== e.offsetTop, b.getComputedStyle && (P.pixelPosition = "1%" !== (b.getComputedStyle(c, null) || {}).top, P.boxSizingReliable = "4px" === (b.getComputedStyle(c, null) || {
                    width: "4px"
                }).width, f = B.createElement("div"), f.style.cssText = c.style.cssText = "padding:0;margin:0;border:0;display:block;overflow:hidden;", f.style.marginRight = f.style.width = "0", c.style.width = "1px", c.appendChild(f), P.reliableMarginRight = !parseFloat((b.getComputedStyle(f, null) || {}).marginRight)),
                "undefined" != typeof c.style.zoom && (c.innerHTML = "", c.style.cssText = "padding:0;margin:0;border:0;display:block;overflow:hidden;width:1px;padding:1px;display:inline;zoom:1", P.inlineBlockNeedsLayout = 3 === c.offsetWidth, c.style.display = "block", c.style.overflow = "visible", c.innerHTML = "<div></div>", c.firstChild.style.width = "5px", P.shrinkWrapBlocks = 3 !== c.offsetWidth, u.style.zoom = 1), e.removeChild(u))
        }), ia.removeChild(K), Ia = ha = Ja = Ka = U = ia = K = null, P)
    }
    Pc.support = db;
    var vc = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
        uc = /([A-Z])/g;
    f.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(b) {
            return b = b.nodeType ? f.cache[b[f.expando]] : b[f.expando], !!b && !e(b)
        },
        data: function(b, n, d, e) {
            if (f.acceptData(b)) {
                var D, g, v = f.expando,
                    m = "string" == typeof n,
                    l = b.nodeType,
                    q = l ? f.cache : b,
                    p = l ? b[v] : b[v] && v;
                if (p && q[p] && (e || q[p].data) || !(m && d === c)) {
                    p || (l ? b[v] = p = f.deletedIds.pop() || f.guid++ : p = v);
                    q[p] || (q[p] = {},
                        l || (q[p].toJSON = f.noop));
                    if ("object" == typeof n || "function" == typeof n) e ? q[p] = f.extend(q[p], n) : q[p].data = f.extend(q[p].data, n);
                    return D = q[p], e || (D.data || (D.data = {}), D = D.data), d !== c && (D[f.camelCase(n)] = d), m ? (g = D[n], null == g && (g = D[f.camelCase(n)])) : g = D, g
                }
            }
        },
        removeData: function(b, c, d) {
            if (f.acceptData(b)) {
                var z, D, g, v = b.nodeType,
                    m = v ? f.cache : b,
                    l = v ? b[f.expando] : f.expando;
                if (m[l]) {
                    if (c && (z = d ? m[l] : m[l].data)) {
                        f.isArray(c) || (c in z ? c = [c] : (c = f.camelCase(c), c in z ? c = [c] : c = c.split(" ")));
                        D = 0;
                        for (g = c.length; D < g; D++) delete z[c[D]];
                        if (!(d ? e : f.isEmptyObject)(z)) return
                    }
                    if (d || !(delete m[l].data, !e(m[l]))) v ? f.cleanData([b], !0) : f.support.deleteExpando || m != m.window ? delete m[l] : m[l] = null
                }
            }
        },
        _data: function(b, c, d) {
            return f.data(b, c, d, !0)
        },
        acceptData: function(b) {
            var c = b.nodeName && f.noData[b.nodeName.toLowerCase()];
            return !c || !0 !== c && b.getAttribute("classid") === c
        }
    });
    f.fn.extend({
        data: function(b, n) {
            var A, e, D, g, v, m = this[0],
                l = 0,
                q = null;
            if (b === c) {
                if (this.length && (q = f.data(m), 1 === m.nodeType && !f._data(m, "parsedAttrs"))) {
                    D = m.attributes;
                    for (v = D.length; l <
                        v; l++) g = D[l].name, g.indexOf("data-") || (g = f.camelCase(g.substring(5)), d(m, g, q[g]));
                    f._data(m, "parsedAttrs", !0)
                }
                return q
            }
            return "object" == typeof b ? this.each(function() {
                f.data(this, b)
            }) : (A = b.split(".", 2), A[1] = A[1] ? "." + A[1] : "", e = A[1] + "!", f.access(this, function(n) {
                if (n === c) return q = this.triggerHandler("getData" + e, [A[0]]), q === c && m && (q = f.data(m, b), q = d(m, b, q)), q === c && A[1] ? this.data(A[0]) : q;
                A[1] = n;
                this.each(function() {
                    var c = f(this);
                    c.triggerHandler("setData" + e, A);
                    f.data(this, b, n);
                    c.triggerHandler("changeData" +
                        e, A)
                })
            }, null, n, 1 < arguments.length, null, !1))
        },
        removeData: function(b) {
            return this.each(function() {
                f.removeData(this, b)
            })
        }
    });
    f.extend({
        queue: function(b, c, d) {
            var e;
            if (b) return c = (c || "fx") + "queue", e = f._data(b, c), d && (!e || f.isArray(d) ? e = f._data(b, c, f.makeArray(d)) : e.push(d)), e || []
        },
        dequeue: function(b, c) {
            c = c || "fx";
            var d = f.queue(b, c),
                e = d.length,
                D = d.shift(),
                g = f._queueHooks(b, c),
                v = function() {
                    f.dequeue(b, c)
                };
            "inprogress" === D && (D = d.shift(), e--);
            D && ("fx" === c && d.unshift("inprogress"), delete g.stop, D.call(b, v, g));
            !e && g && g.empty.fire()
        },
        _queueHooks: function(b, c) {
            var d = c + "queueHooks";
            return f._data(b, d) || f._data(b, d, {
                empty: f.Callbacks("once memory").add(function() {
                    f.removeData(b, c + "queue", !0);
                    f.removeData(b, d, !0)
                })
            })
        }
    });
    f.fn.extend({
        queue: function(b, n) {
            var d = 2;
            return "string" != typeof b && (n = b, b = "fx", d--), arguments.length < d ? f.queue(this[0], b) : n === c ? this : this.each(function() {
                var c = f.queue(this, b, n);
                f._queueHooks(this, b);
                "fx" === b && "inprogress" !== c[0] && f.dequeue(this, b)
            })
        },
        dequeue: function(b) {
            return this.each(function() {
                f.dequeue(this,
                    b)
            })
        },
        delay: function(b, c) {
            return b = f.fx ? f.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function(c, n) {
                var d = setTimeout(c, b);
                n.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(b) {
            return this.queue(b || "fx", [])
        },
        promise: function(b, n) {
            var d, e = 1,
                g = f.Deferred(),
                m = this,
                v = this.length,
                l = function() {
                    --e || g.resolveWith(m, [m])
                };
            "string" != typeof b && (n = b, b = c);
            for (b = b || "fx"; v--;)(d = f._data(m[v], b + "queueHooks")) && d.empty && (e++, d.empty.add(l));
            return l(), g.promise(n)
        }
    });
    var ca, Mb, Nb, Ob = /[\t\r\n]/g,
        Qc = /\r/g,
        Rc = /^(?:button|input)$/i,
        Sc = /^(?:button|input|object|select|textarea)$/i,
        Tc = /^a(?:rea|)$/i,
        Pb = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        Qb = f.support.getSetAttribute;
    f.fn.extend({
        attr: function(b, c) {
            return f.access(this, f.attr, b, c, 1 < arguments.length)
        },
        removeAttr: function(b) {
            return this.each(function() {
                f.removeAttr(this, b)
            })
        },
        prop: function(b, c) {
            return f.access(this, f.prop, b, c, 1 < arguments.length)
        },
        removeProp: function(b) {
            return b = f.propFix[b] ||
                b, this.each(function() {
                    try {
                        this[b] = c, delete this[b]
                    } catch (n) {}
                })
        },
        addClass: function(b) {
            var c, d, e, g, m, v, l;
            if (f.isFunction(b)) return this.each(function(c) {
                f(this).addClass(b.call(this, c, this.className))
            });
            if (b && "string" == typeof b) {
                c = b.split(ga);
                d = 0;
                for (e = this.length; d < e; d++)
                    if (g = this[d], 1 === g.nodeType)
                        if (!g.className && 1 === c.length) g.className = b;
                        else {
                            m = " " + g.className + " ";
                            v = 0;
                            for (l = c.length; v < l; v++) 0 > m.indexOf(" " + c[v] + " ") && (m += c[v] + " ");
                            g.className = f.trim(m)
                        }
            }
            return this
        },
        removeClass: function(b) {
            var n,
                d, e, g, m, v, l;
            if (f.isFunction(b)) return this.each(function(c) {
                f(this).removeClass(b.call(this, c, this.className))
            });
            if (b && "string" == typeof b || b === c) {
                n = (b || "").split(ga);
                v = 0;
                for (l = this.length; v < l; v++)
                    if (e = this[v], 1 === e.nodeType && e.className) {
                        d = (" " + e.className + " ").replace(Ob, " ");
                        g = 0;
                        for (m = n.length; g < m; g++)
                            for (; 0 <= d.indexOf(" " + n[g] + " ");) d = d.replace(" " + n[g] + " ", " ");
                        e.className = b ? f.trim(d) : ""
                    }
            }
            return this
        },
        toggleClass: function(b, c) {
            var d = typeof b,
                e = "boolean" == typeof c;
            return f.isFunction(b) ? this.each(function(d) {
                f(this).toggleClass(b.call(this,
                    d, this.className, c), c)
            }) : this.each(function() {
                if ("string" === d)
                    for (var g, m = 0, v = f(this), l = c, q = b.split(ga); g = q[m++];) l = e ? l : !v.hasClass(g), v[l ? "addClass" : "removeClass"](g);
                else if ("undefined" === d || "boolean" === d) this.className && f._data(this, "__className__", this.className), this.className = this.className || !1 === b ? "" : f._data(this, "__className__") || ""
            })
        },
        hasClass: function(b) {
            b = " " + b + " ";
            for (var c = 0, d = this.length; c < d; c++)
                if (1 === this[c].nodeType && 0 <= (" " + this[c].className + " ").replace(Ob, " ").indexOf(b)) return !0;
            return !1
        },
        val: function(b) {
            var n, d, e, g = this[0];
            if (arguments.length) return e = f.isFunction(b), this.each(function(d) {
                var A, g = f(this);
                if (1 === this.nodeType && (e ? A = b.call(this, d, g.val()) : A = b, null == A ? A = "" : "number" == typeof A ? A += "" : f.isArray(A) && (A = f.map(A, function(b) {
                    return null == b ? "" : b + ""
                })), n = f.valHooks[this.type] || f.valHooks[this.nodeName.toLowerCase()], !n || !("set" in n) || n.set(this, A, "value") === c)) this.value = A
            });
            if (g) return n = f.valHooks[g.type] || f.valHooks[g.nodeName.toLowerCase()], n && "get" in n && (d = n.get(g,
                "value")) !== c ? d : (d = g.value, "string" == typeof d ? d.replace(Qc, "") : null == d ? "" : d)
        }
    });
    f.extend({
        valHooks: {
            option: {
                get: function(b) {
                    var c = b.attributes.value;
                    return !c || c.specified ? b.value : b.text
                }
            },
            select: {
                get: function(b) {
                    var c, d, e = b.selectedIndex,
                        g = [],
                        m = b.options,
                        v = "select-one" === b.type;
                    if (0 > e) return null;
                    b = v ? e : 0;
                    for (d = v ? e + 1 : m.length; b < d; b++)
                        if (c = m[b], c.selected && (f.support.optDisabled ? !c.disabled : null === c.getAttribute("disabled")) && (!c.parentNode.disabled || !f.nodeName(c.parentNode, "optgroup"))) {
                            c = f(c).val();
                            if (v) return c;
                            g.push(c)
                        }
                    return v && !g.length && m.length ? f(m[e]).val() : g
                },
                set: function(b, c) {
                    var d = f.makeArray(c);
                    return f(b).find("option").each(function() {
                        this.selected = 0 <= f.inArray(f(this).val(), d)
                    }), d.length || (b.selectedIndex = -1), d
                }
            }
        },
        attrFn: {},
        attr: function(b, n, d, e) {
            var g, m, v = b.nodeType;
            if (b && !(3 === v || 8 === v || 2 === v)) {
                if (e && f.isFunction(f.fn[n])) return f(b)[n](d);
                if ("undefined" == typeof b.getAttribute) return f.prop(b, n, d);
                (e = 1 !== v || !f.isXMLDoc(b)) && (n = n.toLowerCase(), m = f.attrHooks[n] || (Pb.test(n) ? Mb :
                    ca));
                if (d !== c) {
                    if (null === d) {
                        f.removeAttr(b, n);
                        return
                    }
                    return m && "set" in m && e && (g = m.set(b, d, n)) !== c ? g : (b.setAttribute(n, d + ""), d)
                }
                return m && "get" in m && e && null !== (g = m.get(b, n)) ? g : (g = b.getAttribute(n), null === g ? c : g)
            }
        },
        removeAttr: function(b, c) {
            var d, e, g, m, v = 0;
            if (c && 1 === b.nodeType)
                for (e = c.split(ga); v < e.length; v++)(g = e[v]) && (d = f.propFix[g] || g, m = Pb.test(g), m || f.attr(b, g, ""), b.removeAttribute(Qb ? g : d), m && d in b && (b[d] = !1))
        },
        attrHooks: {
            type: {
                set: function(b, c) {
                    if (Rc.test(b.nodeName) && b.parentNode) f.error("type property can't be changed");
                    else if (!f.support.radioValue && "radio" === c && f.nodeName(b, "input")) {
                        var d = b.value;
                        return b.setAttribute("type", c), d && (b.value = d), c
                    }
                }
            },
            value: {
                get: function(b, c) {
                    return ca && f.nodeName(b, "button") ? ca.get(b, c) : c in b ? b.value : null
                },
                set: function(b, c, d) {
                    if (ca && f.nodeName(b, "button")) return ca.set(b, c, d);
                    b.value = c
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(b, n, d) {
            var e, g, m, v = b.nodeType;
            if (b && !(3 === v || 8 === v || 2 === v)) return m = 1 !== v || !f.isXMLDoc(b), m && (n = f.propFix[n] || n, g = f.propHooks[n]), d !== c ? g && "set" in g && (e = g.set(b, d, n)) !== c ? e : b[n] = d : g && "get" in g && null !== (e = g.get(b, n)) ? e : b[n]
        },
        propHooks: {
            tabIndex: {
                get: function(b) {
                    var n = b.getAttributeNode("tabindex");
                    return n && n.specified ? parseInt(n.value, 10) : Sc.test(b.nodeName) || Tc.test(b.nodeName) && b.href ? 0 : c
                }
            }
        }
    });
    Mb = {
        get: function(b,
            n) {
            var d, e = f.prop(b, n);
            return !0 === e || "boolean" != typeof e && (d = b.getAttributeNode(n)) && !1 !== d.nodeValue ? n.toLowerCase() : c
        },
        set: function(b, c, d) {
            var e;
            return !1 === c ? f.removeAttr(b, d) : (e = f.propFix[d] || d, e in b && (b[e] = !0), b.setAttribute(d, d.toLowerCase())), d
        }
    };
    Qb || (Nb = {
        name: !0,
        id: !0,
        coords: !0
    }, ca = f.valHooks.button = {
        get: function(b, d) {
            var f;
            return f = b.getAttributeNode(d), f && (Nb[d] ? "" !== f.value : f.specified) ? f.value : c
        },
        set: function(b, c, d) {
            var f = b.getAttributeNode(d);
            return f || (f = B.createAttribute(d), b.setAttributeNode(f)),
                f.value = c + ""
        }
    }, f.each(["width", "height"], function(b, c) {
        f.attrHooks[c] = f.extend(f.attrHooks[c], {
            set: function(b, u) {
                if ("" === u) return b.setAttribute(c, "auto"), u
            }
        })
    }), f.attrHooks.contenteditable = {
        get: ca.get,
        set: function(b, c, d) {
            "" === c && (c = "false");
            ca.set(b, c, d)
        }
    });
    f.support.hrefNormalized || f.each(["href", "src", "width", "height"], function(b, d) {
        f.attrHooks[d] = f.extend(f.attrHooks[d], {
            get: function(b) {
                b = b.getAttribute(d, 2);
                return null === b ? c : b
            }
        })
    });
    f.support.style || (f.attrHooks.style = {
        get: function(b) {
            return b.style.cssText.toLowerCase() ||
                c
        },
        set: function(b, c) {
            return b.style.cssText = c + ""
        }
    });
    f.support.optSelected || (f.propHooks.selected = f.extend(f.propHooks.selected, {
        get: function(b) {
            b = b.parentNode;
            return b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex), null
        }
    }));
    f.support.enctype || (f.propFix.enctype = "encoding");
    f.support.checkOn || f.each(["radio", "checkbox"], function() {
        f.valHooks[this] = {
            get: function(b) {
                return null === b.getAttribute("value") ? "on" : b.value
            }
        }
    });
    f.each(["radio", "checkbox"], function() {
        f.valHooks[this] = f.extend(f.valHooks[this], {
            set: function(b, c) {
                if (f.isArray(c)) return b.checked = 0 <= f.inArray(f(b).val(), c)
            }
        })
    });
    var fb = /^(?:textarea|input|select)$/i,
        Rb = /^([^\.]*|)(?:\.(.+)|)$/,
        Uc = /(?:^|\s)hover(\.\S+|)\b/,
        Vc = /^key/,
        Wc = /^(?:mouse|contextmenu)|click/,
        Sb = /^(?:focusinfocus|focusoutblur)$/,
        Tb = function(b) {
            return f.event.special.hover ? b : b.replace(Uc, "mouseenter$1 mouseleave$1")
        };
    f.event = {
        add: function(b, d, e, z, g) {
            var m, v, l, q, p, x, Da, r, t;
            if (!(3 === b.nodeType || 8 === b.nodeType || !d || !e || !(m = f._data(b)))) {
                e.handler && (Da = e, e = Da.handler, g = Da.selector);
                e.guid || (e.guid = f.guid++);
                (l = m.events) || (m.events = l = {});
                (v = m.handle) || (m.handle = v = function(b) {
                    return "undefined" != typeof f && (!b || f.event.triggered !== b.type) ? f.event.dispatch.apply(v.elem, arguments) : c
                }, v.elem = b);
                d = f.trim(Tb(d)).split(" ");
                for (m = 0; m < d.length; m++) {
                    q = Rb.exec(d[m]) || [];
                    p = q[1];
                    x = (q[2] || "").split(".").sort();
                    t = f.event.special[p] || {};
                    p = (g ? t.delegateType : t.bindType) || p;
                    t = f.event.special[p] || {};
                    q = f.extend({
                        type: p,
                        origType: q[1],
                        data: z,
                        handler: e,
                        guid: e.guid,
                        selector: g,
                        needsContext: g && f.expr.match.needsContext.test(g),
                        namespace: x.join(".")
                    }, Da);
                    r = l[p];
                    if (!r && (r = l[p] = [], r.delegateCount = 0, !t.setup || !1 === t.setup.call(b, z, x, v))) b.addEventListener ? b.addEventListener(p, v, !1) : b.attachEvent && b.attachEvent("on" + p, v);
                    t.add && (t.add.call(b, q), q.handler.guid || (q.handler.guid = e.guid));
                    g ? r.splice(r.delegateCount++, 0, q) : r.push(q);
                    f.event.global[p] = !0
                }
                b = null
            }
        },
        global: {},
        remove: function(b, c, d, e, g) {
            var m, v, l, q, p, x, r, t, s, y, F = f.hasData(b) && f._data(b);
            if (F && (r = F.events)) {
                c = f.trim(Tb(c || "")).split(" ");
                for (m = 0; m < c.length; m++)
                    if (v = Rb.exec(c[m]) || [], l = q = v[1], v = v[2], l) {
                        t = f.event.special[l] || {};
                        l = (e ? t.delegateType : t.bindType) || l;
                        s = r[l] || [];
                        p = s.length;
                        v = v ? RegExp("(^|\\.)" + v.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                        for (x = 0; x < s.length; x++) y = s[x], (g || q === y.origType) && (!d || d.guid === y.guid) && (!v || v.test(y.namespace)) && (!e || e === y.selector || "**" === e && y.selector) && (s.splice(x--, 1), y.selector && s.delegateCount--, t.remove && t.remove.call(b, y));
                        0 === s.length && p !== s.length && ((!t.teardown || !1 === t.teardown.call(b, v, F.handle)) && f.removeEvent(b,
                            l, F.handle), delete r[l])
                    } else
                        for (l in r) f.event.remove(b, l + c[m], d, e, !0);
                f.isEmptyObject(r) && (delete F.handle, f.removeData(b, "events", !0))
            }
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(u, d, e, g) {
            if (!e || 3 !== e.nodeType && 8 !== e.nodeType) {
                var m, l, v, q, p, x, r, t = u.type || u;
                q = [];
                if (!Sb.test(t + f.event.triggered) && (0 <= t.indexOf("!") && (t = t.slice(0, -1), m = !0), 0 <= t.indexOf(".") && (q = t.split("."), t = q.shift(), q.sort()), e && !f.event.customEvent[t] || f.event.global[t]))
                    if (u = "object" == typeof u ? u[f.expando] ?
                        u : new f.Event(t, u) : new f.Event(t), u.type = t, u.isTrigger = !0, u.exclusive = m, u.namespace = q.join("."), u.namespace_re = u.namespace ? RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, q = 0 > t.indexOf(":") ? "on" + t : "", e) {
                        if (u.result = c, u.target || (u.target = e), d = null != d ? f.makeArray(d) : [], d.unshift(u), p = f.event.special[t] || {}, !(p.trigger && !1 === p.trigger.apply(e, d))) {
                            r = [
                                [e, p.bindType || t]
                            ];
                            if (!g && !p.noBubble && !f.isWindow(e)) {
                                l = p.delegateType || t;
                                m = Sb.test(l + t) ? e : e.parentNode;
                                for (v = e; m; m = m.parentNode) r.push([m, l]),
                                    v = m;
                                v === (e.ownerDocument || B) && r.push([v.defaultView || v.parentWindow || b, l])
                            }
                            for (l = 0; l < r.length && !u.isPropagationStopped(); l++) m = r[l][0], u.type = r[l][1], (x = (f._data(m, "events") || {})[u.type] && f._data(m, "handle")) && x.apply(m, d), (x = q && m[q]) && f.acceptData(m) && x.apply && !1 === x.apply(m, d) && u.preventDefault();
                            return u.type = t, !g && !u.isDefaultPrevented() && (!p._default || !1 === p._default.apply(e.ownerDocument, d)) && ("click" !== t || !f.nodeName(e, "a")) && f.acceptData(e) && q && e[t] && ("focus" !== t && "blur" !== t || 0 !== u.target.offsetWidth) &&
                                !f.isWindow(e) && (v = e[q], v && (e[q] = null), f.event.triggered = t, e[t](), f.event.triggered = c, v && (e[q] = v)), u.result
                        }
                    } else
                        for (l in e = f.cache, e) e[l].events && e[l].events[t] && f.event.trigger(u, d, e[l].handle.elem, !0)
            }
        },
        dispatch: function(u) {
            u = f.event.fix(u || b.event);
            var d, e, g, m, l, v, q = (f._data(this, "events") || {})[u.type] || [],
                p = q.delegateCount,
                x = ba.call(arguments),
                t = !u.exclusive && !u.namespace,
                r = f.event.special[u.type] || {},
                s = [];
            x[0] = u;
            u.delegateTarget = this;
            if (!(r.preDispatch && !1 === r.preDispatch.call(this, u))) {
                if (p &&
                    (!u.button || "click" !== u.type))
                    for (e = u.target; e != this; e = e.parentNode || this)
                        if (!0 !== e.disabled || "click" !== u.type) {
                            m = {};
                            l = [];
                            for (d = 0; d < p; d++) g = q[d], v = g.selector, m[v] === c && (m[v] = g.needsContext ? 0 <= f(v, this).index(e) : f.find(v, this, null, [e]).length), m[v] && l.push(g);
                            l.length && s.push({
                                elem: e,
                                matches: l
                            })
                        }
                q.length > p && s.push({
                    elem: this,
                    matches: q.slice(p)
                });
                for (d = 0; d < s.length && !u.isPropagationStopped(); d++) {
                    m = s[d];
                    u.currentTarget = m.elem;
                    for (e = 0; e < m.matches.length && !u.isImmediatePropagationStopped(); e++)
                        if (g = m.matches[e],
                            t || !u.namespace && !g.namespace || u.namespace_re && u.namespace_re.test(g.namespace)) u.data = g.data, u.handleObj = g, g = ((f.event.special[g.origType] || {}).handle || g.handler).apply(m.elem, x), g !== c && (u.result = g, !1 === g && (u.preventDefault(), u.stopPropagation()))
                }
                return r.postDispatch && r.postDispatch.call(this, u), u.result
            }
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: ["char", "charCode", "key", "keyCode"],
            filter: function(b, c) {
                return null == b.which && (b.which = null != c.charCode ? c.charCode : c.keyCode), b
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(b, d) {
                var f, e, g, m = d.button,
                    v = d.fromElement;
                return null == b.pageX && null != d.clientX && (f = b.target.ownerDocument || B, e = f.documentElement, g = f.body, b.pageX = d.clientX + (e && e.scrollLeft || g && g.scrollLeft || 0) - (e && e.clientLeft ||
                    g && g.clientLeft || 0), b.pageY = d.clientY + (e && e.scrollTop || g && g.scrollTop || 0) - (e && e.clientTop || g && g.clientTop || 0)), !b.relatedTarget && v && (b.relatedTarget = v === b.target ? d.toElement : v), !b.which && m !== c && (b.which = m & 1 ? 1 : m & 2 ? 3 : m & 4 ? 2 : 0), b
            }
        },
        fix: function(b) {
            if (b[f.expando]) return b;
            var c, d, e = b,
                g = f.event.fixHooks[b.type] || {},
                m = g.props ? this.props.concat(g.props) : this.props;
            b = f.Event(e);
            for (c = m.length; c;) d = m[--c], b[d] = e[d];
            return b.target || (b.target = e.srcElement || B), 3 === b.target.nodeType && (b.target = b.target.parentNode),
                b.metaKey = !!b.metaKey, g.filter ? g.filter(b, e) : b
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(b, c, d) {
                    f.isWindow(this) && (this.onbeforeunload = d)
                },
                teardown: function(b, c) {
                    this.onbeforeunload === c && (this.onbeforeunload = null)
                }
            }
        },
        simulate: function(b, c, d, e) {
            b = f.extend(new f.Event, d, {
                type: b,
                isSimulated: !0,
                originalEvent: {}
            });
            e ? f.event.trigger(b, null, c) : f.event.dispatch.call(c, b);
            b.isDefaultPrevented() && d.preventDefault()
        }
    };
    f.event.handle =
        f.event.dispatch;
    f.removeEvent = B.removeEventListener ? function(b, c, d) {
        b.removeEventListener && b.removeEventListener(c, d, !1)
    } : function(b, c, d) {
        c = "on" + c;
        b.detachEvent && ("undefined" == typeof b[c] && (b[c] = null), b.detachEvent(c, d))
    };
    f.Event = function(b, c) {
        if (this instanceof f.Event) b && b.type ? (this.originalEvent = b, this.type = b.type, this.isDefaultPrevented = b.defaultPrevented || !1 === b.returnValue || b.getPreventDefault && b.getPreventDefault() ? l : g) : this.type = b, c && f.extend(this, c), this.timeStamp = b && b.timeStamp || f.now(),
            this[f.expando] = !0;
        else return new f.Event(b, c)
    };
    f.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = l;
            var b = this.originalEvent;
            b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1)
        },
        stopPropagation: function() {
            this.isPropagationStopped = l;
            var b = this.originalEvent;
            b && (b.stopPropagation && b.stopPropagation(), b.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = l;
            this.stopPropagation()
        },
        isDefaultPrevented: g,
        isPropagationStopped: g,
        isImmediatePropagationStopped: g
    };
    f.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(b, c) {
        f.event.special[b] = {
            delegateType: c,
            bindType: c,
            handle: function(b) {
                var d, u = b.relatedTarget,
                    e = b.handleObj;
                if (!u || u !== this && !f.contains(this, u)) b.type = e.origType, d = e.handler.apply(this, arguments), b.type = c;
                return d
            }
        }
    });
    f.support.submitBubbles || (f.event.special.submit = {
        setup: function() {
            if (f.nodeName(this, "form")) return !1;
            f.event.add(this, "click._submit keypress._submit", function(b) {
                b = b.target;
                (b = f.nodeName(b, "input") || f.nodeName(b, "button") ?
                    b.form : c) && !f._data(b, "_submit_attached") && (f.event.add(b, "submit._submit", function(b) {
                    b._submit_bubble = !0
                }), f._data(b, "_submit_attached", !0))
            })
        },
        postDispatch: function(b) {
            b._submit_bubble && (delete b._submit_bubble, this.parentNode && !b.isTrigger && f.event.simulate("submit", this.parentNode, b, !0))
        },
        teardown: function() {
            if (f.nodeName(this, "form")) return !1;
            f.event.remove(this, "._submit")
        }
    });
    f.support.changeBubbles || (f.event.special.change = {
        setup: function() {
            if (fb.test(this.nodeName)) {
                if ("checkbox" === this.type ||
                    "radio" === this.type) f.event.add(this, "propertychange._change", function(b) {
                    "checked" === b.originalEvent.propertyName && (this._just_changed = !0)
                }), f.event.add(this, "click._change", function(b) {
                    this._just_changed && !b.isTrigger && (this._just_changed = !1);
                    f.event.simulate("change", this, b, !0)
                });
                return !1
            }
            f.event.add(this, "beforeactivate._change", function(b) {
                b = b.target;
                fb.test(b.nodeName) && !f._data(b, "_change_attached") && (f.event.add(b, "change._change", function(b) {
                    this.parentNode && !b.isSimulated && !b.isTrigger &&
                        f.event.simulate("change", this.parentNode, b, !0)
                }), f._data(b, "_change_attached", !0))
            })
        },
        handle: function(b) {
            var c = b.target;
            if (this !== c || b.isSimulated || b.isTrigger || "radio" !== c.type && "checkbox" !== c.type) return b.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            return f.event.remove(this, "._change"), !fb.test(this.nodeName)
        }
    });
    f.support.focusinBubbles || f.each({
        focus: "focusin",
        blur: "focusout"
    }, function(b, c) {
        var d = 0,
            e = function(b) {
                f.event.simulate(c, b.target, f.event.fix(b), !0)
            };
        f.event.special[c] = {
            setup: function() {
                0 === d++ && B.addEventListener(b, e, !0)
            },
            teardown: function() {
                0 === --d && B.removeEventListener(b, e, !0)
            }
        }
    });
    f.fn.extend({
        on: function(b, d, e, m, l) {
            var q, v;
            if ("object" == typeof b) {
                "string" != typeof d && (e = e || d, d = c);
                for (v in b) this.on(v, d, e, b[v], l);
                return this
            }
            null == e && null == m ? (m = d, e = d = c) : null == m && ("string" == typeof d ? (m = e, e = c) : (m = e, e = d, d = c));
            if (!1 === m) m = g;
            else if (!m) return this;
            return 1 === l && (q = m, m = function(b) {
                return f().off(b), q.apply(this, arguments)
            }, m.guid = q.guid || (q.guid = f.guid++)), this.each(function() {
                f.event.add(this,
                    b, m, e, d)
            })
        },
        one: function(b, c, d, f) {
            return this.on(b, c, d, f, 1)
        },
        off: function(b, d, e) {
            var m, l;
            if (b && b.preventDefault && b.handleObj) return m = b.handleObj, f(b.delegateTarget).off(m.namespace ? m.origType + "." + m.namespace : m.origType, m.selector, m.handler), this;
            if ("object" == typeof b) {
                for (l in b) this.off(l, d, b[l]);
                return this
            }
            if (!1 === d || "function" == typeof d) e = d, d = c;
            return !1 === e && (e = g), this.each(function() {
                f.event.remove(this, b, e, d)
            })
        },
        bind: function(b, c, d) {
            return this.on(b, null, c, d)
        },
        unbind: function(b, c) {
            return this.off(b,
                null, c)
        },
        live: function(b, c, d) {
            return f(this.context).on(b, this.selector, c, d), this
        },
        die: function(b, c) {
            return f(this.context).off(b, this.selector || "**", c), this
        },
        delegate: function(b, c, d, f) {
            return this.on(c, b, d, f)
        },
        undelegate: function(b, c, d) {
            return 1 === arguments.length ? this.off(b, "**") : this.off(c, b || "**", d)
        },
        trigger: function(b, c) {
            return this.each(function() {
                f.event.trigger(b, c, this)
            })
        },
        triggerHandler: function(b, c) {
            if (this[0]) return f.event.trigger(b, c, this[0], !0)
        },
        toggle: function(b) {
            var c = arguments,
                d =
                b.guid || f.guid++,
                e = 0,
                g = function(d) {
                    var g = (f._data(this, "lastToggle" + b.guid) || 0) % e;
                    return f._data(this, "lastToggle" + b.guid, g + 1), d.preventDefault(), c[g].apply(this, arguments) || !1
                };
            for (g.guid = d; e < c.length;) c[e++].guid = d;
            return this.click(g)
        },
        hover: function(b, c) {
            return this.mouseenter(b).mouseleave(c || b)
        }
    });
    f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),
        function(b, c) {
            f.fn[c] = function(b, d) {
                return null == d && (d = b, b = null), 0 < arguments.length ? this.on(c, null, b, d) : this.trigger(c)
            };
            Vc.test(c) && (f.event.fixHooks[c] = f.event.keyHooks);
            Wc.test(c) && (f.event.fixHooks[c] = f.event.mouseHooks)
        });
    var Xc = b,
        E = function(b, c, d, f) {
            d = d || [];
            c = c || Y;
            var e, g, m, l, q = c.nodeType;
            if (!b || "string" != typeof b) return d;
            if (1 !== q && 9 !== q) return [];
            m = Ma(c);
            if (!m && !f && (e = Yc.exec(b)))
                if (l = e[1])
                    if (9 === q) {
                        g = c.getElementById(l);
                        if (!g || !g.parentNode) return d;
                        if (g.id === l) return d.push(g), d
                    } else {
                        if (c.ownerDocument &&
                            (g = c.ownerDocument.getElementById(l)) && Ub(c, g) && g.id === l) return d.push(g), d
                    } else {
                if (e[2]) return pa.apply(d, qa.call(c.getElementsByTagName(b), 0)), d;
                if ((l = e[3]) && Vb && c.getElementsByClassName) return pa.apply(d, qa.call(c.getElementsByClassName(l), 0)), d
            }
            return gb(b.replace(Na, "$1"), c, d, f, m)
        },
        wa = function(b) {
            return function(c) {
                return "input" === c.nodeName.toLowerCase() && c.type === b
            }
        },
        Wb = function(b) {
            return function(c) {
                var d = c.nodeName.toLowerCase();
                return ("input" === d || "button" === d) && c.type === b
            }
        },
        ja = function(b) {
            return Z(function(c) {
                return c = +c, Z(function(d, f) {
                    for (var e, g = b([], d.length, c), m = g.length; m--;) d[e = g[m]] && (d[e] = !(f[e] = d[e]))
                })
            })
        },
        Oa = function(b, c, d) {
            if (b === c) return d;
            for (b = b.nextSibling; b;) {
                if (b === c) return -1;
                b = b.nextSibling
            }
            return 1
        },
        Qa = function(b, c) {
            var d, f, e, g, m, l, q;
            if (m = Xb[I][b]) return c ? 0 : m.slice(0);
            m = b;
            l = [];
            for (q = L.preFilter; m;) {
                if (!d || (f = Zc.exec(m))) f && (m = m.slice(f[0].length)), l.push(e = []);
                d = !1;
                if (f = $c.exec(m)) e.push(d = new Yb(f.shift())), m = m.slice(d.length), d.type = f[0].replace(Na, " ");
                for (g in L.filter)(f = Pa[g].exec(m)) &&
                    (!q[g] || (f = q[g](f, Y, !0))) && (e.push(d = new Yb(f.shift())), m = m.slice(d.length), d.type = g, d.matches = f);
                if (!d) break
            }
            return c ? m.length : m ? E.error(b) : Xb(b, l).slice(0)
        },
        ib = function(b, c, d) {
            var f = c.dir,
                e = d && "parentNode" === c.dir,
                g = ad++;
            return c.first ? function(c, d, n) {
                for (; c = c[f];)
                    if (e || 1 === c.nodeType) return b(c, d, n)
            } : function(c, d, n) {
                if (n)
                    for (; c = c[f];) {
                        if ((e || 1 === c.nodeType) && b(c, d, n)) return c
                    } else
                        for (var m, A = xa + " " + g + " ", l = A + hb; c = c[f];)
                            if (e || 1 === c.nodeType) {
                                if ((m = c[I]) === l) return c.sizset;
                                if ("string" == typeof m &&
                                    0 === m.indexOf(A)) {
                                    if (c.sizset) return c
                                } else {
                                    c[I] = l;
                                    if (b(c, d, n)) return c.sizset = !0, c;
                                    c.sizset = !1
                                }
                            }
            }
        },
        jb = function(b) {
            return 1 < b.length ? function(c, d, f) {
                for (var e = b.length; e--;)
                    if (!b[e](c, d, f)) return !1;
                return !0
            } : b[0]
        },
        Ra = function(b, c, d, f, e) {
            for (var g, m = [], l = 0, q = b.length, p = null != c; l < q; l++)
                if (g = b[l])
                    if (!d || d(g, f, e)) m.push(g), p && c.push(l);
            return m
        },
        kb = function(b, c, d, f, e, g) {
            return f && !f[I] && (f = kb(f)), e && !e[I] && (e = kb(e, g)), Z(function(g, m, l, q) {
                if (!g || !e) {
                    var p, C, x = [],
                        t = [],
                        r = m.length;
                    if (!(C = g)) {
                        C = c || "*";
                        var s =
                            l.nodeType ? [l] : l,
                            y = [];
                        p = 0;
                        for (var F = s.length; p < F; p++) E(C, s[p], y, g);
                        C = y
                    }
                    s = b && (g || !c) ? Ra(C, x, b, l, q) : C;
                    y = d ? e || (g ? b : r || f) ? [] : m : s;
                    d && d(s, y, l, q);
                    if (f) {
                        C = Ra(y, t);
                        f(C, [], l, q);
                        for (l = C.length; l--;)
                            if (p = C[l]) y[t[l]] = !(s[t[l]] = p)
                    }
                    if (g)
                        for (l = b && y.length; l--;) {
                            if (p = y[l]) g[x[l]] = !(m[x[l]] = p)
                        } else y = Ra(y === m ? y.splice(r, y.length) : y), e ? e(null, m, y, q) : pa.apply(m, y)
                }
            })
        },
        lb = function(b) {
            var c, d, f, e = b.length,
                g = L.relative[b[0].type];
            d = g || L.relative[" "];
            for (var m = g ? 1 : 0, l = ib(function(b) {
                return b === c
            }, d, !0), q = ib(function(b) {
                return -1 <
                    Zb.call(c, b)
            }, d, !0), p = [
                function(b, d, u) {
                    return !g && (u || d !== Sa) || ((c = d).nodeType ? l(b, d, u) : q(b, d, u))
                }
            ]; m < e; m++)
                if (d = L.relative[b[m].type]) p = [ib(jb(p), d)];
                else {
                    d = L.filter[b[m].type].apply(null, b[m].matches);
                    if (d[I]) {
                        for (f = ++m; f < e && !L.relative[b[f].type]; f++);
                        return kb(1 < m && jb(p), 1 < m && b.slice(0, m - 1).join("").replace(Na, "$1"), d, m < f && lb(b.slice(m, f)), f < e && lb(b = b.slice(f)), f < e && b.join(""))
                    }
                    p.push(d)
                }
            return jb(p)
        },
        gb = function(b, c, d, f, e) {
            var g, m, l, q, p = Qa(b);
            if (!f && 1 === p.length) {
                m = p[0] = p[0].slice(0);
                if (2 < m.length &&
                    "ID" === (l = m[0]).type && 9 === c.nodeType && !e && L.relative[m[1].type]) {
                    c = L.find.ID(l.matches[0].replace(ka, ""), c, e)[0];
                    if (!c) return d;
                    b = b.slice(m.shift().length)
                }
                for (g = Pa.POS.test(b) ? -1 : m.length - 1; 0 <= g; g--) {
                    l = m[g];
                    if (L.relative[q = l.type]) break;
                    if (q = L.find[q])
                        if (f = q(l.matches[0].replace(ka, ""), mb.test(m[0].type) && c.parentNode || c, e)) {
                            m.splice(g, 1);
                            b = f.length && m.join("");
                            if (!b) return pa.apply(d, qa.call(f, 0)), d;
                            break
                        }
                }
            }
            return nb(b, p)(f, c, e, d, mb.test(b)), d
        },
        $b = function() {},
        hb, ob, L, Ta, Ma, Ub, nb, pb, ya, Sa, ac = !0,
        I = ("sizcache" + Math.random()).replace(".", ""),
        Yb = String,
        Y = Xc.document,
        X = Y.documentElement,
        xa = 0,
        ad = 0,
        bd = [].pop,
        pa = [].push,
        qa = [].slice,
        Zb = [].indexOf || function(b) {
            for (var c = 0, d = this.length; c < d; c++)
                if (this[c] === b) return c;
            return -1
        },
        Z = function(b, c) {
            return b[I] = null == c || c, b
        },
        qb = function() {
            var b = {},
                c = [];
            return Z(function(d, f) {
                return c.push(d) > L.cacheLength && delete b[c.shift()], b[d] = f
            }, b)
        },
        bc = qb(),
        Xb = qb(),
        cc = qb(),
        dc = "\\[[\\x20\\t\\r\\n\\f]*((?:\\\\.|[-\\w]|[^\\x00-\\xa0])+)[\\x20\\t\\r\\n\\f]*(?:([*^$|!~]?=)[\\x20\\t\\r\\n\\f]*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" +
        "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+".replace("w", "w#") + ")|)|)[\\x20\\t\\r\\n\\f]*\\]",
        rb = ":((?:\\\\.|[-\\w]|[^\\x00-\\xa0])+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + dc + ")|[^:]|\\\\.)*|.*))\\)|)",
        Na = /^[\x20\t\r\n\f]+|((?:^|[^\\])(?:\\.)*)[\x20\t\r\n\f]+$/g,
        Zc = /^[\x20\t\r\n\f]*,[\x20\t\r\n\f]*/,
        $c = /^[\x20\t\r\n\f]*([\x20\t\r\n\f>+~])[\x20\t\r\n\f]*/,
        cd = RegExp(rb),
        Yc = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,
        mb = /[\x20\t\r\n\f]*[+~]/,
        dd = /h\d/i,
        ed = /input|select|textarea|button/i,
        ka = /\\(?!\\)/g,
        Pa = {
            ID: /^#((?:\\.|[-\w]|[^\x00-\xa0])+)/,
            CLASS: /^\.((?:\\.|[-\w]|[^\x00-\xa0])+)/,
            NAME: /^\[name=['"]?((?:\\.|[-\w]|[^\x00-\xa0])+)['"]?\]/,
            TAG: RegExp("^(" + "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+".replace("w", "w*") + ")"),
            ATTR: RegExp("^" + dc),
            PSEUDO: RegExp("^" + rb),
            POS: /:(even|odd|eq|gt|lt|nth|first|last)(?:\([\x20\t\r\n\f]*((?:-\d)?\d*)[\x20\t\r\n\f]*\)|)(?=[^-]|$)/i,
            CHILD: RegExp("^:(only|nth|first|last)-child(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)",
                "i"),
            needsContext: RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)", "i")
        },
        da = function(b) {
            var c = Y.createElement("div");
            try {
                return b(c)
            } catch (d) {
                return !1
            } finally {}
        },
        fd = da(function(b) {
            return b.appendChild(Y.createComment("")), !b.getElementsByTagName("*").length
        }),
        gd = da(function(b) {
            return b.innerHTML = "<a href='#'></a>", b.firstChild && "undefined" !== typeof b.firstChild.getAttribute && "#" === b.firstChild.getAttribute("href")
        }),
        hd = da(function(b) {
            b.innerHTML = "<select></select>";
            b = typeof b.lastChild.getAttribute("multiple");
            return "boolean" !== b && "string" !== b
        }),
        Vb = da(function(b) {
            return b.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>", !b.getElementsByClassName || !b.getElementsByClassName("e").length ? !1 : (b.lastChild.className = "e", 2 === b.getElementsByClassName("e").length)
        }),
        id = da(function(b) {
            b.id = I + 0;
            b.innerHTML = "<a name='" + I + "'></a><div name='" + I + "'></div>";
            X.insertBefore(b, X.firstChild);
            var c = Y.getElementsByName &&
                Y.getElementsByName(I).length === 2 + Y.getElementsByName(I + 0).length;
            return ob = !Y.getElementById(I), X.removeChild(b), c
        });
    try {
        qa.call(X.childNodes, 0)[0].nodeType
    } catch (Sd) {
        qa = function(b) {
            for (var c, d = []; c = this[b]; b++) d.push(c);
            return d
        }
    }
    E.matches = function(b, c) {
        return E(b, null, null, c)
    };
    E.matchesSelector = function(b, c) {
        return 0 < E(c, null, null, [b]).length
    };
    Ta = E.getText = function(b) {
        var c, d = "",
            f = 0;
        if (c = b.nodeType)
            if (1 === c || 9 === c || 11 === c) {
                if ("string" == typeof b.textContent) return b.textContent;
                for (b = b.firstChild; b; b =
                    b.nextSibling) d += Ta(b)
            } else {
                if (3 === c || 4 === c) return b.nodeValue
            } else
            for (; c = b[f]; f++) d += Ta(c);
        return d
    };
    Ma = E.isXML = function(b) {
        return (b = b && (b.ownerDocument || b).documentElement) ? "HTML" !== b.nodeName : !1
    };
    Ub = E.contains = X.contains ? function(b, c) {
        var d = 9 === b.nodeType ? b.documentElement : b,
            f = c && c.parentNode;
        return b === f || !(!f || !(1 === f.nodeType && d.contains && d.contains(f)))
    } : X.compareDocumentPosition ? function(b, c) {
        return c && !!(b.compareDocumentPosition(c) & 16)
    } : function(b, c) {
        for (; c = c.parentNode;)
            if (c === b) return !0;
        return !1
    };
    E.attr = function(b, c) {
        var d, f = Ma(b);
        return f || (c = c.toLowerCase()), (d = L.attrHandle[c]) ? d(b) : f || hd ? b.getAttribute(c) : (d = b.getAttributeNode(c), d ? "boolean" == typeof b[c] ? b[c] ? c : null : d.specified ? d.value : null : null)
    };
    L = E.selectors = {
        cacheLength: 50,
        createPseudo: Z,
        match: Pa,
        attrHandle: gd ? {} : {
            href: function(b) {
                return b.getAttribute("href", 2)
            },
            type: function(b) {
                return b.getAttribute("type")
            }
        },
        find: {
            ID: ob ? function(b, c, d) {
                if ("undefined" !== typeof c.getElementById && !d) return (b = c.getElementById(b)) && b.parentNode ? [b] : []
            } : function(b, c, d) {
                if ("undefined" !== typeof c.getElementById && !d) return (c = c.getElementById(b)) ? c.id === b || "undefined" !== typeof c.getAttributeNode && c.getAttributeNode("id").value === b ? [c] : void 0 : []
            },
            TAG: fd ? function(b, c) {
                if ("undefined" !== typeof c.getElementsByTagName) return c.getElementsByTagName(b)
            } : function(b, c) {
                var d = c.getElementsByTagName(b);
                if ("*" === b) {
                    for (var f, e = [], g = 0; f = d[g]; g++) 1 === f.nodeType && e.push(f);
                    return e
                }
                return d
            },
            NAME: id && function(b, c) {
                if ("undefined" !== typeof c.getElementsByName) return c.getElementsByName(name)
            },
            CLASS: Vb && function(b, c, d) {
                if ("undefined" !== typeof c.getElementsByClassName && !d) return c.getElementsByClassName(b)
            }
        },
        relative: {
            ">": {
                dir: "parentNode",
                first: !0
            },
            " ": {
                dir: "parentNode"
            },
            "+": {
                dir: "previousSibling",
                first: !0
            },
            "~": {
                dir: "previousSibling"
            }
        },
        preFilter: {
            ATTR: function(b) {
                return b[1] = b[1].replace(ka, ""), b[3] = (b[4] || b[5] || "").replace(ka, ""), "~=" === b[2] && (b[3] = " " + b[3] + " "), b.slice(0, 4)
            },
            CHILD: function(b) {
                return b[1] = b[1].toLowerCase(), "nth" === b[1] ? (b[2] || E.error(b[0]), b[3] = +(b[3] ? b[4] + (b[5] || 1) :
                    2 * ("even" === b[2] || "odd" === b[2])), b[4] = +(b[6] + b[7] || "odd" === b[2])) : b[2] && E.error(b[0]), b
            },
            PSEUDO: function(b) {
                var c, d;
                if (Pa.CHILD.test(b[0])) return null;
                if (b[3]) b[2] = b[3];
                else if (c = b[4]) cd.test(c) && (d = Qa(c, !0)) && (d = c.indexOf(")", c.length - d) - c.length) && (c = c.slice(0, d), b[0] = b[0].slice(0, d)), b[2] = c;
                return b.slice(0, 3)
            }
        },
        filter: {
            ID: ob ? function(b) {
                return b = b.replace(ka, ""),
                    function(c) {
                        return c.getAttribute("id") === b
                    }
            } : function(b) {
                return b = b.replace(ka, ""),
                    function(c) {
                        return (c = "undefined" !== typeof c.getAttributeNode &&
                            c.getAttributeNode("id")) && c.value === b
                    }
            },
            TAG: function(b) {
                return "*" === b ? function() {
                    return !0
                } : (b = b.replace(ka, "").toLowerCase(), function(c) {
                    return c.nodeName && c.nodeName.toLowerCase() === b
                })
            },
            CLASS: function(b) {
                var c = bc[I][b];
                return c || (c = bc(b, RegExp("(^|[\\x20\\t\\r\\n\\f])" + b + "([\\x20\\t\\r\\n\\f]|$)"))),
                    function(b) {
                        return c.test(b.className || "undefined" !== typeof b.getAttribute && b.getAttribute("class") || "")
                    }
            },
            ATTR: function(b, c, d) {
                return function(f) {
                    f = E.attr(f, b);
                    return null == f ? "!=" === c : c ? (f += "", "=" ===
                        c ? f === d : "!=" === c ? f !== d : "^=" === c ? d && 0 === f.indexOf(d) : "*=" === c ? d && -1 < f.indexOf(d) : "$=" === c ? d && f.substr(f.length - d.length) === d : "~=" === c ? -1 < (" " + f + " ").indexOf(d) : "|=" === c ? f === d || f.substr(0, d.length + 1) === d + "-" : !1) : !0
                }
            },
            CHILD: function(b, c, d, f) {
                return "nth" === b ? function(b) {
                    var c, e;
                    c = b.parentNode;
                    if (1 === d && 0 === f) return !0;
                    if (c) {
                        e = 0;
                        for (c = c.firstChild; c && !(1 === c.nodeType && (e++, b === c)); c = c.nextSibling);
                    }
                    return e -= f, e === d || 0 === e % d && 0 <= e / d
                } : function(c) {
                    var d = c;
                    switch (b) {
                        case "only":
                        case "first":
                            for (; d = d.previousSibling;)
                                if (1 ===
                                    d.nodeType) return !1;
                            if ("first" === b) return !0;
                            d = c;
                        case "last":
                            for (; d = d.nextSibling;)
                                if (1 === d.nodeType) return !1;
                            return !0
                    }
                }
            },
            PSEUDO: function(b, c) {
                var d, f = L.pseudos[b] || L.setFilters[b.toLowerCase()] || E.error("unsupported pseudo: " + b);
                return f[I] ? f(c) : 1 < f.length ? (d = [b, b, "", c], L.setFilters.hasOwnProperty(b.toLowerCase()) ? Z(function(b, d) {
                    for (var e, u = f(b, c), g = u.length; g--;) e = Zb.call(b, u[g]), b[e] = !(d[e] = u[g])
                }) : function(b) {
                    return f(b, 0, d)
                }) : f
            }
        },
        pseudos: {
            not: Z(function(b) {
                var c = [],
                    d = [],
                    f = nb(b.replace(Na, "$1"));
                return f[I] ? Z(function(b, c, d, e) {
                    e = f(b, null, e, []);
                    for (var u = b.length; u--;)
                        if (d = e[u]) b[u] = !(c[u] = d)
                }) : function(b, e, u) {
                    return c[0] = b, f(c, null, u, d), !d.pop()
                }
            }),
            has: Z(function(b) {
                return function(c) {
                    return 0 < E(b, c).length
                }
            }),
            contains: Z(function(b) {
                return function(c) {
                    return -1 < (c.textContent || c.innerText || Ta(c)).indexOf(b)
                }
            }),
            enabled: function(b) {
                return !1 === b.disabled
            },
            disabled: function(b) {
                return !0 === b.disabled
            },
            checked: function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && !!b.checked || "option" ===
                    c && !!b.selected
            },
            selected: function(b) {
                return b.parentNode && b.parentNode.selectedIndex, !0 === b.selected
            },
            parent: function(b) {
                return !L.pseudos.empty(b)
            },
            empty: function(b) {
                var c;
                for (b = b.firstChild; b;) {
                    if ("@" < b.nodeName || 3 === (c = b.nodeType) || 4 === c) return !1;
                    b = b.nextSibling
                }
                return !0
            },
            header: function(b) {
                return dd.test(b.nodeName)
            },
            text: function(b) {
                var c, d;
                return "input" === b.nodeName.toLowerCase() && "text" === (c = b.type) && (null == (d = b.getAttribute("type")) || d.toLowerCase() === c)
            },
            radio: wa("radio"),
            checkbox: wa("checkbox"),
            file: wa("file"),
            password: wa("password"),
            image: wa("image"),
            submit: Wb("submit"),
            reset: Wb("reset"),
            button: function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && "button" === b.type || "button" === c
            },
            input: function(b) {
                return ed.test(b.nodeName)
            },
            focus: function(b) {
                var c = b.ownerDocument;
                return b === c.activeElement && (!c.hasFocus || c.hasFocus()) && (!!b.type || !!b.href)
            },
            active: function(b) {
                return b === b.ownerDocument.activeElement
            },
            first: ja(function() {
                return [0]
            }),
            last: ja(function(b, c) {
                return [c - 1]
            }),
            eq: ja(function(b,
                c, d) {
                return [0 > d ? d + c : d]
            }),
            even: ja(function(b, c) {
                for (var d = 0; d < c; d += 2) b.push(d);
                return b
            }),
            odd: ja(function(b, c) {
                for (var d = 1; d < c; d += 2) b.push(d);
                return b
            }),
            lt: ja(function(b, c, d) {
                for (c = 0 > d ? d + c : d; 0 <= --c;) b.push(c);
                return b
            }),
            gt: ja(function(b, c, d) {
                for (d = 0 > d ? d + c : d; ++d < c;) b.push(d);
                return b
            })
        }
    };
    pb = X.compareDocumentPosition ? function(b, c) {
        return b === c ? (ya = !0, 0) : (!b.compareDocumentPosition || !c.compareDocumentPosition ? b.compareDocumentPosition : b.compareDocumentPosition(c) & 4) ? -1 : 1
    } : function(b, c) {
        if (b === c) return ya = !0, 0;
        if (b.sourceIndex && c.sourceIndex) return b.sourceIndex - c.sourceIndex;
        var d, f, e = [],
            g = [];
        d = b.parentNode;
        f = c.parentNode;
        var m = d;
        if (d === f) return Oa(b, c);
        if (!d) return -1;
        if (!f) return 1;
        for (; m;) e.unshift(m), m = m.parentNode;
        for (m = f; m;) g.unshift(m), m = m.parentNode;
        d = e.length;
        f = g.length;
        for (m = 0; m < d && m < f; m++)
            if (e[m] !== g[m]) return Oa(e[m], g[m]);
        return m === d ? Oa(b, g[m], -1) : Oa(e[m], c, 1)
    };
    [0, 0].sort(pb);
    ac = !ya;
    E.uniqueSort = function(b) {
        var c, d = 1;
        ya = ac;
        b.sort(pb);
        if (ya)
            for (; c = b[d]; d++) c === b[d - 1] && b.splice(d--, 1);
        return b
    };
    E.error = function(b) {
        throw Error("Syntax error, unrecognized expression: " + b);
    };
    nb = E.compile = function(b, c) {
        var d, f = [],
            e = [],
            g = cc[I][b];
        if (!g) {
            c || (c = Qa(b));
            for (d = c.length; d--;) g = lb(c[d]), g[I] ? f.push(g) : e.push(g);
            var m = 0 < f.length,
                l = 0 < e.length,
                q = function(b, c, d, u, n) {
                    var g, A, p = [],
                        x = 0,
                        C = "0",
                        t = b && [],
                        r = null != n,
                        s = Sa,
                        y = b || l && L.find.TAG("*", n && c.parentNode || c),
                        F = xa += null == s ? 1 : Math.E;
                    for (r && (Sa = c !== Y && c, hb = q.el); null != (n = y[C]); C++) {
                        if (l && n) {
                            for (g = 0; A = e[g]; g++)
                                if (A(n, c, d)) {
                                    u.push(n);
                                    break
                                }
                            r && (xa = F, hb =
                                ++q.el)
                        }
                        m && ((n = !A && n) && x--, b && t.push(n))
                    }
                    x += C;
                    if (m && C !== x) {
                        for (g = 0; A = f[g]; g++) A(t, p, c, d);
                        if (b) {
                            if (0 < x)
                                for (; C--;)!t[C] && !p[C] && (p[C] = bd.call(u));
                            p = Ra(p)
                        }
                        pa.apply(u, p);
                        r && !b && 0 < p.length && 1 < x + f.length && E.uniqueSort(u)
                    }
                    return r && (xa = F, Sa = s), t
                };
            d = (q.el = 0, m ? Z(q) : q);
            g = cc(b, d)
        }
        return g
    };
    if (Y.querySelectorAll) {
        var ec, jd = gb,
            kd = /'|\\/g,
            ld = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
            aa = [":focus"],
            Ua = [":active", ":focus"],
            Va = X.matchesSelector || X.mozMatchesSelector || X.webkitMatchesSelector || X.oMatchesSelector ||
            X.msMatchesSelector;
        da(function(b) {
            b.innerHTML = "<select><option selected=''></option></select>";
            b.querySelectorAll("[selected]").length || aa.push("\\[[\\x20\\t\\r\\n\\f]*(?:checked|disabled|ismap|multiple|readonly|selected|value)");
            b.querySelectorAll(":checked").length || aa.push(":checked")
        });
        da(function(b) {
            b.innerHTML = "<p test=''></p>";
            b.querySelectorAll("[test^='']").length && aa.push("[*^$]=[\\x20\\t\\r\\n\\f]*(?:\"\"|'')");
            b.innerHTML = "<input type='hidden'/>";
            b.querySelectorAll(":enabled").length ||
                aa.push(":enabled", ":disabled")
        });
        aa = RegExp(aa.join("|"));
        gb = function(b, c, d, f, e) {
            if (!f && !e && (!aa || !aa.test(b))) {
                var g, m, l = !0,
                    q = I;
                m = c;
                g = 9 === c.nodeType && b;
                if (1 === c.nodeType && "object" !== c.nodeName.toLowerCase()) {
                    g = Qa(b);
                    (l = c.getAttribute("id")) ? q = l.replace(kd, "\\$&"): c.setAttribute("id", q);
                    q = "[id='" + q + "'] ";
                    for (m = g.length; m--;) g[m] = q + g[m].join("");
                    m = mb.test(b) && c.parentNode || c;
                    g = g.join(",")
                }
                if (g) try {
                    return pa.apply(d, qa.call(m.querySelectorAll(g), 0)), d
                } catch (p) {} finally {
                    l || c.removeAttribute("id")
                }
            }
            return jd(b,
                c, d, f, e)
        };
        Va && (da(function(b) {
            ec = Va.call(b, "div");
            try {
                Va.call(b, "[test!='']:sizzle"), Ua.push("!=", rb)
            } catch (c) {}
        }), Ua = RegExp(Ua.join("|")), E.matchesSelector = function(b, c) {
            c = c.replace(ld, "='$1']");
            if (!Ma(b) && !Ua.test(c) && (!aa || !aa.test(c))) try {
                var d = Va.call(b, c);
                if (d || ec || b.document && 11 !== b.document.nodeType) return d
            } catch (f) {}
            return 0 < E(c, null, null, [b]).length
        })
    }
    L.pseudos.nth = L.pseudos.eq;
    L.filters = $b.prototype = L.pseudos;
    L.setFilters = new $b;
    E.attr = f.attr;
    f.find = E;
    f.expr = E.selectors;
    f.expr[":"] = f.expr.pseudos;
    f.unique = E.uniqueSort;
    f.text = E.getText;
    f.isXMLDoc = E.isXML;
    f.contains = E.contains;
    var md = /Until$/,
        nd = /^(?:parents|prev(?:Until|All))/,
        wc = /^.[^:#\[\.,]*$/,
        fc = f.expr.match.needsContext,
        od = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    f.fn.extend({
        find: function(b) {
            var c, d, e, g, m, l, q = this;
            if ("string" != typeof b) return f(b).filter(function() {
                c = 0;
                for (d = q.length; c < d; c++)
                    if (f.contains(q[c], this)) return !0
            });
            l = this.pushStack("", "find", b);
            c = 0;
            for (d = this.length; c < d; c++)
                if (e = l.length, f.find(b, this[c], l), 0 < c)
                    for (g = e; g <
                        l.length; g++)
                        for (m = 0; m < e; m++)
                            if (l[m] === l[g]) {
                                l.splice(g--, 1);
                                break
                            }
            return l
        },
        has: function(b) {
            var c, d = f(b, this),
                e = d.length;
            return this.filter(function() {
                for (c = 0; c < e; c++)
                    if (f.contains(this, d[c])) return !0
            })
        },
        not: function(b) {
            return this.pushStack(t(this, b, !1), "not", b)
        },
        filter: function(b) {
            return this.pushStack(t(this, b, !0), "filter", b)
        },
        is: function(b) {
            return !!b && ("string" == typeof b ? fc.test(b) ? 0 <= f(b, this.context).index(this[0]) : 0 < f.filter(b, this).length : 0 < this.filter(b).length)
        },
        closest: function(b, c) {
            for (var d,
                e = 0, g = this.length, m = [], l = fc.test(b) || "string" != typeof b ? f(b, c || this.context) : 0; e < g; e++)
                for (d = this[e]; d && d.ownerDocument && d !== c && 11 !== d.nodeType;) {
                    if (l ? -1 < l.index(d) : f.find.matchesSelector(d, b)) {
                        m.push(d);
                        break
                    }
                    d = d.parentNode
                }
            return m = 1 < m.length ? f.unique(m) : m, this.pushStack(m, "closest", b)
        },
        index: function(b) {
            return b ? "string" == typeof b ? f.inArray(this[0], f(b)) : f.inArray(b.jquery ? b[0] : b, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
        },
        add: function(b, c) {
            var d = "string" == typeof b ? f(b, c) : f.makeArray(b &&
                    b.nodeType ? [b] : b),
                e = f.merge(this.get(), d);
            return this.pushStack(r(d[0]) || r(e[0]) ? e : f.unique(e))
        },
        addBack: function(b) {
            return this.add(null == b ? this.prevObject : this.prevObject.filter(b))
        }
    });
    f.fn.andSelf = f.fn.addBack;
    f.each({
        parent: function(b) {
            return (b = b.parentNode) && 11 !== b.nodeType ? b : null
        },
        parents: function(b) {
            return f.dir(b, "parentNode")
        },
        parentsUntil: function(b, c, d) {
            return f.dir(b, "parentNode", d)
        },
        next: function(b) {
            return p(b, "nextSibling")
        },
        prev: function(b) {
            return p(b, "previousSibling")
        },
        nextAll: function(b) {
            return f.dir(b,
                "nextSibling")
        },
        prevAll: function(b) {
            return f.dir(b, "previousSibling")
        },
        nextUntil: function(b, c, d) {
            return f.dir(b, "nextSibling", d)
        },
        prevUntil: function(b, c, d) {
            return f.dir(b, "previousSibling", d)
        },
        siblings: function(b) {
            return f.sibling((b.parentNode || {}).firstChild, b)
        },
        children: function(b) {
            return f.sibling(b.firstChild)
        },
        contents: function(b) {
            return f.nodeName(b, "iframe") ? b.contentDocument || b.contentWindow.document : f.merge([], b.childNodes)
        }
    }, function(b, c) {
        f.fn[b] = function(d, e) {
            var g = f.map(this, c, d);
            return md.test(b) ||
                (e = d), e && "string" == typeof e && (g = f.filter(e, g)), g = 1 < this.length && !od[b] ? f.unique(g) : g, 1 < this.length && nd.test(b) && (g = g.reverse()), this.pushStack(g, b, ba.call(arguments).join(","))
        }
    });
    f.extend({
        filter: function(b, c, d) {
            return d && (b = ":not(" + b + ")"), 1 === c.length ? f.find.matchesSelector(c[0], b) ? [c[0]] : [] : f.find.matches(b, c)
        },
        dir: function(b, d, e) {
            var g = [];
            for (b = b[d]; b && 9 !== b.nodeType && (e === c || 1 !== b.nodeType || !f(b).is(e));) 1 === b.nodeType && g.push(b), b = b[d];
            return g
        },
        sibling: function(b, c) {
            for (var d = []; b; b = b.nextSibling) 1 ===
                b.nodeType && b !== c && d.push(b);
            return d
        }
    });
    var yb = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        pd = / jQuery\d+="(?:null|\d+)"/g,
        sb = /^\s+/,
        gc = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        hc = /<([\w:]+)/,
        qd = /<tbody/i,
        rd = /<|&#?\w+;/,
        sd = /<(?:script|style|link)/i,
        td = /<(?:script|object|embed|option|style)/i,
        tb = RegExp("<(?:" + yb + ")[\\s/>]", "i"),
        zb = /^(?:checkbox|radio)$/,
        ic = /checked\s*(?:[^=]|=\s*.checked.)/i,
        ud = /\/(java|ecma)script/i,
        vd = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
        W = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        },
        jc = s(B),
        ub = jc.appendChild(B.createElement("div"));
    W.optgroup =
        W.option;
    W.tbody = W.tfoot = W.colgroup = W.caption = W.thead;
    W.th = W.td;
    f.support.htmlSerialize || (W._default = [1, "X<div>", "</div>"]);
    f.fn.extend({
        text: function(b) {
            return f.access(this, function(b) {
                return b === c ? f.text(this) : this.empty().append((this[0] && this[0].ownerDocument || B).createTextNode(b))
            }, null, b, arguments.length)
        },
        wrapAll: function(b) {
            if (f.isFunction(b)) return this.each(function(c) {
                f(this).wrapAll(b.call(this, c))
            });
            if (this[0]) {
                var c = f(b, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && c.insertBefore(this[0]);
                c.map(function() {
                    for (var b = this; b.firstChild && 1 === b.firstChild.nodeType;) b = b.firstChild;
                    return b
                }).append(this)
            }
            return this
        },
        wrapInner: function(b) {
            return f.isFunction(b) ? this.each(function(c) {
                f(this).wrapInner(b.call(this, c))
            }) : this.each(function() {
                var c = f(this),
                    d = c.contents();
                d.length ? d.wrapAll(b) : c.append(b)
            })
        },
        wrap: function(b) {
            var c = f.isFunction(b);
            return this.each(function(d) {
                f(this).wrapAll(c ? b.call(this, d) : b)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                f.nodeName(this, "body") ||
                    f(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(b) {
                (1 === this.nodeType || 11 === this.nodeType) && this.appendChild(b)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(b) {
                (1 === this.nodeType || 11 === this.nodeType) && this.insertBefore(b, this.firstChild)
            })
        },
        before: function() {
            if (!r(this[0])) return this.domManip(arguments, !1, function(b) {
                this.parentNode.insertBefore(b, this)
            });
            if (arguments.length) {
                var b = f.clean(arguments);
                return this.pushStack(f.merge(b,
                    this), "before", this.selector)
            }
        },
        after: function() {
            if (!r(this[0])) return this.domManip(arguments, !1, function(b) {
                this.parentNode.insertBefore(b, this.nextSibling)
            });
            if (arguments.length) {
                var b = f.clean(arguments);
                return this.pushStack(f.merge(this, b), "after", this.selector)
            }
        },
        remove: function(b, c) {
            for (var d, e = 0; null != (d = this[e]); e++)
                if (!b || f.filter(b, [d]).length)!c && 1 === d.nodeType && (f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), d.parentNode && d.parentNode.removeChild(d);
            return this
        },
        empty: function() {
            for (var b,
                c = 0; null != (b = this[c]); c++)
                for (1 === b.nodeType && f.cleanData(b.getElementsByTagName("*")); b.firstChild;) b.removeChild(b.firstChild);
            return this
        },
        clone: function(b, c) {
            return b = null == b ? !1 : b, c = null == c ? b : c, this.map(function() {
                return f.clone(this, b, c)
            })
        },
        html: function(b) {
            return f.access(this, function(b) {
                var d = this[0] || {},
                    e = 0,
                    g = this.length;
                if (b === c) return 1 === d.nodeType ? d.innerHTML.replace(pd, "") : c;
                if ("string" == typeof b && !sd.test(b) && (f.support.htmlSerialize || !tb.test(b)) && (f.support.leadingWhitespace || !sb.test(b)) &&
                    !W[(hc.exec(b) || ["", ""])[1].toLowerCase()]) {
                    b = b.replace(gc, "<$1></$2>");
                    try {
                        for (; e < g; e++) d = this[e] || {}, 1 === d.nodeType && (f.cleanData(d.getElementsByTagName("*")), d.innerHTML = b);
                        d = 0
                    } catch (m) {}
                }
                d && this.empty().append(b)
            }, null, b, arguments.length)
        },
        replaceWith: function(b) {
            return r(this[0]) ? this.length ? this.pushStack(f(f.isFunction(b) ? b() : b), "replaceWith", b) : this : f.isFunction(b) ? this.each(function(c) {
                var d = f(this),
                    e = d.html();
                d.replaceWith(b.call(this, c, e))
            }) : ("string" != typeof b && (b = f(b).detach()), this.each(function() {
                var c =
                    this.nextSibling,
                    d = this.parentNode;
                f(this).remove();
                c ? f(c).before(b) : f(d).append(b)
            }))
        },
        detach: function(b) {
            return this.remove(b, !0)
        },
        domManip: function(b, d, e) {
            b = [].concat.apply([], b);
            var g, m, l, q = 0,
                p = b[0],
                x = [],
                t = this.length;
            if (!f.support.checkClone && 1 < t && "string" == typeof p && ic.test(p)) return this.each(function() {
                f(this).domManip(b, d, e)
            });
            if (f.isFunction(p)) return this.each(function(g) {
                var m = f(this);
                b[0] = p.call(this, g, d ? m.html() : c);
                m.domManip(b, d, e)
            });
            if (this[0]) {
                g = f.buildFragment(b, this, x);
                l = g.fragment;
                m = l.firstChild;
                1 === l.childNodes.length && (l = m);
                if (m) {
                    d = d && f.nodeName(m, "tr");
                    for (g = g.cacheable || t - 1; q < t; q++) e.call(d && f.nodeName(this[q], "table") ? this[q].getElementsByTagName("tbody")[0] || this[q].appendChild(this[q].ownerDocument.createElement("tbody")) : this[q], q === g ? l : f.clone(l, !0, !0))
                }
                l = m = null;
                x.length && f.each(x, function(b, c) {
                    c.src ? f.ajax ? f.ajax({
                        url: c.src,
                        type: "GET",
                        dataType: "script",
                        async: !1,
                        global: !1,
                        "throws": !0
                    }) : f.error("no ajax") : f.globalEval((c.text || c.textContent || c.innerHTML || "").replace(vd,
                        ""));
                    c.parentNode && c.parentNode.removeChild(c)
                })
            }
            return this
        }
    });
    f.buildFragment = function(b, d, e) {
        var g, m, l, q = b[0];
        return d = d || B, d = !d.nodeType && d[0] || d, d = d.ownerDocument || d, 1 === b.length && "string" == typeof q && 512 > q.length && d === B && "<" === q.charAt(0) && !td.test(q) && (f.support.checkClone || !ic.test(q)) && (f.support.html5Clone || !tb.test(q)) && (m = !0, g = f.fragments[q], l = g !== c), g || (g = d.createDocumentFragment(), f.clean(b, d, g, e), m && (f.fragments[q] = l && g)), {
            fragment: g,
            cacheable: m
        }
    };
    f.fragments = {};
    f.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(b, c) {
        f.fn[b] = function(d) {
            var e, g = 0,
                m = [];
            d = f(d);
            var l = d.length;
            e = 1 === this.length && this[0].parentNode;
            if ((null == e || e && 11 === e.nodeType && 1 === e.childNodes.length) && 1 === l) return d[c](this[0]), this;
            for (; g < l; g++) e = (0 < g ? this.clone(!0) : this).get(), f(d[g])[c](e), m = m.concat(e);
            return this.pushStack(m, b, d.selector)
        }
    });
    f.extend({
        clone: function(b, c, d) {
            var e, g, l, p;
            f.support.html5Clone || f.isXMLDoc(b) || !tb.test("<" + b.nodeName +
                ">") ? p = b.cloneNode(!0) : (ub.innerHTML = b.outerHTML, ub.removeChild(p = ub.firstChild));
            if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && (1 === b.nodeType || 11 === b.nodeType) && !f.isXMLDoc(b)) {
                m(b, p);
                e = q(b);
                g = q(p);
                for (l = 0; e[l]; ++l) g[l] && m(e[l], g[l])
            }
            if (c && (y(b, p), d)) {
                e = q(b);
                g = q(p);
                for (l = 0; e[l]; ++l) y(e[l], g[l])
            }
            return p
        },
        clean: function(b, c, d, e) {
            var g, m, l, q, p, t, r, y = c === B && jc,
                F = [];
            if (!c || "undefined" == typeof c.createDocumentFragment) c = B;
            for (g = 0; null != (l = b[g]); g++)
                if ("number" == typeof l && (l += ""), l) {
                    if ("string" ==
                        typeof l)
                        if (rd.test(l)) {
                            y = y || s(c);
                            t = c.createElement("div");
                            y.appendChild(t);
                            l = l.replace(gc, "<$1></$2>");
                            m = (hc.exec(l) || ["", ""])[1].toLowerCase();
                            q = W[m] || W._default;
                            p = q[0];
                            for (t.innerHTML = q[1] + l + q[2]; p--;) t = t.lastChild;
                            if (!f.support.tbody) {
                                p = qd.test(l);
                                q = "table" === m && !p ? t.firstChild && t.firstChild.childNodes : "<table>" === q[1] && !p ? t.childNodes : [];
                                for (m = q.length - 1; 0 <= m; --m) f.nodeName(q[m], "tbody") && !q[m].childNodes.length && q[m].parentNode.removeChild(q[m])
                            }!f.support.leadingWhitespace && sb.test(l) && t.insertBefore(c.createTextNode(sb.exec(l)[0]),
                                t.firstChild);
                            l = t.childNodes;
                            t.parentNode.removeChild(t)
                        } else l = c.createTextNode(l);
                    l.nodeType ? F.push(l) : f.merge(F, l)
                }
            t && (l = t = y = null);
            if (!f.support.appendChecked)
                for (g = 0; null != (l = F[g]); g++) f.nodeName(l, "input") ? x(l) : "undefined" != typeof l.getElementsByTagName && f.grep(l.getElementsByTagName("input"), x);
            if (d) {
                b = function(b) {
                    if (!b.type || ud.test(b.type)) return e ? e.push(b.parentNode ? b.parentNode.removeChild(b) : b) : d.appendChild(b)
                };
                for (g = 0; null != (l = F[g]); g++)
                    if (!f.nodeName(l, "script") || !b(l)) d.appendChild(l),
                        "undefined" != typeof l.getElementsByTagName && (r = f.grep(f.merge([], l.getElementsByTagName("script")), b), F.splice.apply(F, [g + 1, 0].concat(r)), g += r.length)
            }
            return F
        },
        cleanData: function(b, c) {
            for (var d, e, g, m, l = 0, q = f.expando, p = f.cache, x = f.support.deleteExpando, t = f.event.special; null != (g = b[l]); l++)
                if (c || f.acceptData(g))
                    if (d = (e = g[q]) && p[e]) {
                        if (d.events)
                            for (m in d.events) t[m] ? f.event.remove(g, m) : f.removeEvent(g, m, d.handle);
                        p[e] && (delete p[e], x ? delete g[q] : g.removeAttribute ? g.removeAttribute(q) : g[q] = null, f.deletedIds.push(e))
                    }
        }
    });
    var Wa, ea;
    f.uaMatch = function(b) {
        b = b.toLowerCase();
        b = /(chrome)[ \/]([\w.]+)/.exec(b) || /(webkit)[ \/]([\w.]+)/.exec(b) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(b) || /(msie) ([\w.]+)/.exec(b) || 0 > b.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(b) || [];
        return {
            browser: b[1] || "",
            version: b[2] || "0"
        }
    };
    Wa = f.uaMatch(Bc.userAgent);
    ea = {};
    Wa.browser && (ea[Wa.browser] = !0, ea.version = Wa.version);
    ea.chrome ? ea.webkit = !0 : ea.webkit && (ea.safari = !0);
    f.browser = ea;
    f.sub = function() {
        function b(c, d) {
            return new b.fn.init(c,
                d)
        }
        f.extend(!0, b, this);
        b.superclass = this;
        b.fn = b.prototype = this();
        b.fn.constructor = b;
        b.sub = this.sub;
        b.fn.init = function(d, e) {
            return e && e instanceof f && !(e instanceof b) && (e = b(e)), f.fn.init.call(this, d, e, c)
        };
        b.fn.init.prototype = b.fn;
        var c = b(B);
        return b
    };
    var R, ma, na, vb = /alpha\([^)]*\)/i,
        wd = /opacity=([^)]*)/,
        xd = /^(top|right|bottom|left)$/,
        yd = /^(none|table(?!-c[ea]).+)/,
        kc = /^margin/,
        xc = RegExp("^(" + Ga + ")(.*)$", "i"),
        za = RegExp("^(" + Ga + ")(?!px)[a-z%]+$", "i"),
        zd = RegExp("^([-+])=(" + Ga + ")", "i"),
        $a = {},
        Ad = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        lc = {
            letterSpacing: 0,
            fontWeight: 400
        },
        fa = ["Top", "Right", "Bottom", "Left"],
        Ab = ["Webkit", "O", "Moz", "ms"],
        Bd = f.fn.toggle;
    f.fn.extend({
        css: function(b, d) {
            return f.access(this, function(b, d, e) {
                return e !== c ? f.style(b, d, e) : f.css(b, d)
            }, b, d, 1 < arguments.length)
        },
        show: function() {
            return G(this, !0)
        },
        hide: function() {
            return G(this)
        },
        toggle: function(b, c) {
            var d = "boolean" == typeof b;
            return f.isFunction(b) && f.isFunction(c) ? Bd.apply(this, arguments) : this.each(function() {
                (d ? b : N(this)) ? f(this).show():
                    f(this).hide()
            })
        }
    });
    f.extend({
        cssHooks: {
            opacity: {
                get: function(b, c) {
                    if (c) {
                        var d = R(b, "opacity");
                        return "" === d ? "1" : d
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": f.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(b, d, e, g) {
            if (b && !(3 === b.nodeType || 8 === b.nodeType || !b.style)) {
                var m, l, q, p = f.camelCase(d),
                    x = b.style;
                d = f.cssProps[p] || (f.cssProps[p] = F(x, p));
                q = f.cssHooks[d] || f.cssHooks[p];
                if (e === c) return q && "get" in q && (m = q.get(b, !1, g)) !== c ? m : x[d];
                l = typeof e;
                "string" === l && (m = zd.exec(e)) && (e = (m[1] + 1) * m[2] + parseFloat(f.css(b, d)), l = "number");
                if (!(null == e || "number" === l && isNaN(e)))
                    if ("number" === l && !f.cssNumber[p] && (e += "px"), !q || !("set" in q) || (e = q.set(b, e, g)) !== c) try {
                        x[d] = e
                    } catch (t) {}
            }
        },
        css: function(b, d, e, g) {
            var m, l, q, p = f.camelCase(d);
            return d = f.cssProps[p] || (f.cssProps[p] = F(b.style, p)), q = f.cssHooks[d] || f.cssHooks[p], q && "get" in q && (m = q.get(b, !0, g)), m === c && (m = R(b, d)), "normal" === m && d in lc && (m = lc[d]), e || g !== c ? (l = parseFloat(m), e ||
                f.isNumeric(l) ? l || 0 : m) : m
        },
        swap: function(b, c, d) {
            var f, e = {};
            for (f in c) e[f] = b.style[f], b.style[f] = c[f];
            d = d.call(b);
            for (f in c) b.style[f] = e[f];
            return d
        }
    });
    b.getComputedStyle ? R = function(c, d) {
        var e, g, m, l, q = b.getComputedStyle(c, null),
            p = c.style;
        return q && (e = q[d], "" === e && !f.contains(c.ownerDocument, c) && (e = f.style(c, d)), za.test(e) && kc.test(d) && (g = p.width, m = p.minWidth, l = p.maxWidth, p.minWidth = p.maxWidth = p.width = e, e = q.width, p.width = g, p.minWidth = m, p.maxWidth = l)), e
    } : B.documentElement.currentStyle && (R = function(b,
        c) {
        var d, f, e = b.currentStyle && b.currentStyle[c],
            g = b.style;
        return null == e && g && g[c] && (e = g[c]), za.test(e) && !xd.test(c) && (d = g.left, f = b.runtimeStyle && b.runtimeStyle.left, f && (b.runtimeStyle.left = b.currentStyle.left), g.left = "fontSize" === c ? "1em" : e, e = g.pixelLeft + "px", g.left = d, f && (b.runtimeStyle.left = f)), "" === e ? "auto" : e
    });
    f.each(["height", "width"], function(b, c) {
        f.cssHooks[c] = {
            get: function(b, d, e) {
                if (d) return 0 === b.offsetWidth && yd.test(R(b, "display")) ? f.swap(b, Ad, function() {
                    return H(b, c, e)
                }) : H(b, c, e)
            },
            set: function(b,
                d, e) {
                return M(b, d, e ? Za(b, c, e, f.support.boxSizing && "border-box" === f.css(b, "boxSizing")) : 0)
            }
        }
    });
    f.support.opacity || (f.cssHooks.opacity = {
        get: function(b, c) {
            return wd.test((c && b.currentStyle ? b.currentStyle.filter : b.style.filter) || "") ? 0.01 * parseFloat(RegExp.$1) + "" : c ? "1" : ""
        },
        set: function(b, c) {
            var d = b.style,
                e = b.currentStyle,
                g = f.isNumeric(c) ? "alpha(opacity=" + 100 * c + ")" : "",
                m = e && e.filter || d.filter || "";
            d.zoom = 1;
            if (!(1 <= c && "" === f.trim(m.replace(vb, "")) && d.removeAttribute && (d.removeAttribute("filter"), e && !e.filter))) d.filter =
                vb.test(m) ? m.replace(vb, g) : m + " " + g
        }
    });
    f(function() {
        f.support.reliableMarginRight || (f.cssHooks.marginRight = {
            get: function(b, c) {
                return f.swap(b, {
                    display: "inline-block"
                }, function() {
                    if (c) return R(b, "marginRight")
                })
            }
        });
        !f.support.pixelPosition && f.fn.position && f.each(["top", "left"], function(b, c) {
            f.cssHooks[c] = {
                get: function(b, d) {
                    if (d) {
                        var e = R(b, c);
                        return za.test(e) ? f(b).position()[c] + "px" : e
                    }
                }
            }
        })
    });
    f.expr && f.expr.filters && (f.expr.filters.hidden = function(b) {
        return 0 === b.offsetWidth && 0 === b.offsetHeight || !f.support.reliableHiddenOffsets &&
            "none" === (b.style && b.style.display || R(b, "display"))
    }, f.expr.filters.visible = function(b) {
        return !f.expr.filters.hidden(b)
    });
    f.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(b, c) {
        f.cssHooks[b + c] = {
            expand: function(d) {
                var f = "string" == typeof d ? d.split(" ") : [d],
                    e = {};
                for (d = 0; 4 > d; d++) e[b + fa[d] + c] = f[d] || f[d - 2] || f[0];
                return e
            }
        };
        kc.test(b) || (f.cssHooks[b + c].set = M)
    });
    var Cd = /%20/g,
        yc = /\[\]$/,
        mc = /\r?\n/g,
        Dd = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        Ed = /^(?:select|textarea)/i;
    f.fn.extend({
        serialize: function() {
            return f.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? f.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || Ed.test(this.nodeName) || Dd.test(this.type))
            }).map(function(b, c) {
                var d = f(this).val();
                return null == d ? null : f.isArray(d) ? f.map(d, function(b) {
                    return {
                        name: c.name,
                        value: b.replace(mc, "\r\n")
                    }
                }) : {
                    name: c.name,
                    value: d.replace(mc, "\r\n")
                }
            }).get()
        }
    });
    f.param = function(b, d) {
        var e, g = [],
            m = function(b, c) {
                c = f.isFunction(c) ? c() : null == c ? "" : c;
                g[g.length] = encodeURIComponent(b) + "=" + encodeURIComponent(c)
            };
        d === c && (d = f.ajaxSettings && f.ajaxSettings.traditional);
        if (f.isArray(b) || b.jquery && !f.isPlainObject(b)) f.each(b, function() {
            m(this.name, this.value)
        });
        else
            for (e in b) O(e, b[e], d, m);
        return g.join("&").replace(Cd, "+")
    };
    var ra, la, Fd = /#.*$/,
        Gd = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        Hd = /^(?:GET|HEAD)$/,
        Id = /^\/\//,
        nc = /\?/,
        Jd = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        Kd = /([?&])_=[^&]*/,
        oc = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
        pc = f.fn.load,
        ab = {},
        qc = {},
        rc = ["*/"] + ["*"];
    try {
        la = Ac.href
    } catch (Td) {
        la = B.createElement("a"), la.href = "", la = la.href
    }
    ra = oc.exec(la.toLowerCase()) || [];
    f.fn.load = function(b, d, e) {
        if ("string" != typeof b && pc) return pc.apply(this, arguments);
        if (!this.length) return this;
        var g, m, l, q = this,
            p = b.indexOf(" ");
        return 0 <= p && (g = b.slice(p, b.length), b = b.slice(0, p)), f.isFunction(d) ? (e = d, d = c) : d && "object" == typeof d && (m = "POST"), f.ajax({
            url: b,
            type: m,
            dataType: "html",
            data: d,
            complete: function(b, c) {
                e && q.each(e, l || [b.responseText, c, b])
            }
        }).done(function(b) {
            l = arguments;
            q.html(g ? f("<div>").append(b.replace(Jd, "")).find(g) : b)
        }), this
    };
    f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(b, c) {
        f.fn[c] = function(b) {
            return this.on(c, b)
        }
    });
    f.each(["get", "post"], function(b, d) {
        f[d] = function(b, e, g, m) {
            return f.isFunction(e) && (m = m || g, g = e, e = c), f.ajax({
                type: d,
                url: b,
                data: e,
                success: g,
                dataType: m
            })
        }
    });
    f.extend({
        getScript: function(b, d) {
            return f.get(b,
                c, d, "script")
        },
        getJSON: function(b, c, d) {
            return f.get(b, c, d, "json")
        },
        ajaxSetup: function(b, c) {
            return c ? ta(b, f.ajaxSettings) : (c = b, b = f.ajaxSettings), ta(b, c), b
        },
        ajaxSettings: {
            url: la,
            isLocal: /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(ra[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": rc
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": b.String,
                "text html": !0,
                "text json": f.parseJSON,
                "text xml": f.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: Aa(ab),
        ajaxTransport: Aa(qc),
        ajax: function(b, d) {
            function e(b, d, l, n) {
                var u, x, r, A, C, G = d;
                if (2 !== H) {
                    H = 2;
                    p && clearTimeout(p);
                    q = c;
                    m = n || "";
                    J.readyState = 0 < b ? 4 : 0;
                    if (l) {
                        A = s;
                        n = J;
                        var V, S, E, K, L = A.contents,
                            O = A.dataTypes,
                            Q = A.responseFields;
                        for (S in Q) S in l && (n[Q[S]] = l[S]);
                        for (;
                            "*" === O[0];) O.shift(),
                            V === c && (V = A.mimeType || n.getResponseHeader("content-type"));
                        if (V)
                            for (S in L)
                                if (L[S] && L[S].test(V)) {
                                    O.unshift(S);
                                    break
                                }
                        if (O[0] in l) E = O[0];
                        else {
                            for (S in l) {
                                if (!O[0] || A.converters[S + " " + O[0]]) {
                                    E = S;
                                    break
                                }
                                K || (K = S)
                            }
                            E = E || K
                        }
                        A = l = E ? (E !== O[0] && O.unshift(E), l[E]) : void 0
                    }
                    if (200 <= b && 300 > b || 304 === b)
                        if (s.ifModified && (C = J.getResponseHeader("Last-Modified"), C && (f.lastModified[g] = C), C = J.getResponseHeader("Etag"), C && (f.etag[g] = C)), 304 === b) G = "notmodified", u = !0;
                        else {
                            var I;
                            a: {
                                u = s;
                                x = A;
                                var P, G = u.dataTypes.slice();
                                l = G[0];
                                V = {};
                                S = 0;
                                u.dataFilter && (x = u.dataFilter(x, u.dataType));
                                if (G[1])
                                    for (I in u.converters) V[I.toLowerCase()] = u.converters[I];
                                for (; r = G[++S];)
                                    if ("*" !== r) {
                                        if ("*" !== l && l !== r) {
                                            I = V[l + " " + r] || V["* " + r];
                                            if (!I)
                                                for (P in V)
                                                    if (C = P.split(" "), C[1] === r && (I = V[l + " " + C[0]] || V["* " + C[0]])) {
                                                        !0 === I ? I = V[P] : !0 !== V[P] && (r = C[0], G.splice(S--, 0, r));
                                                        break
                                                    }
                                            if (!0 !== I)
                                                if (I && u["throws"]) x = I(x);
                                                else try {
                                                    x = I(x)
                                                } catch (R) {
                                                    I = {
                                                        state: "parsererror",
                                                        error: I ? R : "No conversion from " + l + " to " + r
                                                    };
                                                    break a
                                                }
                                        }
                                        l = r
                                    }
                                I = {
                                    state: "success",
                                    data: x
                                }
                            }
                            u = I;
                            G = u.state;
                            x = u.data;
                            r = u.error;
                            u = !r
                        } else if (r = G, !G || b) G = "error", 0 > b && (b = 0);
                    J.status = b;
                    J.statusText = (d || G) + "";
                    u ? N.resolveWith(y, [x, G, J]) : N.rejectWith(y, [J, G, r]);
                    J.statusCode(M);
                    M = c;
                    t && F.trigger("ajax" + (u ? "Success" : "Error"), [J, s, u ? x : r]);
                    B.fireWith(y, [J, G]);
                    t && (F.trigger("ajaxComplete", [J, s]), --f.active || f.event.trigger("ajaxStop"))
                }
            }
            "object" == typeof b && (d = b, b = c);
            d = d || {};
            var g, m, l, q, p, x, t, r, s = f.ajaxSetup({}, d),
                y = s.context || s,
                F = y !== s && (y.nodeType || y instanceof f) ? f(y) : f.event,
                N = f.Deferred(),
                B = f.Callbacks("once memory"),
                M = s.statusCode || {},
                G = {},
                E = {},
                H = 0,
                K = "canceled",
                J = {
                    readyState: 0,
                    setRequestHeader: function(b, c) {
                        if (!H) {
                            var d = b.toLowerCase();
                            b = E[d] = E[d] || b;
                            G[b] = c
                        }
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return 2 === H ? m : null
                    },
                    getResponseHeader: function(b) {
                        var d;
                        if (2 === H) {
                            if (!l)
                                for (l = {}; d = Gd.exec(m);) l[d[1].toLowerCase()] = d[2];
                            d = l[b.toLowerCase()]
                        }
                        return d === c ? null : d
                    },
                    overrideMimeType: function(b) {
                        return H || (s.mimeType = b), this
                    },
                    abort: function(b) {
                        return b = b || K, q && q.abort(b), e(0, b), this
                    }
                };
            N.promise(J);
            J.success = J.done;
            J.error = J.fail;
            J.complete = B.add;
            J.statusCode = function(b) {
                if (b) {
                    var c;
                    if (2 > H)
                        for (c in b) M[c] = [M[c], b[c]];
                    else c = b[J.status], J.always(c)
                }
                return this
            };
            s.url = ((b || s.url) + "").replace(Fd, "").replace(Id, ra[1] + "//");
            s.dataTypes = f.trim(s.dataType || "*").toLowerCase().split(ga);
            null == s.crossDomain && (x = oc.exec(s.url.toLowerCase()) || !1, s.crossDomain = x && x.join(":") + (x[3] ? "" : "http:" === x[1] ? 80 : 443) !== ra.join(":") + (ra[3] ? "" : "http:" === ra[1] ? 80 : 443));
            s.data && s.processData && "string" != typeof s.data && (s.data = f.param(s.data,
                s.traditional));
            oa(ab, s, d, J);
            if (2 === H) return J;
            t = s.global;
            s.type = s.type.toUpperCase();
            s.hasContent = !Hd.test(s.type);
            t && 0 === f.active++ && f.event.trigger("ajaxStart");
            if (!s.hasContent && (s.data && (s.url += (nc.test(s.url) ? "&" : "?") + s.data, delete s.data), g = s.url, !1 === s.cache)) {
                x = f.now();
                var L = s.url.replace(Kd, "$1_=" + x);
                s.url = L + (L === s.url ? (nc.test(s.url) ? "&" : "?") + "_=" + x : "")
            }(s.data && s.hasContent && !1 !== s.contentType || d.contentType) && J.setRequestHeader("Content-Type", s.contentType);
            s.ifModified && (g = g || s.url,
                f.lastModified[g] && J.setRequestHeader("If-Modified-Since", f.lastModified[g]), f.etag[g] && J.setRequestHeader("If-None-Match", f.etag[g]));
            J.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + rc + "; q=0.01" : "") : s.accepts["*"]);
            for (r in s.headers) J.setRequestHeader(r, s.headers[r]);
            if (!s.beforeSend || !1 !== s.beforeSend.call(y, J, s) && 2 !== H) {
                K = "abort";
                for (r in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) J[r](s[r]);
                if (q = oa(qc, s, d, J)) {
                    J.readyState = 1;
                    t && F.trigger("ajaxSend", [J, s]);
                    s.async && 0 < s.timeout && (p = setTimeout(function() {
                        J.abort("timeout")
                    }, s.timeout));
                    try {
                        H = 1, q.send(G, e)
                    } catch (O) {
                        if (2 > H) e(-1, O);
                        else throw O;
                    }
                } else e(-1, "No Transport");
                return J
            }
            return J.abort()
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    var sc = [],
        Ld = /\?/,
        Xa = /(=)\?(?=&|$)|\?\?/,
        Md = f.now();
    f.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var b = sc.pop() || f.expando + "_" + Md++;
            return this[b] = !0, b
        }
    });
    f.ajaxPrefilter("json jsonp", function(d, e, g) {
        var m, l, q, p = d.data,
            x = d.url,
            s = !1 !== d.jsonp,
            t = s && Xa.test(x),
            r = s && !t && "string" == typeof p && !(d.contentType || "").indexOf("application/x-www-form-urlencoded") && Xa.test(p);
        if ("jsonp" === d.dataTypes[0] || t || r) return m = d.jsonpCallback = f.isFunction(d.jsonpCallback) ? d.jsonpCallback() : d.jsonpCallback, l = b[m], t ? d.url = x.replace(Xa, "$1" + m) : r ? d.data = p.replace(Xa, "$1" + m) : s && (d.url += (Ld.test(x) ? "&" : "?") + d.jsonp + "=" + m), d.converters["script json"] = function() {
            return q || f.error(m + " was not called"), q[0]
        }, d.dataTypes[0] = "json", b[m] = function() {
            q = arguments
        }, g.always(function() {
            b[m] =
                l;
            d[m] && (d.jsonpCallback = e.jsonpCallback, sc.push(m));
            q && f.isFunction(l) && l(q[0]);
            q = l = c
        }), "script"
    });
    f.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(b) {
                return f.globalEval(b), b
            }
        }
    });
    f.ajaxPrefilter("script", function(b) {
        b.cache === c && (b.cache = !1);
        b.crossDomain && (b.type = "GET", b.global = !1)
    });
    f.ajaxTransport("script", function(b) {
        if (b.crossDomain) {
            var d, e =
                B.head || B.getElementsByTagName("head")[0] || B.documentElement;
            return {
                send: function(f, g) {
                    d = B.createElement("script");
                    d.async = "async";
                    b.scriptCharset && (d.charset = b.scriptCharset);
                    d.src = b.url;
                    d.onload = d.onreadystatechange = function(b, f) {
                        if (f || !d.readyState || /loaded|complete/.test(d.readyState)) d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = c, f || g(200, "success")
                    };
                    e.insertBefore(d, e.firstChild)
                },
                abort: function() {
                    d && d.onload(0, 1)
                }
            }
        }
    });
    var sa, wb = b.ActiveXObject ? function() {
            for (var b in sa) sa[b](0,
                1)
        } : !1,
        Nd = 0;
    f.ajaxSettings.xhr = b.ActiveXObject ? function() {
        var c;
        if (!(c = !this.isLocal && Bb())) a: {
            try {
                c = new b.ActiveXObject("Microsoft.XMLHTTP");
                break a
            } catch (d) {}
            c = void 0
        }
        return c
    } : Bb;
    var xb = f.ajaxSettings.xhr();
    f.extend(f.support, {
        ajax: !!xb,
        cors: !!xb && "withCredentials" in xb
    });
    f.support.ajax && f.ajaxTransport(function(d) {
        if (!d.crossDomain || f.support.cors) {
            var e;
            return {
                send: function(g, m) {
                    var l, q, p = d.xhr();
                    d.username ? p.open(d.type, d.url, d.async, d.username, d.password) : p.open(d.type, d.url, d.async);
                    if (d.xhrFields)
                        for (q in d.xhrFields) p[q] =
                            d.xhrFields[q];
                    d.mimeType && p.overrideMimeType && p.overrideMimeType(d.mimeType);
                    !d.crossDomain && !g["X-Requested-With"] && (g["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (q in g) p.setRequestHeader(q, g[q])
                    } catch (x) {}
                    p.send(d.hasContent && d.data || null);
                    e = function(b, g) {
                        var q, x, s, t, r;
                        try {
                            if (e && (g || 4 === p.readyState))
                                if (e = c, l && (p.onreadystatechange = f.noop, wb && delete sa[l]), g) 4 !== p.readyState && p.abort();
                                else {
                                    q = p.status;
                                    s = p.getAllResponseHeaders();
                                    t = {};
                                    (r = p.responseXML) && r.documentElement && (t.xml = r);
                                    try {
                                        t.text =
                                            p.responseText
                                    } catch (y) {}
                                    try {
                                        x = p.statusText
                                    } catch (F) {
                                        x = ""
                                    }!q && d.isLocal && !d.crossDomain ? q = t.text ? 200 : 404 : 1223 === q && (q = 204)
                                }
                        } catch (A) {
                            g || m(-1, A)
                        }
                        t && m(q, x, t, s)
                    };
                    d.async ? 4 === p.readyState ? setTimeout(e, 0) : (l = ++Nd, wb && (sa || (sa = {}, f(b).unload(wb)), sa[l] = e), p.onreadystatechange = e) : e()
                },
                abort: function() {
                    e && e(0, 1)
                }
            }
        }
    });
    var Ba, Ya, Od = /^(?:toggle|show|hide)$/,
        Pd = RegExp("^(?:([-+])=|)(" + Ga + ")([a-z%]*)$", "i"),
        Qd = /queueHooks$/,
        Ca = [
            function(b, c, d) {
                var e, g, m, l, q, p, x = this,
                    s = b.style,
                    t = {},
                    r = [],
                    y = b.nodeType && N(b);
                d.queue ||
                    (q = f._queueHooks(b, "fx"), null == q.unqueued && (q.unqueued = 0, p = q.empty.fire, q.empty.fire = function() {
                        q.unqueued || p()
                    }), q.unqueued++, x.always(function() {
                        x.always(function() {
                            q.unqueued--;
                            f.queue(b, "fx").length || q.empty.fire()
                        })
                    }));
                1 === b.nodeType && ("height" in c || "width" in c) && (d.overflow = [s.overflow, s.overflowX, s.overflowY], "inline" === f.css(b, "display") && "none" === f.css(b, "float") && (!f.support.inlineBlockNeedsLayout || "inline" === Q(b.nodeName) ? s.display = "inline-block" : s.zoom = 1));
                d.overflow && (s.overflow = "hidden",
                    f.support.shrinkWrapBlocks || x.done(function() {
                        s.overflow = d.overflow[0];
                        s.overflowX = d.overflow[1];
                        s.overflowY = d.overflow[2]
                    }));
                for (e in c) g = c[e], Od.exec(g) && (delete c[e], g !== (y ? "hide" : "show") && r.push(e));
                if (g = r.length) {
                    m = f._data(b, "fxshow") || f._data(b, "fxshow", {});
                    y ? f(b).show() : x.done(function() {
                        f(b).hide()
                    });
                    x.done(function() {
                        var c;
                        f.removeData(b, "fxshow", !0);
                        for (c in t) f.style(b, c, t[c])
                    });
                    for (e = 0; e < g; e++) c = r[e], l = x.createTween(c, y ? m[c] : 0), t[c] = m[c] || f.style(b, c), c in m || (m[c] = l.start, y && (l.end = l.start,
                        l.start = "width" === c || "height" === c ? 1 : 0))
                }
            }
        ],
        ua = {
            "*": [
                function(b, c) {
                    var d, e, g = this.createTween(b, c),
                        m = Pd.exec(c),
                        l = g.cur(),
                        q = +l || 0,
                        p = 1,
                        x = 20;
                    if (m) {
                        d = +m[2];
                        e = m[3] || (f.cssNumber[b] ? "" : "px");
                        if ("px" !== e && q) {
                            q = f.css(g.elem, b, !0) || d || 1;
                            do p = p || ".5", q /= p, f.style(g.elem, b, q + e); while (p !== (p = g.cur() / l) && 1 !== p && --x)
                        }
                        g.unit = e;
                        g.start = q;
                        g.end = m[1] ? q + (m[1] + 1) * d : d
                    }
                    return g
                }
            ]
        };
    f.Animation = f.extend(Db, {
        tweener: function(b, c) {
            f.isFunction(b) ? (c = b, b = ["*"]) : b = b.split(" ");
            for (var d, e = 0, g = b.length; e < g; e++) d = b[e], ua[d] = ua[d] || [], ua[d].unshift(c)
        },
        prefilter: function(b, c) {
            c ? Ca.unshift(b) : Ca.push(b)
        }
    });
    f.Tween = T;
    T.prototype = {
        constructor: T,
        init: function(b, c, d, e, g, m) {
            this.elem = b;
            this.prop = d;
            this.easing = g || "swing";
            this.options = c;
            this.start = this.now = this.cur();
            this.end = e;
            this.unit = m || (f.cssNumber[d] ? "" : "px")
        },
        cur: function() {
            var b = T.propHooks[this.prop];
            return b && b.get ? b.get(this) : T.propHooks._default.get(this)
        },
        run: function(b) {
            var c, d = T.propHooks[this.prop];
            return this.options.duration ? this.pos = c = f.easing[this.easing](b, this.options.duration *
                b, 0, 1, this.options.duration) : this.pos = c = b, this.now = (this.end - this.start) * c + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), d && d.set ? d.set(this) : T.propHooks._default.set(this), this
        }
    };
    T.prototype.init.prototype = T.prototype;
    T.propHooks = {
        _default: {
            get: function(b) {
                var c;
                return null == b.elem[b.prop] || b.elem.style && null != b.elem.style[b.prop] ? (c = f.css(b.elem, b.prop, !1, ""), !c || "auto" === c ? 0 : c) : b.elem[b.prop]
            },
            set: function(b) {
                f.fx.step[b.prop] ? f.fx.step[b.prop](b) : b.elem.style &&
                    (null != b.elem.style[f.cssProps[b.prop]] || f.cssHooks[b.prop]) ? f.style(b.elem, b.prop, b.now + b.unit) : b.elem[b.prop] = b.now
            }
        }
    };
    T.propHooks.scrollTop = T.propHooks.scrollLeft = {
        set: function(b) {
            b.elem.nodeType && b.elem.parentNode && (b.elem[b.prop] = b.now)
        }
    };
    f.each(["toggle", "show", "hide"], function(b, c) {
        var d = f.fn[c];
        f.fn[c] = function(e, g, m) {
            return null == e || "boolean" == typeof e || !b && f.isFunction(e) && f.isFunction(g) ? d.apply(this, arguments) : this.animate(Ea(c, !0), e, g, m)
        }
    });
    f.fn.extend({
        fadeTo: function(b, c, d, e) {
            return this.filter(N).css("opacity",
                0).show().end().animate({
                opacity: c
            }, b, d, e)
        },
        animate: function(b, c, d, e) {
            var g = f.isEmptyObject(b),
                m = f.speed(c, d, e);
            c = function() {
                var c = Db(this, f.extend({}, b), m);
                g && c.stop(!0)
            };
            return g || !1 === m.queue ? this.each(c) : this.queue(m.queue, c)
        },
        stop: function(b, d, e) {
            var g = function(b) {
                var c = b.stop;
                delete b.stop;
                c(e)
            };
            return "string" != typeof b && (e = d, d = b, b = c), d && !1 !== b && this.queue(b || "fx", []), this.each(function() {
                var c = !0,
                    d = null != b && b + "queueHooks",
                    m = f.timers,
                    l = f._data(this);
                if (d) l[d] && l[d].stop && g(l[d]);
                else
                    for (d in l) l[d] &&
                        l[d].stop && Qd.test(d) && g(l[d]);
                for (d = m.length; d--;) m[d].elem === this && (null == b || m[d].queue === b) && (m[d].anim.stop(e), c = !1, m.splice(d, 1));
                (c || !e) && f.dequeue(this, b)
            })
        }
    });
    f.each({
        slideDown: Ea("show"),
        slideUp: Ea("hide"),
        slideToggle: Ea("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(b, c) {
        f.fn[b] = function(b, d, e) {
            return this.animate(c, b, d, e)
        }
    });
    f.speed = function(b, c, d) {
        var e = b && "object" == typeof b ? f.extend({}, b) : {
            complete: d || !d && c || f.isFunction(b) && b,
            duration: b,
            easing: d && c || c && !f.isFunction(c) && c
        };
        e.duration = f.fx.off ? 0 : "number" == typeof e.duration ? e.duration : e.duration in f.fx.speeds ? f.fx.speeds[e.duration] : f.fx.speeds._default;
        if (null == e.queue || !0 === e.queue) e.queue = "fx";
        return e.old = e.complete, e.complete = function() {
            f.isFunction(e.old) && e.old.call(this);
            e.queue && f.dequeue(this, e.queue)
        }, e
    };
    f.easing = {
        linear: function(b) {
            return b
        },
        swing: function(b) {
            return 0.5 - Math.cos(b * Math.PI) / 2
        }
    };
    f.timers = [];
    f.fx = T.prototype.init;
    f.fx.tick = function() {
        for (var b, c = f.timers,
            d = 0; d < c.length; d++) b = c[d], !b() && c[d] === b && c.splice(d--, 1);
        c.length || f.fx.stop()
    };
    f.fx.timer = function(b) {
        b() && f.timers.push(b) && !Ya && (Ya = setInterval(f.fx.tick, f.fx.interval))
    };
    f.fx.interval = 13;
    f.fx.stop = function() {
        clearInterval(Ya);
        Ya = null
    };
    f.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    f.fx.step = {};
    f.expr && f.expr.filters && (f.expr.filters.animated = function(b) {
        return f.grep(f.timers, function(c) {
            return b === c.elem
        }).length
    });
    var tc = /^(?:body|html)$/i;
    f.fn.offset = function(b) {
        if (arguments.length) return b ===
            c ? this : this.each(function(c) {
                f.offset.setOffset(this, b, c)
            });
        var d, e, g, m, l, q, p, x = {
                top: 0,
                left: 0
            },
            s = this[0],
            t = s && s.ownerDocument;
        if (t) return (e = t.body) === s ? f.offset.bodyOffset(s) : (d = t.documentElement, f.contains(d, s) ? ("undefined" != typeof s.getBoundingClientRect && (x = s.getBoundingClientRect()), g = Eb(t), m = d.clientTop || e.clientTop || 0, l = d.clientLeft || e.clientLeft || 0, q = g.pageYOffset || d.scrollTop, p = g.pageXOffset || d.scrollLeft, {
            top: x.top + q - m,
            left: x.left + p - l
        }) : x)
    };
    f.offset = {
        bodyOffset: function(b) {
            var c = b.offsetTop,
                d = b.offsetLeft;
            return f.support.doesNotIncludeMarginInBodyOffset && (c += parseFloat(f.css(b, "marginTop")) || 0, d += parseFloat(f.css(b, "marginLeft")) || 0), {
                top: c,
                left: d
            }
        },
        setOffset: function(b, c, d) {
            var e = f.css(b, "position");
            "static" === e && (b.style.position = "relative");
            var g = f(b),
                m = g.offset(),
                l = f.css(b, "top"),
                q = f.css(b, "left"),
                p = {},
                x = {},
                s, t;
            ("absolute" === e || "fixed" === e) && -1 < f.inArray("auto", [l, q]) ? (x = g.position(), s = x.top, t = x.left) : (s = parseFloat(l) || 0, t = parseFloat(q) || 0);
            f.isFunction(c) && (c = c.call(b, d, m));
            null !=
                c.top && (p.top = c.top - m.top + s);
            null != c.left && (p.left = c.left - m.left + t);
            "using" in c ? c.using.call(b, p) : g.css(p)
        }
    };
    f.fn.extend({
        position: function() {
            if (this[0]) {
                var b = this[0],
                    c = this.offsetParent(),
                    d = this.offset(),
                    e = tc.test(c[0].nodeName) ? {
                        top: 0,
                        left: 0
                    } : c.offset();
                return d.top -= parseFloat(f.css(b, "marginTop")) || 0, d.left -= parseFloat(f.css(b, "marginLeft")) || 0, e.top += parseFloat(f.css(c[0], "borderTopWidth")) || 0, e.left += parseFloat(f.css(c[0], "borderLeftWidth")) || 0, {
                    top: d.top - e.top,
                    left: d.left - e.left
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var b =
                    this.offsetParent || B.body; b && !tc.test(b.nodeName) && "static" === f.css(b, "position");) b = b.offsetParent;
                return b || B.body
            })
        }
    });
    f.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(b, d) {
        var e = /Y/.test(d);
        f.fn[b] = function(g) {
            return f.access(this, function(b, g, m) {
                var l = Eb(b);
                if (m === c) return l ? d in l ? l[d] : l.document.documentElement[g] : b[g];
                l ? l.scrollTo(e ? f(l).scrollLeft() : m, e ? m : f(l).scrollTop()) : b[g] = m
            }, b, g, arguments.length, null)
        }
    });
    f.each({
        Height: "height",
        Width: "width"
    }, function(b, d) {
        f.each({
            padding: "inner" +
                b,
            content: d,
            "": "outer" + b
        }, function(e, g) {
            f.fn[g] = function(g, m) {
                var l = arguments.length && (e || "boolean" != typeof g),
                    q = e || (!0 === g || !0 === m ? "margin" : "border");
                return f.access(this, function(d, e, g) {
                    var m;
                    return f.isWindow(d) ? d.document.documentElement["client" + b] : 9 === d.nodeType ? (m = d.documentElement, Math.max(d.body["scroll" + b], m["scroll" + b], d.body["offset" + b], m["offset" + b], m["client" + b])) : g === c ? f.css(d, e, g, q) : f.style(d, e, g, q)
                }, d, l ? g : c, l, null)
            }
        })
    });
    b.jQuery = b.$ = f;
    "function" == typeof define && define.amd && define.amd.jQuery &&
        define("jquery", [], function() {
            return f
        })
})(window);
var portraitMode = !1,
    mobilePortraitWidth = 480,
    mobilePortraitHeight = 640,
    mobileLandscapeWidth = 640,
    mobileLandscapeHeight = 480,
    mobileWidth = portraitMode ? mobilePortraitWidth : mobileLandscapeWidth,
    mobileHeight = portraitMode ? mobilePortraitHeight : mobileLandscapeHeight,
    desktopWidth = 640,
    desktopHeight = 480,
    w, h, multiplier, destW, destH, dynamicClickableEntityDivs = {},
    coreDivsToResize = ["game", "play", "orientate", "bg"],
    advancedDivsToResize = {/*
        MobileAdInGamePreroll: {
            "box-width": _SETTINGS.Ad.Mobile.Preroll.Width + 2,
            "box-height": _SETTINGS.Ad.Mobile.Preroll.Height +
                20
        },
        MobileAdInGameEnd: {
            "box-width": _SETTINGS.Ad.Mobile.End.Width + 2,
            "box-height": _SETTINGS.Ad.Mobile.End.Height + 20
        },
        MobileAdInGamePreroll2: {
            "box-width": _SETTINGS.Ad.Mobile.Preroll.Width + 2,
            "box-height": _SETTINGS.Ad.Mobile.Preroll.Height + 20
        },
        MobileAdInGameEnd2: {
            "box-width": _SETTINGS.Ad.Mobile.End.Width + 2,
            "box-height": _SETTINGS.Ad.Mobile.End.Height + 20
        },
        MobileAdInGamePreroll3: {
            "box-width": _SETTINGS.Ad.Mobile.Preroll.Width + 2,
            "box-height": _SETTINGS.Ad.Mobile.Preroll.Height + 20
        },
        MobileAdInGameEnd3: {
            "box-width": _SETTINGS.Ad.Mobile.End.Width +
                2,
            "box-height": _SETTINGS.Ad.Mobile.End.Height + 20
        }*/
    };

function adjustLayers(b) {
    for (i = 0; i < coreDivsToResize.length; i++) {
        var c = $("#" + coreDivsToResize[i]);
        ig.ua.mobile ? (c.width(w), c.height(h)) : (c.width(destW), c.height(destH), c.css("left", b ? 0 : w / 2 - destW / 2))
    }
    for (key in advancedDivsToResize) {
        b = $("#" + key);
        c = $("#" + key + "-Box");
        try {
            b.width(w), b.height(h), c.css("left", (w - advancedDivsToResize[key]["box-width"]) / 2), c.css("top", (h - advancedDivsToResize[key]["box-height"]) / 2)
        } catch (d) {
            console.log(d)
        }
    }
    b = $("#ajaxbar");
    b.width(w);
    b.height(h)
}

function sizeHandler() {
    if ($("#game")) {
        w = window.innerWidth;
        h = window.innerHeight;
        ig.ua.mobile ? (multiplier = Math.min(h / mobileHeight, w / mobileWidth), destW = mobileWidth * multiplier, destH = mobileHeight * multiplier, multiplierX = w / mobileWidth, multiplierY = h / mobileHeight) : (multiplier = Math.min(h / desktopHeight, w / desktopWidth), destW = desktopWidth * multiplier, destH = desktopHeight * multiplier, multiplierY = multiplierX = multiplier);
        widthRatio = window.innerWidth / mobileWidth;
        heightRatio = window.innerHeight / mobileHeight;
        adjustLayers();
        window.scrollTo(0, 1);
        for (var b = navigator.userAgent.split(" "), c = 0; c < b.length; c++) b[c].substr(0, 8);
        navigator.userAgent.indexOf("wv");
        navigator.userAgent.indexOf("SamsungBrowser")
    }
}
var _COLORS = {
    red: "rgba(255,0,0,1)",
    redAlpha50: "rgba(255,0,0,0.50)",
    turq: "rgba(0,255,255,1)",
    yellow: "rgba(255,255,0,1)",
    green: "rgba(0,200,0,1)",
    black: "rgba(0,0,0,1)",
    white: "rgba(255,255,255,1)",
    whiteAlpha25: "rgba(255,255,255,0.25)",
    blue: "rgba(0,0,255,1)",
    blueAlpha50: "rgba(0,0,255,0.5)",
    gold: "rgba(255,215,0,1)",
    yellowAlpha50: "rgba(255,255,0,0.5)"
};

function orientationHandler() {
    console.log("changing orientation ...");
    ig.ua.mobile && ((portraitMode ? window.innerHeight < window.innerWidth : window.innerHeight > window.innerWidth) ? ($("#orientate").show(), $("#game").hide()) : ($("#orientate").hide(), $("#game").show()));
    sizeHandler()
}

function fixSamsungHandler() {
    ig.ua.android && !(4.2 > parseFloat(navigator.userAgent.slice(navigator.userAgent.indexOf("Android") + 8, navigator.userAgent.indexOf("Android") + 11))) && (!(0 > navigator.userAgent.indexOf("GT")) && !(0 < navigator.userAgent.indexOf("Chrome")) && !(0 < navigator.userAgent.indexOf("Firefox"))) && (document.addEventListener("touchstart", function(b) {
        b.preventDefault();
        return !1
    }, !1), document.addEventListener("touchmove", function(b) {
        b.preventDefault();
        return !1
    }, !1), document.addEventListener("touchend",
        function(b) {
            b.preventDefault();
            return !1
        }, !1))
}
window.addEventListener("resize", function() {
    orientationHandler()
}, !1);
window.addEventListener("orientationchange", function() {
    orientationHandler()
}, !1);
document.ontouchmove = function() {
    window.scrollTo(0, 1)
};

function getInternetExplorerVersion() {
    var b = -1;
    "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (b = parseFloat(RegExp.$1));
    return b
}
var ie = getInternetExplorerVersion();

function getQueryVariable(b) {
    for (var c = window.location.search.substring(1).split("&"), d = 0; d < c.length; d++) {
        var e = c[d].split("=");
        if (decodeURIComponent(e[0]) == b) return decodeURIComponent(e[1])
    }
}
this.jukebox = {};
jukebox.Player = function(b, c) {
    this.id = ++jukebox.__jukeboxId;
    this.origin = c || null;
    this.settings = {};
    for (var d in this.defaults) this.settings[d] = this.defaults[d];
    if ("[object Object]" === Object.prototype.toString.call(b))
        for (var e in b) this.settings[e] = b[e];
    "[object Function]" === Object.prototype.toString.call(jukebox.Manager) && (jukebox.Manager = new jukebox.Manager);
    this.resource = this.isPlaying = null;
    this.resource = "[object Object]" === Object.prototype.toString.call(jukebox.Manager) ? jukebox.Manager.getPlayableResource(this.settings.resources) :
        this.settings.resources[0] || null;
    if (null === this.resource) throw "Your browser can't playback the given resources - or you have missed to include jukebox.Manager";
    this.__init();
    return this
};
jukebox.__jukeboxId = 0;
jukebox.Player.prototype = {
    defaults: {
        resources: [],
        autoplay: !1,
        spritemap: {},
        flashMediaElement: "./swf/FlashMediaElement.swf",
        timeout: 1E3
    },
    __addToManager: function() {
        !0 !== this.__wasAddedToManager && (jukebox.Manager.add(this), this.__wasAddedToManager = !0)
    },
    __init: function() {
        var b = this,
            c = this.settings,
            d = {},
            e;
        jukebox.Manager && void 0 !== jukebox.Manager.features && (d = jukebox.Manager.features);
        if (!0 === d.html5audio) {
            this.context = new Audio;
            this.context.src = this.resource;
            if (null === this.origin) {
                var g = function(c) {
                    b.__addToManager(c)
                };
                this.context.addEventListener("canplaythrough", g, !0);
                window.setTimeout(function() {
                    b.context.removeEventListener("canplaythrough", g, !0);
                    g("timeout")
                }, c.timeout)
            }
            this.context.autobuffer = !0;
            this.context.preload = !0;
            for (e in this.HTML5API) this[e] = this.HTML5API[e];
            1 < d.channels ? !0 === c.autoplay ? this.context.autoplay = !0 : void 0 !== c.spritemap[c.autoplay] && this.play(c.autoplay) : 1 === d.channels && void 0 !== c.spritemap[c.autoplay] && (this.backgroundMusic = c.spritemap[c.autoplay], this.backgroundMusic.started = Date.now ?
                Date.now() : +new Date, this.play(c.autoplay));
            1 == d.channels && !0 !== c.canPlayBackground && (window.addEventListener("pagehide", function() {
                null !== b.isPlaying && (b.pause(), b.__wasAutoPaused = !0)
            }), window.addEventListener("pageshow", function() {
                b.__wasAutoPaused && (b.resume(), delete b._wasAutoPaused)
            }))
        } else if (!0 === d.flashaudio) {
            for (e in this.FLASHAPI) this[e] = this.FLASHAPI[e];
            d = ["id=jukebox-flashstream-" + this.id, "autoplay=" + c.autoplay, "file=" + window.encodeURIComponent(this.resource)];
            this.__initFlashContext(d);
            !0 === c.autoplay ? this.play(0) : c.spritemap[c.autoplay] && this.play(c.autoplay)
        } else throw "Your Browser does not support Flash Audio or HTML5 Audio.";
    },
    __initFlashContext: function(b) {
        var c, d = this.settings.flashMediaElement,
            e, g = {
                flashvars: b.join("&"),
                quality: "high",
                bgcolor: "#000000",
                wmode: "transparent",
                allowscriptaccess: "always",
                allowfullscreen: "true"
            };
        if (navigator.userAgent.match(/MSIE/)) {
            c = document.createElement("div");
            document.getElementsByTagName("body")[0].appendChild(c);
            var l = document.createElement("object");
            l.id = "jukebox-flashstream-" + this.id;
            l.setAttribute("type", "application/x-shockwave-flash");
            l.setAttribute("classid", "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000");
            l.setAttribute("width", "0");
            l.setAttribute("height", "0");
            g.movie = d + "?x=" + (Date.now ? Date.now() : +new Date);
            g.flashvars = b.join("&amp;");
            for (e in g) b = document.createElement("param"), b.setAttribute("name", e), b.setAttribute("value", g[e]), l.appendChild(b);
            c.outerHTML = l.outerHTML;
            this.context = document.getElementById("jukebox-flashstream-" + this.id)
        } else {
            c =
                document.createElement("embed");
            c.id = "jukebox-flashstream-" + this.id;
            c.setAttribute("type", "application/x-shockwave-flash");
            c.setAttribute("width", "100");
            c.setAttribute("height", "100");
            g.play = !1;
            g.loop = !1;
            g.src = d + "?x=" + (Date.now ? Date.now() : +new Date);
            for (e in g) c.setAttribute(e, g[e]);
            document.getElementsByTagName("body")[0].appendChild(c);
            this.context = c
        }
    },
    backgroundHackForiOS: function() {
        if (void 0 !== this.backgroundMusic) {
            var b = Date.now ? Date.now() : +new Date;
            void 0 === this.backgroundMusic.started ? (this.backgroundMusic.started =
                b, this.setCurrentTime(this.backgroundMusic.start)) : (this.backgroundMusic.lastPointer = (b - this.backgroundMusic.started) / 1E3 % (this.backgroundMusic.end - this.backgroundMusic.start) + this.backgroundMusic.start, this.play(this.backgroundMusic.lastPointer))
        }
    },
    play: function(b, c) {
        if (null !== this.isPlaying && !0 !== c) void 0 !== jukebox.Manager && jukebox.Manager.addToQueue(b, this.id);
        else {
            var d = this.settings.spritemap,
                e;
            if (void 0 !== d[b]) e = d[b].start;
            else if ("number" === typeof b) {
                e = b;
                for (var g in d)
                    if (e >= d[g].start && e <=
                        d[g].end) {
                        b = g;
                        break
                    }
            }
            void 0 !== e && "[object Object]" === Object.prototype.toString.call(d[b]) && (this.isPlaying = this.settings.spritemap[b], this.context.play && this.context.play(), this.wasReady = this.setCurrentTime(e))
        }
    },
    stop: function() {
        this.__lastPosition = 0;
        this.isPlaying = null;
        this.backgroundMusic ? this.backgroundHackForiOS() : this.context.pause();
        return !0
    },
    pause: function() {
        this.isPlaying = null;
        this.__lastPosition = this.getCurrentTime();
        this.context.pause();
        return this.__lastPosition
    },
    resume: function(b) {
        b = "number" ===
            typeof b ? b : this.__lastPosition;
        if (null !== b) return this.play(b), this.__lastPosition = null, !0;
        this.context.play();
        return !1
    },
    HTML5API: {
        getVolume: function() {
            return this.context.volume || 1
        },
        setVolume: function(b) {
            this.context.volume = b;
            return 1E-4 > Math.abs(this.context.volume - b) ? !0 : !1
        },
        getCurrentTime: function() {
            return this.context.currentTime || 0
        },
        setCurrentTime: function(b) {
            try {
                return this.context.currentTime = b, !0
            } catch (c) {
                return !1
            }
        }
    },
    FLASHAPI: {
        getVolume: function() {
            return this.context && "function" === typeof this.context.getVolume ?
                this.context.getVolume() : 1
        },
        setVolume: function(b) {
            return this.context && "function" === typeof this.context.setVolume ? (this.context.setVolume(b), !0) : !1
        },
        getCurrentTime: function() {
            return this.context && "function" === typeof this.context.getCurrentTime ? this.context.getCurrentTime() : 0
        },
        setCurrentTime: function(b) {
            return this.context && "function" === typeof this.context.setCurrentTime ? this.context.setCurrentTime(b) : !1
        }
    }
};
if (void 0 === this.jukebox) throw "jukebox.Manager requires jukebox.Player (Player.js) to run properly.";
jukebox.Manager = function(b) {
    this.features = {};
    this.codecs = {};
    this.__players = {};
    this.__playersLength = 0;
    this.__clones = {};
    this.__queue = [];
    this.settings = {};
    for (var c in this.defaults) this.settings[c] = this.defaults[c];
    if ("[object Object]" === Object.prototype.toString.call(b))
        for (var d in b) this.settings[d] = b[d];
    this.__detectFeatures();
    jukebox.Manager.__initialized = !1 === this.settings.useGameLoop ? window.setInterval(function() {
        jukebox.Manager.loop()
    }, 20) : !0
};
jukebox.Manager.prototype = {
    defaults: {
        useFlash: !1,
        useGameLoop: !1
    },
    __detectFeatures: function() {
        var b = window.Audio && new Audio;
        if (b && b.canPlayType && !1 === this.settings.useFlash) {
            for (var c = [{
                    e: "3gp",
                    m: ["audio/3gpp", "audio/amr"]
                }, {
                    e: "aac",
                    m: ["audio/aac", "audio/aacp"]
                }, {
                    e: "amr",
                    m: ["audio/amr", "audio/3gpp"]
                }, {
                    e: "caf",
                    m: ["audio/IMA-ADPCM", "audio/x-adpcm", 'audio/x-aiff; codecs="IMA-ADPCM, ADPCM"']
                }, {
                    e: "m4a",
                    m: 'audio/mp4{audio/mp4; codecs="mp4a.40.2,avc1.42E01E"{audio/mpeg4{audio/mpeg4-generic{audio/mp4a-latm{audio/MP4A-LATM{audio/x-m4a'.split("{")
                }, {
                    e: "mp3",
                    m: ["audio/mp3", "audio/mpeg", 'audio/mpeg; codecs="mp3"', "audio/MPA", "audio/mpa-robust"]
                }, {
                    e: "mpga",
                    m: ["audio/MPA", "audio/mpa-robust", "audio/mpeg", "video/mpeg"]
                }, {
                    e: "mp4",
                    m: ["audio/mp4", "video/mp4"]
                }, {
                    e: "ogg",
                    m: ["application/ogg", "audio/ogg", 'audio/ogg; codecs="theora, vorbis"', "video/ogg", 'video/ogg; codecs="theora, vorbis"']
                }, {
                    e: "wav",
                    m: ["audio/wave", "audio/wav", 'audio/wav; codecs="1"', "audio/x-wav", "audio/x-pn-wav"]
                }, {
                    e: "webm",
                    m: ["audio/webm", 'audio/webm; codecs="vorbis"', "video/webm"]
                }],
                d, e, g = 0, l = c.length; g < l; g++)
                if (e = c[g].e, c[g].m.length && "object" === typeof c[g].m)
                    for (var r = 0, p = c[g].m.length; r < p; r++)
                        if (d = c[g].m[r], "" !== b.canPlayType(d)) {
                            this.codecs[e] = d;
                            break
                        } else this.codecs[e] || (this.codecs[e] = !1);
            this.features.html5audio = !(!this.codecs.mp3 && !this.codecs.ogg && !this.codecs.webm && !this.codecs.wav);
            this.features.channels = 8;
            b.volume = 0.1337;
            this.features.volume = !!(1E-4 > Math.abs(b.volume - 0.1337));
            navigator.userAgent.match(/iPhone|iPod|iPad/i) && (this.features.channels = 1)
        }
        this.features.flashaudio = !!navigator.mimeTypes["application/x-shockwave-flash"] || !!navigator.plugins["Shockwave Flash"] || !1;
        if (window.ActiveXObject) try {
            new ActiveXObject("ShockwaveFlash.ShockwaveFlash.10"), this.features.flashaudio = !0
        } catch (t) {}!0 === this.settings.useFlash && (this.features.flashaudio = !0);
        !0 === this.features.flashaudio && !this.features.html5audio && (this.codecs.mp3 = "audio/mp3", this.codecs.mpga = "audio/mpeg", this.codecs.mp4 = "audio/mp4", this.codecs.m4a = "audio/mp4", this.codecs["3gp"] = "audio/3gpp", this.codecs.amr = "audio/amr",
            this.features.volume = !0, this.features.channels = 1)
    },
    __getPlayerById: function(b) {
        return this.__players && void 0 !== this.__players[b] ? this.__players[b] : null
    },
    __getClone: function(b, c) {
        for (var d in this.__clones) {
            var e = this.__clones[d];
            if (null === e.isPlaying && e.origin === b) return e
        }
        if ("[object Object]" === Object.prototype.toString.call(c)) {
            d = {};
            for (var g in c) d[g] = c[g];
            d.autoplay = !1;
            g = new jukebox.Player(d, b);
            g.isClone = !0;
            g.wasReady = !1;
            return this.__clones[g.id] = g
        }
        return null
    },
    loop: function() {
        if (0 !== this.__playersLength)
            if (this.__queue.length &&
                this.__playersLength < this.features.channels) {
                var b = this.__queue[0],
                    c = this.__getPlayerById(b.origin);
                if (null !== c) {
                    var d = this.__getClone(b.origin, c.settings);
                    null !== d && (!0 === this.features.volume && (c = this.__players[b.origin]) && d.setVolume(c.getVolume()), this.add(d), d.play(b.pointer, !0))
                }
                this.__queue.splice(0, 1)
            } else
                for (d in this.__queue.length && 1 === this.features.channels && (b = this.__queue[0], c = this.__getPlayerById(b.origin), null !== c && c.play(b.pointer, !0), this.__queue.splice(0, 1)), this.__players) b = this.__players[d],
                    c = b.getCurrentTime() || 0, b.isPlaying && !1 === b.wasReady ? b.wasReady = b.setCurrentTime(b.isPlaying.start) : b.isPlaying && !0 === b.wasReady ? c > b.isPlaying.end && (!0 === b.isPlaying.loop ? b.play(b.isPlaying.start, !0) : b.stop()) : b.isClone && null === b.isPlaying ? this.remove(b) : void 0 !== b.backgroundMusic && null === b.isPlaying && c > b.backgroundMusic.end && b.backgroundHackForiOS()
    },
    getPlayableResource: function(b) {
        "[object Array]" !== Object.prototype.toString.call(b) && (b = [b]);
        for (var c = 0, d = b.length; c < d; c++) {
            var e = b[c],
                g = e.match(/\.([^\.]*)$/)[1];
            if (g && this.codecs[g]) return e
        }
        return null
    },
    add: function(b) {
        return b instanceof jukebox.Player && void 0 === this.__players[b.id] ? (this.__playersLength++, this.__players[b.id] = b, !0) : !1
    },
    remove: function(b) {
        return b instanceof jukebox.Player && void 0 !== this.__players[b.id] ? (this.__playersLength--, delete this.__players[b.id], !0) : !1
    },
    addToQueue: function(b, c) {
        return ("string" === typeof b || "number" === typeof b) && void 0 !== this.__players[c] ? (this.__queue.push({
            pointer: b,
            origin: c
        }), !0) : !1
    }
};
(function() {
    var b = {},
        c = null,
        d = !0,
        e = !1;
    if ("undefined" !== typeof AudioContext) c = new AudioContext;
    else if ("undefined" !== typeof webkitAudioContext) c = new webkitAudioContext;
    else if ("undefined" !== typeof Audio) {
        d = !1;
        try {
            new Audio
        } catch (g) {
            e = !0
        }
    } else d = !1, e = !0; if (d) {
        var l = "undefined" === typeof c.createGain ? c.createGainNode() : c.createGain();
        l.gain.value = 1;
        l.connect(c.destination)
    }
    var r = function() {
        this._volume = 1;
        this._muted = !1;
        this.usingWebAudio = d;
        this.noAudio = e;
        this._howls = []
    };
    r.prototype = {
        volume: function(b) {
            b =
                parseFloat(b);
            if (0 <= b && 1 >= b) {
                this._volume = b;
                d && (l.gain.value = b);
                for (var c in this._howls)
                    if (this._howls.hasOwnProperty(c) && !1 === this._howls[c]._webAudio)
                        for (b = 0; b < this._howls[c]._audioNode.length; b++) this._howls[c]._audioNode[b].volume = this._howls[c]._volume * this._volume;
                return this
            }
            return d ? l.gain.value : this._volume
        },
        mute: function() {
            this._setMuted(!0);
            return this
        },
        unmute: function() {
            this._setMuted(!1);
            return this
        },
        _setMuted: function(b) {
            this._muted = b;
            d && (l.gain.value = b ? 0 : this._volume);
            for (var c in this._howls)
                if (this._howls.hasOwnProperty(c) &&
                    !1 === this._howls[c]._webAudio)
                    for (var e = 0; e < this._howls[c]._audioNode.length; e++) this._howls[c]._audioNode[e].muted = b
        }
    };
    var p = new r,
        r = null;
    if (!e) var r = new Audio,
        t = {
            mp3: !!r.canPlayType("audio/mpeg;").replace(/^no$/, ""),
            opus: !!r.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
            ogg: !!r.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
            wav: !!r.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
            m4a: !!(r.canPlayType("audio/x-m4a;") || r.canPlayType("audio/aac;")).replace(/^no$/,
                ""),
            mp4: !!(r.canPlayType("audio/x-mp4;") || r.canPlayType("audio/aac;")).replace(/^no$/, ""),
            weba: !!r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")
        };
    var s = function(b) {
        this._autoplay = b.autoplay || !1;
        this._buffer = b.buffer || !1;
        this._duration = b.duration || 0;
        this._format = b.format || null;
        this._loop = b.loop || !1;
        this._loaded = !1;
        this._sprite = b.sprite || {};
        this._src = b.src || "";
        this._pos3d = b.pos3d || [0, 0, -0.5];
        this._volume = void 0 !== b.volume ? b.volume : 1;
        this._urls = b.urls || [];
        this._rate = b.rate || 1;
        this._onload = [b.onload || function() {}];
        this._onloaderror = [b.onloaderror || function() {}];
        this._onend = [b.onend || function() {}];
        this._onpause = [b.onpause || function() {}];
        this._onplay = [b.onplay || function() {}];
        this._onendTimer = [];
        this._webAudio = d && !this._buffer;
        this._audioNode = [];
        this._webAudio && this._setupAudioNode();
        p._howls.push(this);
        this.load()
    };
    s.prototype = {
        load: function() {
            var d = this,
                g = null;
            if (!e) {
                for (var l = 0; l < d._urls.length; l++) {
                    var s, r;
                    if (d._format) s = d._format;
                    else if (r = d._urls[l].toLowerCase().split("?")[0], s =
                        (s = r.match(/.+\.([^?]+)(\?|$)/)) && 2 <= s.length ? s : r.match(/data\:audio\/([^?]+);/)) s = s[1];
                    else {
                        d.on("loaderror");
                        return
                    } if (t[s]) {
                        g = d._urls[l];
                        break
                    }
                }
                if (g) {
                    d._src = g;
                    if (d._webAudio) {
                        var G = g;
                        if (G in b) d._duration = b[G].duration, y(d);
                        else {
                            var M = new XMLHttpRequest;
                            M.open("GET", G, !0);
                            M.responseType = "arraybuffer";
                            M.onload = function() {
                                c.decodeAudioData(M.response, function(c) {
                                    c && (b[G] = c, y(d, c))
                                }, function() {
                                    d.on("loaderror")
                                })
                            };
                            M.onerror = function() {
                                d._webAudio && (d._buffer = !0, d._webAudio = !1, d._audioNode = [], delete d._gainNode,
                                    d.load())
                            };
                            try {
                                M.send()
                            } catch (Za) {
                                M.onerror()
                            }
                        }
                    } else {
                        var H = new Audio;
                        d._audioNode.push(H);
                        H.src = g;
                        H._pos = 0;
                        H.preload = "auto";
                        H.volume = p._muted ? 0 : d._volume * p.volume();
                        b[g] = d;
                        var Q = function() {
                            d._duration = Math.ceil(10 * H.duration) / 10;
                            0 === Object.getOwnPropertyNames(d._sprite).length && (d._sprite = {
                                _default: [0, 1E3 * d._duration]
                            });
                            d._loaded || (d._loaded = !0, d.on("load"));
                            d._autoplay && d.play();
                            H.removeEventListener("canplaythrough", Q, !1)
                        };
                        H.addEventListener("canplaythrough", Q, !1);
                        H.load()
                    }
                    return d
                }
            }
            d.on("loaderror")
        },
        urls: function(b) {
            return b ? (this.stop(), this._urls = "string" === typeof b ? [b] : b, this._loaded = !1, this.load(), this) : this._urls
        },
        play: function(d, e) {
            var g = this;
            "function" === typeof d && (e = d);
            if (!d || "function" === typeof d) d = "_default";
            if (!g._loaded) return g.on("load", function() {
                g.play(d, e)
            }), g;
            if (!g._sprite[d]) return "function" === typeof e && e(), g;
            g._inactiveNode(function(l) {
                l._sprite = d;
                var s = 0 < l._pos ? l._pos : g._sprite[d][0] / 1E3,
                    t = g._sprite[d][1] / 1E3 - l._pos,
                    r = !(!g._loop && !g._sprite[d][2]),
                    y = "string" === typeof e ? e :
                    Math.round(Date.now() * Math.random()) + "",
                    H, Q = {
                        id: y,
                        sprite: d,
                        loop: r
                    };
                H = setTimeout(function() {
                    !g._webAudio && r && g.stop(Q.id, Q.timer).play(d, Q.id);
                    g._webAudio && !r && (g._nodeById(Q.id).paused = !0, g._nodeById(Q.id)._pos = 0);
                    !g._webAudio && !r && g.stop(Q.id, Q.timer);
                    g.on("end", y)
                }, 1E3 * t);
                g._onendTimer.push(H);
                Q.timer = g._onendTimer[g._onendTimer.length - 1];
                if (g._webAudio) {
                    H = g._sprite[d][0] / 1E3;
                    var O = g._sprite[d][1] / 1E3;
                    l.id = y;
                    l.paused = !1;
                    H = [r, H, O];
                    O = g._nodeById(y);
                    O.bufferSource = c.createBufferSource();
                    O.bufferSource.buffer =
                        b[g._src];
                    O.bufferSource.connect(O.panner);
                    O.bufferSource.loop = H[0];
                    H[0] && (O.bufferSource.loopStart = H[1], O.bufferSource.loopEnd = H[1] + H[2]);
                    O.bufferSource.playbackRate.value = g._rate;
                    g._playStart = c.currentTime;
                    l.gain.value = g._volume;
                    "undefined" === typeof l.bufferSource.start ? l.bufferSource.noteGrainOn(0, s, t) : l.bufferSource.start(0, s, t)
                } else if (4 === l.readyState) l.id = y, l.currentTime = s, l.muted = p._muted, l.volume = g._volume * p.volume(), setTimeout(function() {
                    l.play()
                }, 0);
                else {
                    g._clearEndTimer(H);
                    var Aa = d,
                        oa =
                        e,
                        ta = function() {
                            g.play(Aa, oa);
                            l.removeEventListener("canplaythrough", ta, !1)
                        };
                    l.addEventListener("canplaythrough", ta, !1);
                    return g
                }
                g.on("play");
                "function" === typeof e && e(y);
                return g
            });
            return g
        },
        pause: function(b, c) {
            var d = this;
            if (!d._loaded) return d.on("play", function() {
                d.pause(b)
            }), d;
            d._clearEndTimer(c || 0);
            var e = b ? d._nodeById(b) : d._activeNode();
            if (e)
                if (e._pos = d.pos(null, b), d._webAudio) {
                    if (!e.bufferSource || e.paused) return d;
                    e.paused = !0;
                    "undefined" === typeof e.bufferSource.stop ? e.bufferSource.noteOff(0) :
                        e.bufferSource.stop(0)
                } else e.pause();
            d.on("pause");
            return d
        },
        stop: function(b, c) {
            var d = this;
            if (!d._loaded) return d.on("play", function() {
                d.stop(b)
            }), d;
            d._clearEndTimer(c || 0);
            var e = b ? d._nodeById(b) : d._activeNode();
            if (e)
                if (e._pos = 0, d._webAudio) {
                    if (!e.bufferSource || e.paused) return d;
                    e.paused = !0;
                    "undefined" === typeof e.bufferSource.stop ? e.bufferSource.noteOff(0) : e.bufferSource.stop(0)
                } else e.pause(), e.currentTime = 0;
            return d
        },
        mute: function(b) {
            var c = this;
            if (!c._loaded) return c.on("play", function() {
                    c.mute(b)
                }),
                c;
            var d = b ? c._nodeById(b) : c._activeNode();
            d && (c._webAudio ? d.gain.value = 0 : d.volume = 0);
            return c
        },
        unmute: function(b) {
            var c = this;
            if (!c._loaded) return c.on("play", function() {
                c.unmute(b)
            }), c;
            var d = b ? c._nodeById(b) : c._activeNode();
            d && (c._webAudio ? d.gain.value = c._volume : d.volume = c._volume);
            return c
        },
        volume: function(b, c) {
            var d = this;
            b = parseFloat(b);
            if (0 <= b && 1 >= b) {
                d._volume = b;
                if (!d._loaded) return d.on("play", function() {
                    d.volume(b, c)
                }), d;
                var e = c ? d._nodeById(c) : d._activeNode();
                e && (d._webAudio ? e.gain.value = b : e.volume =
                    b * p.volume());
                return d
            }
            return d._volume
        },
        loop: function(b) {
            return "boolean" === typeof b ? (this._loop = b, this) : this._loop
        },
        sprite: function(b) {
            return "object" === typeof b ? (this._sprite = b, this) : this._sprite
        },
        pos: function(b, d) {
            var e = this;
            if (!e._loaded) return e.on("load", function() {
                e.pos(b)
            }), "number" === typeof b ? e : e._pos || 0;
            b = parseFloat(b);
            var g = d ? e._nodeById(d) : e._activeNode();
            if (g) return 0 <= b ? (e.pause(d), g._pos = b, e.play(g._sprite, d), e) : e._webAudio ? g._pos + (c.currentTime - e._playStart) : g.currentTime;
            if (0 <= b) return e;
            for (g = 0; g < e._audioNode.length; g++)
                if (e._audioNode[g].paused && 4 === e._audioNode[g].readyState) return e._webAudio ? e._audioNode[g]._pos : e._audioNode[g].currentTime
        },
        pos3d: function(b, c, d, e) {
            var g = this;
            c = "undefined" === typeof c || !c ? 0 : c;
            d = "undefined" === typeof d || !d ? -0.5 : d;
            if (!g._loaded) return g.on("play", function() {
                g.pos3d(b, c, d, e)
            }), g;
            if (0 <= b || 0 > b) {
                if (g._webAudio) {
                    var l = e ? g._nodeById(e) : g._activeNode();
                    l && (g._pos3d = [b, c, d], l.panner.setPosition(b, c, d))
                }
            } else return g._pos3d;
            return g
        },
        fade: function(b, c, d,
            e, g) {
            var l = this,
                p = Math.abs(b - c),
                s = b > c ? "down" : "up",
                p = p / 0.01,
                t = d / p;
            if (!l._loaded) return l.on("load", function() {
                l.fade(b, c, d, e, g)
            }), l;
            l.volume(b, g);
            for (var r = 1; r <= p; r++)(function() {
                var b = Math.round(1E3 * (l._volume + ("up" === s ? 0.01 : -0.01) * r)) / 1E3;
                setTimeout(function() {
                    l.volume(b, g);
                    b === c && e && e()
                }, t * r)
            })()
        },
        fadeIn: function(b, c, d) {
            return this.volume(0).play().fade(0, b, c, d)
        },
        fadeOut: function(b, c, d, e) {
            var g = this;
            return g.fade(g._volume, b, c, function() {
                d && d();
                g.pause(e);
                g.on("end")
            }, e)
        },
        _nodeById: function(b) {
            for (var c =
                this._audioNode[0], d = 0; d < this._audioNode.length; d++)
                if (this._audioNode[d].id === b) {
                    c = this._audioNode[d];
                    break
                }
            return c
        },
        _activeNode: function() {
            for (var b = null, c = 0; c < this._audioNode.length; c++)
                if (!this._audioNode[c].paused) {
                    b = this._audioNode[c];
                    break
                }
            this._drainPool();
            return b
        },
        _inactiveNode: function(b) {
            for (var c = null, d = 0; d < this._audioNode.length; d++)
                if (this._audioNode[d].paused && 4 === this._audioNode[d].readyState) {
                    b(this._audioNode[d]);
                    c = !0;
                    break
                }
            this._drainPool();
            if (!c) {
                var e;
                this._webAudio ? (e = this._setupAudioNode(),
                    b(e)) : (this.load(), e = this._audioNode[this._audioNode.length - 1], e.addEventListener("loadedmetadata", function() {
                    b(e)
                }))
            }
        },
        _drainPool: function() {
            var b = 0,
                c;
            for (c = 0; c < this._audioNode.length; c++) this._audioNode[c].paused && b++;
            for (c = this._audioNode.length - 1; 0 <= c && !(5 >= b); c--) this._audioNode[c].paused && (this._webAudio && this._audioNode[c].disconnect(0), b--, this._audioNode.splice(c, 1))
        },
        _clearEndTimer: function(b) {
            b = this._onendTimer.indexOf(b);
            b = 0 <= b ? b : 0;
            this._onendTimer[b] && (clearTimeout(this._onendTimer[b]),
                this._onendTimer.splice(b, 1))
        },
        _setupAudioNode: function() {
            var b = this._audioNode,
                d = this._audioNode.length;
            b[d] = "undefined" === typeof c.createGain ? c.createGainNode() : c.createGain();
            b[d].gain.value = this._volume;
            b[d].paused = !0;
            b[d]._pos = 0;
            b[d].readyState = 4;
            b[d].connect(l);
            b[d].panner = c.createPanner();
            b[d].panner.setPosition(this._pos3d[0], this._pos3d[1], this._pos3d[2]);
            b[d].panner.connect(b[d]);
            return b[d]
        },
        on: function(b, c) {
            var d = this["_on" + b];
            if ("function" === typeof c) d.push(c);
            else
                for (var e = 0; e < d.length; e++) c ?
                    d[e].call(this, c) : d[e].call(this);
            return this
        },
        off: function(b, c) {
            for (var d = this["_on" + b], e = c.toString(), g = 0; g < d.length; g++)
                if (e === d[g].toString()) {
                    d.splice(g, 1);
                    break
                }
            return this
        },
        unload: function() {
            for (var c = this._audioNode, d = 0; d < this._audioNode.length; d++) c[d].paused || this.stop(c[d].id), this._webAudio ? c[d].disconnect(0) : c[d].src = "";
            c = p._howls.indexOf(this);
            null !== c && 0 <= c && p._howls.splice(c, 1);
            delete b[this._src]
        }
    };
    if (d) var y = function(b, c) {
        b._duration = c ? c.duration : b._duration;
        0 === Object.getOwnPropertyNames(b._sprite).length &&
            (b._sprite = {
                _default: [0, 1E3 * b._duration]
            });
        b._loaded || (b._loaded = !0, b.on("load"));
        b._autoplay && b.play()
    };
    "function" === typeof define && define.amd && define(function() {
        return {
            Howler: p,
            Howl: s
        }
    });
    "undefined" !== typeof exports && (exports.Howler = p, exports.Howl = s);
    window.Howler = p;
    window.Howl = s
})();
(function(b) {
    Number.prototype.map = function(b, c, d, e) {
        return d + (e - d) * ((this - b) / (c - b))
    };
    Number.prototype.limit = function(b, c) {
        return Math.min(c, Math.max(b, this))
    };
    Number.prototype.round = function(b) {
        b = Math.pow(10, b || 0);
        return Math.round(this * b) / b
    };
    Number.prototype.floor = function() {
        return Math.floor(this)
    };
    Number.prototype.ceil = function() {
        return Math.ceil(this)
    };
    Number.prototype.toInt = function() {
        return this | 0
    };
    Number.prototype.toRad = function() {
        return this / 180 * Math.PI
    };
    Number.prototype.toDeg = function() {
        return 180 *
            this / Math.PI
    };
    Array.prototype.erase = function(b) {
        for (var c = this.length; c--;) this[c] === b && this.splice(c, 1);
        return this
    };
    Array.prototype.random = function() {
        return this[Math.floor(Math.random() * this.length)]
    };
    Function.prototype.bind = Function.prototype.bind || function(b) {
        if ("function" !== typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        var c = Array.prototype.slice.call(arguments, 1),
            d = this,
            e = function() {},
            g = function() {
                return d.apply(this instanceof e && b ?
                    this : b, c.concat(Array.prototype.slice.call(arguments)))
            };
        e.prototype = this.prototype;
        g.prototype = new e;
        return g
    };
    b.ig = {
        game: null,
        debug: null,
        version: "1.23",
        global: b,
        modules: {},
        resources: [],
        ready: !1,
        baked: !1,
        nocache: "",
        ua: {},
        prefix: b.ImpactPrefix || "",
        lib: "lib/",
        _current: null,
        _loadQueue: [],
        _waitForOnload: 0,
        $: function(b) {
            return "#" == b.charAt(0) ? document.getElementById(b.substr(1)) : document.getElementsByTagName(b)
        },
        $new: function(b) {
            return document.createElement(b)
        },
        copy: function(b) {
            if (!b || "object" != typeof b ||
                b instanceof HTMLElement || b instanceof ig.Class) return b;
            if (b instanceof Array)
                for (var c = [], d = 0, e = b.length; d < e; d++) c[d] = ig.copy(b[d]);
            else
                for (d in c = {}, b) c[d] = ig.copy(b[d]);
            return c
        },
        merge: function(b, c) {
            for (var d in c) {
                var e = c[d];
                if ("object" != typeof e || e instanceof HTMLElement || e instanceof ig.Class || null === e) b[d] = e;
                else {
                    if (!b[d] || "object" != typeof b[d]) b[d] = e instanceof Array ? [] : {};
                    ig.merge(b[d], e)
                }
            }
            return b
        },
        ksort: function(b) {
            if (!b || "object" != typeof b) return [];
            var c = [],
                d = [],
                e;
            for (e in b) c.push(e);
            c.sort();
            for (e = 0; e < c.length; e++) d.push(b[c[e]]);
            return d
        },
        setVendorAttribute: function(b, c, d) {
            var e = c.charAt(0).toUpperCase() + c.substr(1);
            b[c] = "undefined" !== typeof b.imageSmoothingEnabled ? b["ms" + e] = b["moz" + e] = b["o" + e] = d : b["ms" + e] = b["moz" + e] = b["webkit" + e] = b["o" + e] = d
        },
        getVendorAttribute: function(b, c) {
            var d = c.charAt(0).toUpperCase() + c.substr(1);
            return "undefined" !== typeof b.imageSmoothingEnabled ? b[c] || b["ms" + d] || b["moz" + d] || b["o" + d] : b[c] || b["ms" + d] || b["moz" + d] || b["webkit" + d] || b["o" + d]
        },
        normalizeVendorAttribute: function(b,
            c) {
            var d = ig.getVendorAttribute(b, c);
            !b[c] && d && (b[c] = d)
        },
        getImagePixels: function(b, c, d, e, g) {
            var l = ig.$new("canvas");
            l.width = b.width;
            l.height = b.height;
            var r = l.getContext("2d");
            ig.System.SCALE.CRISP(l, r);
            var F = ig.getVendorAttribute(r, "backingStorePixelRatio") || 1;
            ig.normalizeVendorAttribute(r, "getImageDataHD");
            var N = b.width / F,
                G = b.height / F;
            l.width = Math.ceil(N);
            l.height = Math.ceil(G);
            r.drawImage(b, 0, 0, N, G);
            return 1 === F ? r.getImageData(c, d, e, g) : r.getImageDataHD(c, d, e, g)
        },
        module: function(b) {
            if (ig._current) throw "Module '" +
                ig._current.name + "' defines nothing";
            if (ig.modules[b] && ig.modules[b].body) throw "Module '" + b + "' is already defined";
            ig._current = {
                name: b,
                requires: [],
                loaded: !1,
                body: null
            };
            ig.modules[b] = ig._current;
            ig._loadQueue.push(ig._current);
            return ig
        },
        requires: function() {
            ig._current.requires = Array.prototype.slice.call(arguments);
            return ig
        },
        defines: function(b) {
            ig._current.body = b;
            ig._current = null;
            ig._initDOMReady()
        },
        addResource: function(b) {
            ig.resources.push(b)
        },
        setNocache: function(b) {
            ig.nocache = b ? "?" + Date.now() : ""
        },
        log: function() {},
        assert: function() {},
        show: function() {},
        mark: function() {},
        _loadScript: function(b, c) {
            ig.modules[b] = {
                name: b,
                requires: [],
                loaded: !1,
                body: null
            };
            ig._waitForOnload++;
            var d = ig.prefix + ig.lib + b.replace(/\./g, "/") + ".js" + ig.nocache,
                e = ig.$new("script");
            e.type = "text/javascript";
            e.src = d;
            e.onload = function() {
                ig._waitForOnload--;
                ig._execModules()
            };
            e.onerror = function() {
                throw "Failed to load module " + b + " at " + d + " required from " + c;
            };
            ig.$("head")[0].appendChild(e)
        },
        _execModules: function() {
            for (var b = !1, c =
                0; c < ig._loadQueue.length; c++) {
                for (var d = ig._loadQueue[c], e = !0, g = 0; g < d.requires.length; g++) {
                    var l = d.requires[g];
                    ig.modules[l] ? ig.modules[l].loaded || (e = !1) : (e = !1, ig._loadScript(l, d.name))
                }
                e && d.body && (ig._loadQueue.splice(c, 1), d.loaded = !0, d.body(), b = !0, c--)
            }
            if (b) ig._execModules();
            else if (!ig.baked && 0 == ig._waitForOnload && 0 != ig._loadQueue.length) {
                b = [];
                for (c = 0; c < ig._loadQueue.length; c++) {
                    e = [];
                    l = ig._loadQueue[c].requires;
                    for (g = 0; g < l.length; g++) d = ig.modules[l[g]], (!d || !d.loaded) && e.push(l[g]);
                    b.push(ig._loadQueue[c].name +
                        " (requires: " + e.join(", ") + ")")
                }
                throw "Unresolved (or circular?) dependencies. Most likely there's a name/path mismatch for one of the listed modules or a previous syntax error prevents a module from loading:\n" + b.join("\n");
            }
        },
        _DOMReady: function() {
            if (!ig.modules["dom.ready"].loaded) {
                if (!document.body) return setTimeout(ig._DOMReady, 13);
                ig.modules["dom.ready"].loaded = !0;
                ig._waitForOnload--;
                ig._execModules()
            }
            return 0
        },
        _boot: function() {
            document.location.href.match(/\?nocache/) && ig.setNocache(!0);
            ig.ua.pixelRatio =
                b.devicePixelRatio || 1;
            ig.ua.viewport = {
                width: b.innerWidth,
                height: b.innerHeight
            };
            ig.ua.screen = {
                width: b.screen.availWidth * ig.ua.pixelRatio,
                height: b.screen.availHeight * ig.ua.pixelRatio
            };
            ig.ua.iPhone = /iPhone/i.test(navigator.userAgent);
            ig.ua.iPhone4 = ig.ua.iPhone && 2 == ig.ua.pixelRatio;
            ig.ua.iPad = /iPad/i.test(navigator.userAgent);
            ig.ua.android = /android/i.test(navigator.userAgent);
            ig.ua.winPhone = /Windows Phone/i.test(navigator.userAgent);
            ig.ua.is_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);
            ig.ua.is_safari_or_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);
            ig.ua.iOS = ig.ua.iPhone || ig.ua.iPad;
            ig.ua.iOS6_tag = /OS 6_/i.test(navigator.userAgent);
            ig.ua.iOS6 = (ig.ua.iPhone || ig.ua.iPad) && ig.ua.iOS6_tag;
            ig.ua.iOSgt5 = ig.ua.iOS && 5 < parseInt(navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)[1]);
            ig.ua.HTCONE = /HTC_One/i.test(navigator.userAgent);
            ig.ua.winPhone = /Windows Phone/i.test(navigator.userAgent);
            ig.ua.Kindle = /Silk/i.test(navigator.userAgent);
            ig.ua.touchDevice = "ontouchstart" in
                b || b.navigator.msMaxTouchPoints;
            ig.ua.mobile = ig.ua.iOS || ig.ua.android || ig.ua.iOS6 || ig.ua.winPhone || ig.ua.Kindle || /mobile/i.test(navigator.userAgent)
        },
        _initDOMReady: function() {
            ig.modules["dom.ready"] ? ig._execModules() : (ig._boot(), ig.modules["dom.ready"] = {
                requires: [],
                loaded: !1,
                body: null
            }, ig._waitForOnload++, "complete" === document.readyState ? ig._DOMReady() : (document.addEventListener("DOMContentLoaded", ig._DOMReady, !1), b.addEventListener("load", ig._DOMReady, !1)))
        }
    };
    ig.normalizeVendorAttribute(b, "requestAnimationFrame");
    if (b.requestAnimationFrame) {
        var c = 1,
            d = {};
        b.ig.setAnimation = function(e, g) {
            var l = c++;
            d[l] = !0;
            var r = function() {
                d[l] && (b.requestAnimationFrame(r, g), e())
            };
            b.requestAnimationFrame(r, g);
            return l
        };
        b.ig.clearAnimation = function(b) {
            delete d[b]
        }
    } else b.ig.setAnimation = function(c) {
        return b.setInterval(c, 1E3 / 60)
    }, b.ig.clearAnimation = function(c) {
        b.clearInterval(c)
    };
    var e = !1,
        g = /xyz/.test(function() {
            xyz
        }) ? /\bparent\b/ : /.*/,
        l = 0;
    b.ig.Class = function() {};
    var r = function(b) {
        var c = this.prototype,
            d = {},
            e;
        for (e in b) "function" ==
            typeof b[e] && "function" == typeof c[e] && g.test(b[e]) ? (d[e] = c[e], c[e] = function(b, c) {
                return function() {
                    var e = this.parent;
                    this.parent = d[b];
                    var g = c.apply(this, arguments);
                    this.parent = e;
                    return g
                }
            }(e, b[e])) : c[e] = b[e]
    };
    b.ig.Class.extend = function(c) {
        function d() {
            if (!e) {
                if (this.staticInstantiate) {
                    var b = this.staticInstantiate.apply(this, arguments);
                    if (b) return b
                }
                for (var c in this) "object" == typeof this[c] && (this[c] = ig.copy(this[c]));
                this.init && this.init.apply(this, arguments)
            }
            return this
        }
        var s = this.prototype;
        e = !0;
        var y = new this;
        e = !1;
        for (var m in c) y[m] = "function" == typeof c[m] && "function" == typeof s[m] && g.test(c[m]) ? function(b, c) {
            return function() {
                var d = this.parent;
                this.parent = s[b];
                var e = c.apply(this, arguments);
                this.parent = d;
                return e
            }
        }(m, c[m]) : c[m];
        d.prototype = y;
        d.prototype.constructor = d;
        d.extend = b.ig.Class.extend;
        d.inject = r;
        d.classId = y.classId = ++l;
        return d
    };
    b.ImpactMixin && ig.merge(ig, b.ImpactMixin)
})(window);
ig.baked = !0;
ig.module("impact.image").defines(function() {
    ig.Image = ig.Class.extend({
        data: null,
        width: 0,
        height: 0,
        loaded: !1,
        failed: !1,
        loadCallback: null,
        path: "",
        staticInstantiate: function(b) {
            return ig.Image.cache[b] || null
        },
        init: function(b) {
            this.path = b;
            this.load()
        },
        load: function(b) {
            this.loaded ? b && b(this.path, !0) : (!this.loaded && ig.ready ? (this.loadCallback = b || null, this.data = new Image, this.data.onload = this.onload.bind(this), this.data.onerror = this.onerror.bind(this), this.data.src = ig.prefix + this.path + ig.nocache) : ig.addResource(this),
                ig.Image.cache[this.path] = this)
        },
        reload: function() {
            this.loaded = !1;
            this.data = new Image;
            this.data.onload = this.onload.bind(this);
            this.data.src = this.path + "?" + Date.now()
        },
        onload: function() {
            this.width = this.data.width;
            this.height = this.data.height;
            this.loaded = !0;
            1 != ig.system.scale && this.resize(ig.system.scale);
            this.loadCallback && this.loadCallback(this.path, !0)
        },
        onerror: function() {
            this.failed = !0;
            this.loadCallback && this.loadCallback(this.path, !1)
        },
        resize: function(b) {
            var c = ig.getImagePixels(this.data, 0, 0, this.width,
                    this.height),
                d = this.width * b,
                e = this.height * b,
                g = ig.$new("canvas");
            g.width = d;
            g.height = e;
            for (var l = g.getContext("2d"), r = l.getImageData(0, 0, d, e), p = 0; p < e; p++)
                for (var t = 0; t < d; t++) {
                    var s = 4 * (Math.floor(p / b) * this.width + Math.floor(t / b)),
                        y = 4 * (p * d + t);
                    r.data[y] = c.data[s];
                    r.data[y + 1] = c.data[s + 1];
                    r.data[y + 2] = c.data[s + 2];
                    r.data[y + 3] = c.data[s + 3]
                }
            l.putImageData(r, 0, 0);
            this.data = g
        },
        draw: function(b, c, d, e, g, l) {
            if (this.loaded) {
                var r = ig.system.scale;
                g = (g ? g : this.width) * r;
                l = (l ? l : this.height) * r;
                ig.system.context.drawImage(this.data,
                    d ? d * r : 0, e ? e * r : 0, g, l, ig.system.getDrawPos(b), ig.system.getDrawPos(c), g, l);
                ig.Image.drawCount++
            }
        },
        drawTile: function(b, c, d, e, g, l, r) {
            g = g ? g : e;
            if (this.loaded && !(e > this.width || g > this.height)) {
                var p = ig.system.scale,
                    t = Math.floor(e * p),
                    s = Math.floor(g * p),
                    y = l ? -1 : 1,
                    m = r ? -1 : 1;
                if (l || r) ig.system.context.save(), ig.system.context.scale(y, m);
                ig.system.context.drawImage(this.data, Math.floor(d * e) % this.width * p, Math.floor(d * e / this.width) * g * p, t, s, ig.system.getDrawPos(b) * y - (l ? t : 0), ig.system.getDrawPos(c) * m - (r ? s : 0), t, s);
                (l ||
                    r) && ig.system.context.restore();
                ig.Image.drawCount++
            }
        }
    });
    ig.Image.drawCount = 0;
    ig.Image.cache = {};
    ig.Image.reloadCache = function() {
        for (var b in ig.Image.cache) ig.Image.cache[b].reload()
    }
});
ig.baked = !0;
ig.module("impact.font").requires("impact.image").defines(function() {
    ig.Font = ig.Image.extend({
        widthMap: [],
        indices: [],
        firstChar: 32,
        alpha: 1,
        letterSpacing: 1,
        lineSpacing: 0,
        onload: function(b) {
            this._loadMetrics(this.data);
            this.parent(b)
        },
        widthForString: function(b) {
            if (-1 !== b.indexOf("\n")) {
                b = b.split("\n");
                for (var c = 0, d = 0; d < b.length; d++) c = Math.max(c, this._widthForLine(b[d]));
                return c
            }
            return this._widthForLine(b)
        },
        _widthForLine: function(b) {
            for (var c = 0, d = 0; d < b.length; d++) c += this.widthMap[b.charCodeAt(d) - this.firstChar] +
                this.letterSpacing;
            return c
        },
        heightForString: function(b) {
            return b.split("\n").length * (this.height + this.lineSpacing)
        },
        draw: function(b, c, d, e) {
            "string" != typeof b && (b = b.toString());
            if (-1 !== b.indexOf("\n")) {
                b = b.split("\n");
                for (var g = this.height + this.lineSpacing, l = 0; l < b.length; l++) this.draw(b[l], c, d + l * g, e)
            } else {
                if (e == ig.Font.ALIGN.RIGHT || e == ig.Font.ALIGN.CENTER) l = this._widthForLine(b), c -= e == ig.Font.ALIGN.CENTER ? l / 2 : l;
                1 !== this.alpha && (ig.system.context.globalAlpha = this.alpha);
                for (l = 0; l < b.length; l++) e = b.charCodeAt(l),
                    c += this._drawChar(e - this.firstChar, c, d);
                1 !== this.alpha && (ig.system.context.globalAlpha = 1);
                ig.Image.drawCount += b.length
            }
        },
        _drawChar: function(b, c, d) {
            if (!this.loaded || 0 > b || b >= this.indices.length) return 0;
            var e = ig.system.scale,
                g = this.widthMap[b] * e,
                l = (this.height - 2) * e;
            ig.system.context.drawImage(this.data, this.indices[b] * e, 0, g, l, ig.system.getDrawPos(c), ig.system.getDrawPos(d), g, l);
            return this.widthMap[b] + this.letterSpacing
        },
        _loadMetrics: function(b) {
            this.height = b.height - 1;
            this.widthMap = [];
            this.indices = [];
            for (var c = ig.getImagePixels(b, 0, b.height - 1, b.width, 1), d = 0, e = 0, g = 0; g < b.width; g++) {
                var l = 4 * g + 3;
                127 < c.data[l] ? e++ : 128 > c.data[l] && e && (this.widthMap.push(e), this.indices.push(g - e), d++, e = 0)
            }
            this.widthMap.push(e);
            this.indices.push(g - e)
        }
    });
    ig.Font.ALIGN = {
        LEFT: 0,
        RIGHT: 1,
        CENTER: 2
    }
});
ig.baked = !0;
ig.module("impact.sound").defines(function() {
    ig.SoundManager = ig.Class.extend({
        clips: {},
        volume: 1,
        format: null,
        init: function() {
            if (!ig.Sound.enabled || !window.Audio) ig.Sound.enabled = !1;
            else {
                for (var b = new Audio, c = 0; c < ig.Sound.use.length; c++) {
                    var d = ig.Sound.use[c];
                    if (b.canPlayType(d.mime)) {
                        this.format = d;
                        break
                    }
                }
                this.format || (ig.Sound.enabled = !1)
            }
        },
        load: function(b, c, d) {
            var e = ig.prefix + b.replace(/[^\.]+$/, this.format.ext) + ig.nocache;
            if (this.clips[b]) {
                if (c && this.clips[b].length < ig.Sound.channels)
                    for (c = this.clips[b].length; c <
                        ig.Sound.channels; c++) {
                        var g = new Audio(e);
                        g.load();
                        this.clips[b].push(g)
                    }
                return this.clips[b][0]
            }
            var l = new Audio(e);
            d && (l.addEventListener("canplaythrough", function p(c) {
                l.removeEventListener("canplaythrough", p, !1);
                d(b, !0, c)
            }, !1), l.addEventListener("error", function(c) {
                d(b, !1, c)
            }, !1));
            l.preload = "auto";
            l.load();
            this.clips[b] = [l];
            if (c)
                for (c = 1; c < ig.Sound.channels; c++) g = new Audio(e), g.load(), this.clips[b].push(g);
            return l
        },
        get: function(b) {
            b = this.clips[b];
            for (var c = 0, d; d = b[c++];)
                if (d.paused || d.ended) return d.ended &&
                    (d.currentTime = 0), d;
            b[0].pause();
            b[0].currentTime = 0;
            return b[0]
        }
    });
    ig.Music = ig.Class.extend({
        tracks: [],
        namedTracks: {},
        currentTrack: null,
        currentIndex: 0,
        random: !1,
        _volume: 1,
        _loop: !1,
        _fadeInterval: 0,
        _fadeTimer: null,
        _endedCallbackBound: null,
        init: function() {
            this._endedCallbackBound = this._endedCallback.bind(this);
            Object.defineProperty ? (Object.defineProperty(this, "volume", {
                    get: this.getVolume.bind(this),
                    set: this.setVolume.bind(this)
                }), Object.defineProperty(this, "loop", {
                    get: this.getLooping.bind(this),
                    set: this.setLooping.bind(this)
                })) :
                this.__defineGetter__ && (this.__defineGetter__("volume", this.getVolume.bind(this)), this.__defineSetter__("volume", this.setVolume.bind(this)), this.__defineGetter__("loop", this.getLooping.bind(this)), this.__defineSetter__("loop", this.setLooping.bind(this)))
        },
        add: function(b, c) {
            if (ig.Sound.enabled) {
                var d = ig.soundManager.load(b instanceof ig.Sound ? b.path : b, !1);
                d.loop = this._loop;
                d.volume = this._volume;
                d.addEventListener("ended", this._endedCallbackBound, !1);
                this.tracks.push(d);
                c && (this.namedTracks[c] = d);
                this.currentTrack ||
                    (this.currentTrack = d)
            }
        },
        next: function() {
            this.tracks.length && (this.stop(), this.currentIndex = this.random ? Math.floor(Math.random() * this.tracks.length) : (this.currentIndex + 1) % this.tracks.length, this.currentTrack = this.tracks[this.currentIndex], this.play())
        },
        pause: function() {
            this.currentTrack && this.currentTrack.pause()
        },
        stop: function() {
            this.currentTrack && (this.currentTrack.pause(), this.currentTrack.currentTime = 0)
        },
        play: function(b) {
            if (b && this.namedTracks[b]) b = this.namedTracks[b], b != this.currentTrack && (this.stop(),
                this.currentTrack = b);
            else if (!this.currentTrack) return;
            this.currentTrack.play()
        },
        getLooping: function() {
            return this._loop
        },
        setLooping: function(b) {
            this._loop = b;
            for (var c in this.tracks) this.tracks[c].loop = b
        },
        getVolume: function() {
            return this._volume
        },
        setVolume: function(b) {
            this._volume = b.limit(0, 1);
            for (var c in this.tracks) this.tracks[c].volume = this._volume
        },
        fadeOut: function(b) {
            this.currentTrack && (clearInterval(this._fadeInterval), this.fadeTimer = new ig.Timer(b), this._fadeInterval = setInterval(this._fadeStep.bind(this),
                50))
        },
        _fadeStep: function() {
            var b = this.fadeTimer.delta().map(-this.fadeTimer.target, 0, 1, 0).limit(0, 1) * this._volume;
            0.01 >= b ? (this.stop(), this.currentTrack.volume = this._volume, clearInterval(this._fadeInterval)) : this.currentTrack.volume = b
        },
        _endedCallback: function() {
            this._loop ? this.play() : this.next()
        }
    });
    ig.Sound = ig.Class.extend({
        path: "",
        volume: 1,
        currentClip: null,
        multiChannel: !0,
        init: function(b, c) {
            this.path = b;
            this.multiChannel = !1 !== c;
            this.load()
        },
        load: function(b) {
            ig.Sound.enabled ? ig.ready ? ig.soundManager.load(this.path,
                this.multiChannel, b) : ig.addResource(this) : b && b(this.path, !0)
        },
        play: function() {
            ig.Sound.enabled && (this.currentClip = ig.soundManager.get(this.path), this.currentClip.volume = ig.soundManager.volume * this.volume, this.currentClip.play())
        },
        stop: function() {
            this.currentClip && (this.currentClip.pause(), this.currentClip.currentTime = 0)
        }
    });
    ig.Sound.FORMAT = {
        MP3: {
            ext: "mp3",
            mime: "audio/mpeg"
        },
        M4A: {
            ext: "m4a",
            mime: "audio/mp4; codecs=mp4a"
        },
        OGG: {
            ext: "ogg",
            mime: "audio/ogg; codecs=vorbis"
        },
        WEBM: {
            ext: "webm",
            mime: "audio/webm; codecs=vorbis"
        },
        CAF: {
            ext: "caf",
            mime: "audio/x-caf"
        }
    };
    ig.Sound.use = [ig.Sound.FORMAT.OGG, ig.Sound.FORMAT.MP3];
    ig.Sound.channels = 4;
    ig.Sound.enabled = !0
});
ig.baked = !0;
ig.module("impact.loader").requires("impact.image", "impact.font", "impact.sound").defines(function() {
    ig.Loader = ig.Class.extend({
        resources: [],
        gameClass: null,
        status: 0,
        done: !1,
        _unloaded: [],
        _drawStatus: 0,
        _intervalId: 0,
        _loadCallbackBound: null,
        init: function(b, c) {
            this.gameClass = b;
            this.resources = c;
            this._loadCallbackBound = this._loadCallback.bind(this);
            for (var d = 0; d < this.resources.length; d++) this._unloaded.push(this.resources[d].path)
        },
        load: function() {
            ig.system.clear("#000");
            if (this.resources.length) {
                for (var b =
                    0; b < this.resources.length; b++) this.loadResource(this.resources[b]);
                this._intervalId = setInterval(this.draw.bind(this), 16)
            } else this.end()
        },
        loadResource: function(b) {
            b.load(this._loadCallbackBound)
        },
        end: function() {
            this.done || (this.done = !0, clearInterval(this._intervalId))
        },
        draw: function() {},
        _loadCallback: function(b, c) {
            if (c) this._unloaded.erase(b);
            else throw "Failed to load resource: " + b;
            this.status = 1 - this._unloaded.length / this.resources.length;
            0 == this._unloaded.length && setTimeout(this.end.bind(this), 250)
        }
    })
});
ig.baked = !0;
ig.module("impact.timer").defines(function() {
    ig.Timer = ig.Class.extend({
        target: 0,
        base: 0,
        last: 0,
        pausedAt: 0,
        init: function(b) {
            this.last = this.base = ig.Timer.time;
            this.target = b || 0
        },
        set: function(b) {
            this.target = b || 0;
            this.base = ig.Timer.time;
            this.pausedAt = 0
        },
        reset: function() {
            this.base = ig.Timer.time;
            this.pausedAt = 0
        },
        tick: function() {
            var b = ig.Timer.time - this.last;
            this.last = ig.Timer.time;
            return this.pausedAt ? 0 : b
        },
        delta: function() {
            return (this.pausedAt || ig.Timer.time) - this.base - this.target
        },
        pause: function() {
            this.pausedAt || (this.pausedAt =
                ig.Timer.time)
        },
        unpause: function() {
            this.pausedAt && (this.base += ig.Timer.time - this.pausedAt, this.pausedAt = 0)
        }
    });
    ig.Timer._last = 0;
    ig.Timer.time = Number.MIN_VALUE;
    ig.Timer.timeScale = 1;
    ig.Timer.maxStep = 0.05;
    ig.Timer.step = function() {
        var b = Date.now();
        ig.Timer.time += Math.min((b - ig.Timer._last) / 1E3, ig.Timer.maxStep) * ig.Timer.timeScale;
        ig.Timer._last = b
    }
});
ig.baked = !0;
ig.module("impact.system").requires("impact.timer", "impact.image").defines(function() {
    ig.System = ig.Class.extend({
        fps: 30,
        width: 320,
        height: 240,
        realWidth: 320,
        realHeight: 240,
        scale: 1,
        tick: 0,
        animationId: 0,
        newGameClass: null,
        running: !1,
        delegate: null,
        clock: null,
        canvas: null,
        context: null,
        init: function(b, c, d, e, g) {
            this.fps = c;
            this.clock = new ig.Timer;
            this.canvas = ig.$(b);
            this.bgcanvas = ig.$("#bgcanvas");
            this.offcanvas = ig.$("#offscreencanvas");
            this.resize(d, e, g);
            this.context = this.canvas.getContext("2d");
            this.bgcanvas &&
                (this.bgcontext = this.bgcanvas.getContext("2d"));
            this.offcanvas && (this.offcontext = this.offcanvas.getContext("2d"));
            this.resize(d, e, g);
            this.context = this.canvas.getContext("2d");
            this.getDrawPos = ig.System.drawMode;
            1 != this.scale && (ig.System.scaleMode = ig.System.SCALE.CRISP);
            ig.System.scaleMode(this.canvas, this.context)
        },
        resize: function(b, c, d) {
            this.width = b;
            this.height = c;
            this.scale = d || this.scale;
            this.realWidth = this.width * this.scale;
            this.realHeight = this.height * this.scale;
            this.canvas.width = this.realWidth;
            this.canvas.height =
                this.realHeight;
            this.bgcanvas && (this.bgcanvas.width = this.realWidth, this.bgcanvas.height = this.realHeight);
            this.offcanvas && (this.offcanvas.width = this.realWidth, this.offcanvas.height = this.realHeight)
        },
        setGame: function(b) {
            this.running ? this.newGameClass = b : this.setGameNow(b)
        },
        setGameNow: function(b) {
            ig.game = new b;
            ig.system.setDelegate(ig.game)
        },
        setDelegate: function(b) {
            if ("function" == typeof b.run) this.delegate = b, this.startRunLoop();
            else throw "System.setDelegate: No run() function in object";
        },
        stopRunLoop: function() {
            ig.clearAnimation(this.animationId);
            this.running = !1
        },
        startRunLoop: function() {
            this.stopRunLoop();
            this.animationId = ig.setAnimation(this.run.bind(this), this.canvas);
            this.running = !0
        },
        clear: function(b) {
            this.context.fillStyle = b;
            this.context.fillRect(0, 0, this.realWidth, this.realHeight)
        },
        run: function() {
            ig.Timer.step();
            this.tick = this.clock.tick();
            this.delegate.run();
            ig.input.clearPressed();
            this.newGameClass && (this.setGameNow(this.newGameClass), this.newGameClass = null)
        },
        getDrawPos: null
    });
    ig.System.DRAW = {
        AUTHENTIC: function(b) {
            return Math.round(b) *
                this.scale
        },
        SMOOTH: function(b) {
            return Math.round(b * this.scale)
        },
        SUBPIXEL: function(b) {
            return b * this.scale
        }
    };
    ig.System.drawMode = ig.System.DRAW.SMOOTH;
    ig.System.SCALE = {
        CRISP: function(b, c) {
            ig.setVendorAttribute(c, "imageSmoothingEnabled", !1);
            b.style.imageRendering = "-moz-crisp-edges";
            b.style.imageRendering = "-o-crisp-edges";
            b.style.imageRendering = "-webkit-optimize-contrast";
            b.style.imageRendering = "crisp-edges";
            b.style.msInterpolationMode = "nearest-neighbor"
        },
        SMOOTH: function(b, c) {
            ig.setVendorAttribute(c, "imageSmoothingEnabled", !0);
            b.style.imageRendering = "";
            b.style.msInterpolationMode = ""
        }
    };
    ig.System.scaleMode = ig.System.SCALE.SMOOTH
});
ig.baked = !0;
ig.module("impact.input").defines(function() {
    ig.KEY = {
        MOUSE1: -1,
        MOUSE2: -3,
        MWHEEL_UP: -4,
        MWHEEL_DOWN: -5,
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        PAUSE: 19,
        CAPS: 20,
        ESC: 27,
        SPACE: 32,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        END: 35,
        HOME: 36,
        LEFT_ARROW: 37,
        UP_ARROW: 38,
        RIGHT_ARROW: 39,
        DOWN_ARROW: 40,
        INSERT: 45,
        DELETE: 46,
        _0: 48,
        _1: 49,
        _2: 50,
        _3: 51,
        _4: 52,
        _5: 53,
        _6: 54,
        _7: 55,
        _8: 56,
        _9: 57,
        A: 65,
        B: 66,
        C: 67,
        D: 68,
        E: 69,
        F: 70,
        G: 71,
        H: 72,
        I: 73,
        J: 74,
        K: 75,
        L: 76,
        M: 77,
        N: 78,
        O: 79,
        P: 80,
        Q: 81,
        R: 82,
        S: 83,
        T: 84,
        U: 85,
        V: 86,
        W: 87,
        X: 88,
        Y: 89,
        Z: 90,
        NUMPAD_0: 96,
        NUMPAD_1: 97,
        NUMPAD_2: 98,
        NUMPAD_3: 99,
        NUMPAD_4: 100,
        NUMPAD_5: 101,
        NUMPAD_6: 102,
        NUMPAD_7: 103,
        NUMPAD_8: 104,
        NUMPAD_9: 105,
        MULTIPLY: 106,
        ADD: 107,
        SUBSTRACT: 109,
        DECIMAL: 110,
        DIVIDE: 111,
        F1: 112,
        F2: 113,
        F3: 114,
        F4: 115,
        F5: 116,
        F6: 117,
        F7: 118,
        F8: 119,
        F9: 120,
        F10: 121,
        F11: 122,
        F12: 123,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        PLUS: 187,
        COMMA: 188,
        MINUS: 189,
        PERIOD: 190
    };
    ig.Input = ig.Class.extend({
        bindings: {},
        actions: {},
        presses: {},
        locks: {},
        delayedKeyup: {},
        isUsingMouse: !1,
        isUsingKeyboard: !1,
        isUsingAccelerometer: !1,
        mouse: {
            x: 0,
            y: 0
        },
        accel: {
            x: 0,
            y: 0,
            z: 0
        },
        initMouse: function() {
            if (!this.isUsingMouse) {
                this.isUsingMouse = !0;
                var b = this.mousewheel.bind(this);
                ig.system.canvas.addEventListener("mousewheel", b, !1);
                ig.system.canvas.addEventListener("DOMMouseScroll", b, !1);
                ig.system.canvas.addEventListener("contextmenu", this.contextmenu.bind(this), !1);
                ig.system.canvas.addEventListener("mousedown", this.keydown.bind(this), !1);
                ig.system.canvas.addEventListener("mouseup", this.keyup.bind(this), !1);
                ig.system.canvas.addEventListener("mousemove", this.mousemove.bind(this), !1);
                ig.ua.touchDevice && (ig.system.canvas.addEventListener("touchstart",
                    this.keydown.bind(this), !1), ig.system.canvas.addEventListener("touchend", this.keyup.bind(this), !1), ig.system.canvas.addEventListener("touchmove", this.mousemove.bind(this), !1), ig.system.canvas.addEventListener("MSPointerDown", this.keydown.bind(this), !1), ig.system.canvas.addEventListener("MSPointerUp", this.keyup.bind(this), !1), ig.system.canvas.addEventListener("MSPointerMove", this.mousemove.bind(this), !1), ig.system.canvas.style.msTouchAction = "none")
            }
        },
        initKeyboard: function() {
            this.isUsingKeyboard || (this.isUsingKeyboard = !0, window.addEventListener("keydown", this.keydown.bind(this), !1), window.addEventListener("keyup", this.keyup.bind(this), !1))
        },
        initAccelerometer: function() {
            this.isUsingAccelerometer || window.addEventListener("devicemotion", this.devicemotion.bind(this), !1)
        },
        mousewheel: function(b) {
            var c = this.bindings[0 < (b.wheelDelta ? b.wheelDelta : -1 * b.detail) ? ig.KEY.MWHEEL_UP : ig.KEY.MWHEEL_DOWN];
            c && (this.actions[c] = !0, this.presses[c] = !0, this.delayedKeyup[c] = !0, b.stopPropagation(), b.preventDefault())
        },
        mousemove: function(b) {
            var c =
                parseInt(ig.system.canvas.offsetWidth) || ig.system.realWidth;
            ig.ua.mobile && (c = ig.system.realWidth);
            var c = ig.system.scale * (c / ig.system.realWidth),
                d = {
                    left: 0,
                    top: 0
                };
            ig.system.canvas.getBoundingClientRect && (d = ig.system.canvas.getBoundingClientRect());
            b = b.touches ? b.touches[0] : b;
            this.mouse.x = (b.clientX - d.left) / c;
            this.mouse.y = (b.clientY - d.top) / c
        },
        contextmenu: function(b) {
            this.bindings[ig.KEY.MOUSE2] && (b.stopPropagation(), b.preventDefault())
        },
        keydown: function(b) {
            var c = b.target.tagName;
            if (!("INPUT" == c || "TEXTAREA" ==
                c))
                if (c = "keydown" == b.type ? b.keyCode : 2 == b.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1, 0 > c && window.focus(), ("touchstart" == b.type || "mousedown" == b.type) && this.mousemove(b), c = this.bindings[c]) this.actions[c] = !0, this.locks[c] || (this.presses[c] = !0, this.locks[c] = !0), b.stopPropagation(), b.preventDefault()
        },
        keyup: function(b) {
            var c = b.target.tagName;
            if (!("INPUT" == c || "TEXTAREA" == c))
                if (c = this.bindings["keyup" == b.type ? b.keyCode : 2 == b.button ? ig.KEY.MOUSE2 : ig.KEY.MOUSE1]) this.delayedKeyup[c] = !0, b.stopPropagation(), b.preventDefault()
        },
        devicemotion: function(b) {
            this.accel = b.accelerationIncludingGravity
        },
        bind: function(b, c) {
            0 > b ? this.initMouse() : 0 < b && this.initKeyboard();
            this.bindings[b] = c
        },
        bindTouch: function(b, c) {
            var d = ig.$(b),
                e = this;
            d.addEventListener("touchstart", function(b) {
                e.touchStart(b, c)
            }, !1);
            d.addEventListener("touchend", function(b) {
                e.touchEnd(b, c)
            }, !1);
            d.addEventListener("MSPointerDown", function(b) {
                e.touchStart(b, c)
            }, !1);
            d.addEventListener("MSPointerUp", function(b) {
                e.touchEnd(b, c)
            }, !1)
        },
        unbind: function(b) {
            this.delayedKeyup[this.bindings[b]] = !0;
            this.bindings[b] = null
        },
        unbindAll: function() {
            this.bindings = {};
            this.actions = {};
            this.presses = {};
            this.locks = {};
            this.delayedKeyup = {}
        },
        state: function(b) {
            return this.actions[b]
        },
        pressed: function(b) {
            return this.presses[b]
        },
        released: function(b) {
            return !!this.delayedKeyup[b]
        },
        clearPressed: function() {
            for (var b in this.delayedKeyup) this.actions[b] = !1, this.locks[b] = !1;
            this.delayedKeyup = {};
            this.presses = {}
        },
        touchStart: function(b, c) {
            this.actions[c] = !0;
            this.presses[c] = !0;
            b.stopPropagation();
            b.preventDefault();
            return !1
        },
        touchEnd: function(b, c) {
            this.delayedKeyup[c] = !0;
            b.stopPropagation();
            b.preventDefault();
            return !1
        }
    })
});
ig.baked = !0;
ig.module("plugins.jukebox").defines(function() {
    ig.Jukebox = ig.Class.extend({
        init: function() {
            this.player = new jukebox.Player({
                resources: ["media/audio/bgm.mp3", "media/audio/bgm.ogg"],
                autoplay: !1,
                spritemap: {
                    music: {
                        start: 0,
                        end: 22.916,
                        loop: !0
                    }
                },
                timeout: 1E3
            })
        }
    })
});
ig.baked = !0;
ig.module("impact.sound-handler").requires("plugins.jukebox").defines(function() {
    ig.SoundHandler = ig.Class.extend({
        formats: {
            ogg: ".ogg",
            mp3: ".mp3"
        },
        jukebox: null,
        pausePosition: null,
        globalMute: !1,
        forceMuted: !1,
        muted: !1,
        bgmStarted: !1,
        bgmPlaying: !1,
        soundPlaying: !1,
        currentSoundPlaying: null,
        soundBuffer: [],
        voSoundLoaded: [],
        sfxSoundLoaded: [],
        SOUNDID: {},
        voSoundsToLoad: [],
        sfxSoundsToLoad: [{
            name: "staticSound",
            path: "media/audio/play/static"
        }, {
            name: "openingSound",
            path: "media/audio/opening/opening"
        }, {
            name: "kittyopeningSound",
            path: "media/audio/opening/kittyopening"
        }, {
            name: "door",
            path: "media/audio/door"
        }, {
            name: "button",
            path: "media/audio/button"
        }, {
            name: "key",
            path: "media/audio/key"
        }, {
            name: "alert",
            path: "media/audio/alert"
        }, {
            name: "footsteps",
            path: "media/audio/footsteps"
        }],
        debug: !1,
        init: function() {
            this.soundStatus = !0;
            ig.ua.mobile ? (this.initSfx(), this.setupJukebox()) : (this.initSfx(), this.setupDesktopMusic());
            this.setupWindowHandler()
        },
        allVoSoundLoaded: function() {
            if (this.voSoundLoaded.length >= this.voSoundsToLoad.length) {
                this.debug &&
                    console.log("Vo ready");
                for (index = 0; index < this.voSoundLoaded.length; index++) this.voSoundLoaded[index].on("end", function(b) {
                    b.isPlaying = !1;
                    this.soundBuffer.pop()
                }.bind(this, this.voSoundLoaded[index])), this.voSoundLoaded[index].on("play", function(b) {
                    b.isPlaying = !0
                }.bind(this, this.voSoundLoaded[index]));
                return !0
            }
            return !1
        },
        allSfxSoundLoaded: function() {
            return this.sfxSoundLoaded.length >= this.sfxSoundsToLoad.length ? !0 : !1
        },
        stopBackgroundMusic: function() {
            ig.ua.mobile ? this.pausePosition = this.jukebox.player.pause() :
                ig.music.pause();
            this.bgmPlaying = !1
        },
        playBackgroundMusic: function() {
            this.bgmPlaying || (this.bgmStarted = !0, ig.ua.mobile ? this.pausePosition ? this.jukebox.player.resume(this.pausePosition) : this.jukebox.player.play(this.jukebox.player.settings.spritemap.music.start, !0) : ig.music.play(), this._unMuteBackgroundMusic(), this.bgmPlaying = !0)
        },
        playSound: function(b) {
            if ((b = this[b]) && (!this.forceMuted || !this.muted) && !b.isPlaying) this.soundBuffer.push(b), b.play()
        },
        stopAllAndPlaySound: function(b) {
            this.stopAllSounds();
            this.playSound(b)
        },
        stopAllSounds: function() {
            for (index = 0; index < this.soundBuffer.length; index++) this.soundBuffer[index].isPlaying = !1, this.soundBuffer.splice(0, 1)[0].stop()
        },
        addSound: function(b, c, d) {
            var e = c + this.formats.ogg;
            c += this.formats.mp3;
            this.SOUNDID[b] = b;
            this[b] = d ? new Howl({
                urls: [e, c],
                onload: d
            }) : new Howl({
                urls: [e, c]
            })
        },
        _muteSounds: function() {
            for (i = 0; i < ig.resources.length; i++) ig.resources[i].multiChannel && ig.resources[i].stop();
            Howler.mute();
            this.debug && console.log("Sounds muted")
        },
        _unMuteSounds: function() {
            Howler.unmute();
            ig.Sound.enabled = !0;
            this.debug && console.log("Sounds can play")
        },
        _muteBackgroundMusic: function() {
            ig.ua.mobile ? (this.stopBackgroundMusic(), this.jukebox.player.setVolume(0)) : ig.music.volume = 0;
            this.debug && console.log("BGM muted")
        },
        _unMuteBackgroundMusic: function() {
            this.bgmStarted && (ig.ua.mobile ? (this.pausePosition ? this.jukebox.player.resume(this.pausePosition) : this.jukebox.player.play(this.jukebox.player.settings.spritemap.music.start, !0), this.jukebox.player.setVolume(1)) : ig.music.volume = 1, this.debug &&
                console.log("BGM can play"))
        },
        focusBlurMute: function() {
            this.forceMuted || this.mute()
        },
        focusBlurUnmute: function() {
            this.forceMuted || this.soundStatus && this.unmute()
        },
        setForceMuted: function(b) {
            this.forceMuted = b
        },
        mute: function() {
            this.muted || (this._muteSounds(), this._muteBackgroundMusic(), this.muted = !0)
        },
        unmute: function() {
            this.muted && (this._unMuteSounds(), this._unMuteBackgroundMusic(), this.muted = !1)
        },
        setupWindowHandler: function() {
            "true" === getQueryVariable("webview") ? ($(window).focus(function() {
                ig.ua.mobile &&
                    ig.game && ig.game.resumeGame();
                ig.soundHandler && ig.soundHandler.focusBlurUnmute()
            }), $(window).blur(function() {
                ig.soundHandler && ig.soundHandler.focusBlurMute()
            })) : (window.onfocus = function() {
                ig.ua.mobile && ig.game && ig.game.resumeGame();
                ig.soundHandler && ig.soundHandler.focusBlurUnmute()
            }, window.onblur = function() {
                ig.soundHandler && ig.soundHandler.focusBlurMute()
            })
        },
        initSfx: function() {
            for (index = 0; index < this.sfxSoundsToLoad.length; index++) {
                var b = function(b) {
                    this.sfxSoundLoaded.push(this[b])
                }.bind(this, this.sfxSoundsToLoad[index].name);
                this.addSound(this.sfxSoundsToLoad[index].name, this.sfxSoundsToLoad[index].path, b)
            }
        },
        initVoSfx: function() {
            for (index = 0; index < this.voSoundsToLoad.length; index++) {
                var b = function(b) {
                    this.voSoundLoaded.push(this[b])
                }.bind(this, this.voSoundsToLoad[index].name);
                this.addSound(this.voSoundsToLoad[index].name, this.voSoundsToLoad[index].path, b)
            }
        },
        setupDesktopMusic: function() {
            ig.music.add("media/audio/bgm.*", "background")
        },
        setupJukebox: function() {
            ig.ua.mobile && (this.jukebox = new ig.Jukebox, this.pausePosition =
                this.jukebox.player.settings.spritemap.music.start)
        },
        forceLoopBGM: function() {
            if (!this.forceMuted && this.bgmPlaying && ig.ua.winPhone && this.jukebox && this.jukebox.player && this.jukebox.player.settings.spritemap.music && this.jukebox.player.settings.spritemap.music.loop) {
                if (0 <= this.prevTime)
                    if (this.jukebox.player.getCurrentTime() === this.prevTime) {
                        if (this.silentCounter || (this.silentCounter = 0), this.silentCounter++, this.jukebox.player.getCurrentTime() >= this.jukebox.player.settings.spritemap.music.end || this.silentCounter >
                            0.0010 * ig.soundHandler.jukebox.player.settings.timeout * ig.system.fps) this.jukebox.player.pause(), this.jukebox.player.play(this.jukebox.player.settings.spritemap.music.start, !0), this.silentCounter = null
                    } else this.silentCounter = null;
                this.prevTime = this.jukebox.player.getCurrentTime()
            }
        }
    })
});

function getHiddenProp() {
    var b = ["webkit", "moz", "ms", "o"];
    if ("hidden" in document) return "hidden";
    for (var c = 0; c < b.length; c++)
        if (b[c] + "Hidden" in document) return b[c] + "Hidden";
    return null
}

function isHidden() {
    var b = getHiddenProp();
    return !b ? !1 : document[b]
}
var visProp = getHiddenProp();
if (visProp) {
    var evtname = visProp.replace(/[H|h]idden/, "") + "visibilitychange";
    document.addEventListener(evtname, visChange)
}
window.addEventListener("pagehide", function() {
    ig.soundHandler && ig.soundHandler.focusBlurMute()
}, !1);
window.addEventListener("pageshow", function() {
    ig.ua.mobile && ig.game && ig.game.resumeGame();
    ig.soundHandler && ig.soundHandler.focusBlurUnmute()
}, !1);

function visChange() {
    isHidden() ? ig.soundHandler && ig.soundHandler.focusBlurMute() : (ig.ua.mobile && ig.game && ig.game.resumeGame(), ig.soundHandler && ig.soundHandler.focusBlurUnmute())
}
ig.baked = !0;
ig.module("impact.impact").requires("dom.ready", "impact.loader", "impact.system", "impact.input", "impact.sound", "impact.sound-handler").defines(function() {
    ig.main = function(b, c, d, e, g, l, r) {
        ig.system = new ig.System(b, d, e, g, l || 1);
        ig.input = new ig.Input;
        ig.soundManager = new ig.SoundManager;
        ig.music = new ig.Music;
        ig.ready = !0;
        ig.soundHandler = new ig.SoundHandler;
        (new(r || ig.Loader)(c, ig.resources)).load()
    }
});
ig.baked = !0;
ig.module("impact.animation").requires("impact.timer", "impact.image").defines(function() {
    ig.AnimationSheet = ig.Class.extend({
        width: 8,
        height: 8,
        image: null,
        init: function(b, c, d) {
            this.width = c;
            this.height = d;
            this.image = new ig.Image(b)
        }
    });
    ig.Animation = ig.Class.extend({
        sheet: null,
        timer: null,
        sequence: [],
        flip: {
            x: !1,
            y: !1
        },
        pivot: {
            x: 0,
            y: 0
        },
        frame: 0,
        tile: 0,
        loopCount: 0,
        alpha: 1,
        angle: 0,
        init: function(b, c, d, e) {
            this.sheet = b;
            this.pivot = {
                x: b.width / 2,
                y: b.height / 2
            };
            this.timer = new ig.Timer;
            this.frameTime = c;
            this.sequence = d;
            this.stop = !!e;
            this.tile = this.sequence[0]
        },
        rewind: function() {
            this.timer.set();
            this.frame = this.loopCount = 0;
            this.tile = this.sequence[0];
            return this
        },
        gotoFrame: function(b) {
            this.timer.set(this.frameTime * -b - 1E-4);
            this.update()
        },
        gotoRandomFrame: function() {
            this.gotoFrame(Math.floor(Math.random() * this.sequence.length))
        },
        update: function() {
            var b = Math.floor(this.timer.delta() / this.frameTime);
            this.loopCount = Math.floor(b / this.sequence.length);
            this.frame = this.stop && 0 < this.loopCount ? this.sequence.length - 1 : b % this.sequence.length;
            this.tile = this.sequence[this.frame]
        },
        draw: function(b, c) {
            var d = Math.max(this.sheet.width, this.sheet.height);
            b > ig.system.width || c > ig.system.height || (0 > b + d || 0 > c + d) || (1 != this.alpha && (ig.system.context.globalAlpha = this.alpha), 0 == this.angle ? this.sheet.image.drawTile(b, c, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y) : (ig.system.context.save(), ig.system.context.translate(ig.system.getDrawPos(b + this.pivot.x), ig.system.getDrawPos(c + this.pivot.y)), ig.system.context.rotate(this.angle),
                this.sheet.image.drawTile(-this.pivot.x, -this.pivot.y, this.tile, this.sheet.width, this.sheet.height, this.flip.x, this.flip.y), ig.system.context.restore()), 1 != this.alpha && (ig.system.context.globalAlpha = 1))
        }
    })
});
ig.baked = !0;
ig.module("impact.entity").requires("impact.animation", "impact.impact").defines(function() {
    ig.Entity = ig.Class.extend({
        id: 0,
        settings: {},
        size: {
            x: 16,
            y: 16
        },
        offset: {
            x: 0,
            y: 0
        },
        pos: {
            x: 0,
            y: 0
        },
        last: {
            x: 0,
            y: 0
        },
        vel: {
            x: 0,
            y: 0
        },
        accel: {
            x: 0,
            y: 0
        },
        friction: {
            x: 0,
            y: 0
        },
        maxVel: {
            x: 100,
            y: 100
        },
        zIndex: 0,
        gravityFactor: 1,
        standing: !1,
        bounciness: 0,
        minBounceVelocity: 40,
        anims: {},
        animSheet: null,
        currentAnim: null,
        health: 10,
        type: 0,
        checkAgainst: 0,
        collides: 0,
        _killed: !1,
        slopeStanding: {
            min: (44).toRad(),
            max: (136).toRad()
        },
        inView: !0,
        init: function(b,
            c, d) {
            this.id = ++ig.Entity._lastId;
            this.pos.x = this.last.x = b;
            this.pos.y = this.last.y = c;
            ig.merge(this, d)
        },
        reset: function(b, c, d) {
            var e = this.constructor.prototype;
            this.pos.x = b;
            this.pos.y = c;
            this.last.x = b;
            this.last.y = c;
            this.vel.x = e.vel.x;
            this.vel.y = e.vel.y;
            this.accel.x = e.accel.x;
            this.accel.y = e.accel.y;
            this.health = e.health;
            this._killed = e._killed;
            this.standing = e.standing;
            this.type = e.type;
            this.checkAgainst = e.checkAgainst;
            this.collides = e.collides;
            ig.merge(this, d)
        },
        addAnim: function(b, c, d, e) {
            if (!this.animSheet) throw "No animSheet to add the animation " +
                b + " to.";
            c = new ig.Animation(this.animSheet, c, d, e);
            this.anims[b] = c;
            this.currentAnim || (this.currentAnim = c);
            return c
        },
        update: function() {
            this.last.x = this.pos.x;
            this.last.y = this.pos.y;
            this.vel.y += ig.game.gravity * ig.system.tick * this.gravityFactor;
            this.vel.x = this.getNewVelocity(this.vel.x, this.accel.x, this.friction.x, this.maxVel.x);
            this.vel.y = this.getNewVelocity(this.vel.y, this.accel.y, this.friction.y, this.maxVel.y);
            var b = ig.game.collisionMap.trace(this.pos.x, this.pos.y, this.vel.x * ig.system.tick, this.vel.y *
                ig.system.tick, this.size.x, this.size.y);
            this.handleMovementTrace(b);
            this.currentAnim && this.currentAnim.update()
        },
        getNewVelocity: function(b, c, d, e) {
            return c ? (b + c * ig.system.tick).limit(-e, e) : d ? (c = d * ig.system.tick, 0 < b - c ? b - c : 0 > b + c ? b + c : 0) : b.limit(-e, e)
        },
        moveEntity: function(b, c) {
            this.pos.x -= b;
            this.pos.y -= c
        },
        handleMovementTrace: function(b) {
            this.standing = !1;
            b.collision.y && (0 < this.bounciness && Math.abs(this.vel.y) > this.minBounceVelocity ? this.vel.y *= -this.bounciness : (0 < this.vel.y && (this.standing = !0), this.vel.y =
                0));
            b.collision.x && (this.vel.x = 0 < this.bounciness && Math.abs(this.vel.x) > this.minBounceVelocity ? this.vel.x * -this.bounciness : 0);
            if (b.collision.slope) {
                var c = b.collision.slope;
                if (0 < this.bounciness) {
                    var d = this.vel.x * c.nx + this.vel.y * c.ny;
                    this.vel.x = (this.vel.x - 2 * c.nx * d) * this.bounciness;
                    this.vel.y = (this.vel.y - 2 * c.ny * d) * this.bounciness
                } else d = (this.vel.x * c.x + this.vel.y * c.y) / (c.x * c.x + c.y * c.y), this.vel.x = c.x * d, this.vel.y = c.y * d, c = Math.atan2(c.x, c.y), c > this.slopeStanding.min && c < this.slopeStanding.max && (this.standing = !0)
            }
            this.pos = b.pos
        },
        draw: function() {
            this.currentAnim && this.currentAnim.draw(this.pos.x - this.offset.x - ig.game._rscreen.x, this.pos.y - this.offset.y - ig.game._rscreen.y)
        },
        kill: function() {
            ig.game.removeEntity(this)
        },
        receiveDamage: function(b) {
            this.health -= b;
            0 >= this.health && this.kill()
        },
        touches: function(b) {
            return !(this.pos.x >= b.pos.x + b.size.x || this.pos.x + this.size.x <= b.pos.x || this.pos.y >= b.pos.y + b.size.y || this.pos.y + this.size.y <= b.pos.y)
        },
        distanceTo: function(b) {
            var c = this.pos.x + this.size.x / 2 - (b.pos.x + b.size.x /
                2);
            b = this.pos.y + this.size.y / 2 - (b.pos.y + b.size.y / 2);
            return Math.sqrt(c * c + b * b)
        },
        angleTo: function(b) {
            return Math.atan2(b.pos.y + b.size.y / 2 - (this.pos.y + this.size.y / 2), b.pos.x + b.size.x / 2 - (this.pos.x + this.size.x / 2))
        },
        check: function() {},
        collideWith: function() {},
        ready: function() {},
        erase: function() {}
    });
    ig.Entity._lastId = 0;
    ig.Entity.COLLIDES = {
        NEVER: 0,
        LITE: 1,
        PASSIVE: 2,
        ACTIVE: 4,
        FIXED: 8
    };
    ig.Entity.TYPE = {
        NONE: 0,
        A: 1,
        B: 2,
        BOTH: 3
    };
    ig.Entity.checkPair = function(b, c) {
        b.checkAgainst & c.type && b.check(c);
        c.checkAgainst & b.type &&
            c.check(b);
        b.collides && c.collides && b.collides + c.collides > ig.Entity.COLLIDES.ACTIVE && ig.Entity.solveCollision(b, c)
    };
    ig.Entity.solveCollision = function(b, c) {
        var d = null;
        if (b.collides == ig.Entity.COLLIDES.LITE || c.collides == ig.Entity.COLLIDES.FIXED) d = b;
        else if (c.collides == ig.Entity.COLLIDES.LITE || b.collides == ig.Entity.COLLIDES.FIXED) d = c;
        b.last.x + b.size.x > c.last.x && b.last.x < c.last.x + c.size.x ? (b.last.y < c.last.y ? ig.Entity.seperateOnYAxis(b, c, d) : ig.Entity.seperateOnYAxis(c, b, d), b.collideWith(c, "y"), c.collideWith(b,
            "y")) : b.last.y + b.size.y > c.last.y && b.last.y < c.last.y + c.size.y && (b.last.x < c.last.x ? ig.Entity.seperateOnXAxis(b, c, d) : ig.Entity.seperateOnXAxis(c, b, d), b.collideWith(c, "x"), c.collideWith(b, "x"))
    };
    ig.Entity.seperateOnXAxis = function(b, c, d) {
        var e = b.pos.x + b.size.x - c.pos.x;
        d ? (d.vel.x = -d.vel.x * d.bounciness + (b === d ? c : b).vel.x, c = ig.game.collisionMap.trace(d.pos.x, d.pos.y, d == b ? -e : e, 0, d.size.x, d.size.y), d.pos.x = c.pos.x) : (d = (b.vel.x - c.vel.x) / 2, b.vel.x = -d, c.vel.x = d, d = ig.game.collisionMap.trace(b.pos.x, b.pos.y, -e / 2,
            0, b.size.x, b.size.y), b.pos.x = Math.floor(d.pos.x), b = ig.game.collisionMap.trace(c.pos.x, c.pos.y, e / 2, 0, c.size.x, c.size.y), c.pos.x = Math.ceil(b.pos.x))
    };
    ig.Entity.seperateOnYAxis = function(b, c, d) {
        var e = b.pos.y + b.size.y - c.pos.y;
        if (d) {
            c = b === d ? c : b;
            d.vel.y = -d.vel.y * d.bounciness + c.vel.y;
            var g = 0;
            d == b && Math.abs(d.vel.y - c.vel.y) < d.minBounceVelocity && (d.standing = !0, g = c.vel.x * ig.system.tick);
            b = ig.game.collisionMap.trace(d.pos.x, d.pos.y, g, d == b ? -e : e, d.size.x, d.size.y);
            d.pos.y = b.pos.y;
            d.pos.x = b.pos.x
        } else ig.game.gravity &&
            (c.standing || 0 < b.vel.y) ? (d = ig.game.collisionMap.trace(b.pos.x, b.pos.y, 0, -(b.pos.y + b.size.y - c.pos.y), b.size.x, b.size.y), b.pos.y = d.pos.y, 0 < b.bounciness && b.vel.y > b.minBounceVelocity ? b.vel.y *= -b.bounciness : (b.standing = !0, b.vel.y = 0)) : (d = (b.vel.y - c.vel.y) / 2, b.vel.y = -d, c.vel.y = d, g = c.vel.x * ig.system.tick, d = ig.game.collisionMap.trace(b.pos.x, b.pos.y, g, -e / 2, b.size.x, b.size.y), b.pos.y = d.pos.y, b = ig.game.collisionMap.trace(c.pos.x, c.pos.y, 0, e / 2, c.size.x, c.size.y), c.pos.y = b.pos.y)
    }
});
ig.baked = !0;
ig.module("impact.map").defines(function() {
    ig.Map = ig.Class.extend({
        tilesize: 8,
        width: 1,
        height: 1,
        data: [
            []
        ],
        name: null,
        init: function(b, c) {
            this.tilesize = b;
            this.data = c;
            this.height = c.length;
            this.width = c[0].length;
            this.pxWidth = this.width * this.tilesize;
            this.pxHeight = this.height * this.tilesize
        },
        getTile: function(b, c) {
            var d = Math.floor(b / this.tilesize),
                e = Math.floor(c / this.tilesize);
            return 0 <= d && d < this.width && 0 <= e && e < this.height ? this.data[e][d] : 0
        },
        setTile: function(b, c, d) {
            b = Math.floor(b / this.tilesize);
            c = Math.floor(c /
                this.tilesize);
            0 <= b && b < this.width && 0 <= c && c < this.height && (this.data[c][b] = d)
        }
    })
});
ig.baked = !0;
ig.module("impact.collision-map").requires("impact.map").defines(function() {
    ig.CollisionMap = ig.Map.extend({
        lastSlope: 1,
        tiledef: null,
        init: function(b, c, g) {
            this.parent(b, c);
            this.tiledef = g || ig.CollisionMap.defaultTileDef;
            for (var l in this.tiledef) l | 0 > this.lastSlope && (this.lastSlope = l | 0)
        },
        trace: function(b, c, g, l, r, p) {
            var t = {
                    collision: {
                        x: !1,
                        y: !1,
                        slope: !1
                    },
                    pos: {
                        x: b,
                        y: c
                    },
                    tile: {
                        x: 0,
                        y: 0
                    }
                },
                s = Math.ceil(Math.max(Math.abs(g), Math.abs(l)) / this.tilesize);
            if (1 < s)
                for (var y = g / s, m = l / s, q = 0; q < s && (y || m) && !(this._traceStep(t,
                    b, c, y, m, r, p, g, l, q), b = t.pos.x, c = t.pos.y, t.collision.x && (g = y = 0), t.collision.y && (l = m = 0), t.collision.slope); q++);
            else this._traceStep(t, b, c, g, l, r, p, g, l, 0);
            return t
        },
        _traceStep: function(b, c, g, l, r, p, t, s, y, m) {
            b.pos.x += l;
            b.pos.y += r;
            var q = 0;
            if (l) {
                var x = 0 < l ? p : 0,
                    F = 0 > l ? this.tilesize : 0,
                    q = Math.max(Math.floor(g / this.tilesize), 0),
                    N = Math.min(Math.ceil((g + t) / this.tilesize), this.height);
                l = Math.floor((b.pos.x + x) / this.tilesize);
                var G = Math.floor((c + x) / this.tilesize);
                if (0 < m || l == G || 0 > G || G >= this.width) G = -1;
                if (0 <= l && l < this.width)
                    for (var M =
                        q; M < N && !(-1 != G && (q = this.data[M][G], 1 < q && q <= this.lastSlope && this._checkTileDef(b, q, c, g, s, y, p, t, G, M))); M++)
                        if (q = this.data[M][l], 1 == q || q > this.lastSlope || 1 < q && this._checkTileDef(b, q, c, g, s, y, p, t, l, M)) {
                            if (1 < q && q <= this.lastSlope && b.collision.slope) break;
                            b.collision.x = !0;
                            b.tile.x = q;
                            c = b.pos.x = l * this.tilesize - x + F;
                            s = 0;
                            break
                        }
            }
            if (r) {
                x = 0 < r ? t : 0;
                r = 0 > r ? this.tilesize : 0;
                q = Math.max(Math.floor(b.pos.x / this.tilesize), 0);
                F = Math.min(Math.ceil((b.pos.x + p) / this.tilesize), this.width);
                M = Math.floor((b.pos.y + x) / this.tilesize);
                N = Math.floor((g + x) / this.tilesize);
                if (0 < m || M == N || 0 > N || N >= this.height) N = -1;
                if (0 <= M && M < this.height)
                    for (l = q; l < F && !(-1 != N && (q = this.data[N][l], 1 < q && q <= this.lastSlope && this._checkTileDef(b, q, c, g, s, y, p, t, l, N))); l++)
                        if (q = this.data[M][l], 1 == q || q > this.lastSlope || 1 < q && this._checkTileDef(b, q, c, g, s, y, p, t, l, M)) {
                            if (1 < q && q <= this.lastSlope && b.collision.slope) break;
                            b.collision.y = !0;
                            b.tile.y = q;
                            b.pos.y = M * this.tilesize - x + r;
                            break
                        }
            }
        },
        _checkTileDef: function(b, c, g, l, r, p, t, s, y, m) {
            var q = this.tiledef[c];
            if (!q) return !1;
            c = (q[2] -
                q[0]) * this.tilesize;
            var x = (q[3] - q[1]) * this.tilesize,
                F = q[4];
            t = g + r + (0 > x ? t : 0) - (y + q[0]) * this.tilesize;
            s = l + p + (0 < c ? s : 0) - (m + q[1]) * this.tilesize;
            if (0 < c * s - x * t) {
                if (0 > r * -x + p * c) return F;
                y = Math.sqrt(c * c + x * x);
                m = x / y;
                y = -c / y;
                var N = t * m + s * y,
                    q = m * N,
                    N = y * N;
                if (q * q + N * N >= r * r + p * p) return F || 0.5 > c * (s - p) - x * (t - r);
                b.pos.x = g + r - q;
                b.pos.y = l + p - N;
                b.collision.slope = {
                    x: c,
                    y: x,
                    nx: m,
                    ny: y
                };
                return !0
            }
            return !1
        }
    });
    var b = 1 / 3,
        c = 2 / 3;
    ig.CollisionMap.defaultTileDef = {
        5: [0, 1, 1, c, !0],
        6: [0, c, 1, b, !0],
        7: [0, b, 1, 0, !0],
        3: [0, 1, 1, 0.5, !0],
        4: [0, 0.5, 1, 0, !0],
        2: [0,
            1, 1, 0, !0
        ],
        10: [0.5, 1, 1, 0, !0],
        21: [0, 1, 0.5, 0, !0],
        32: [c, 1, 1, 0, !0],
        43: [b, 1, c, 0, !0],
        54: [0, 1, b, 0, !0],
        27: [0, 0, 1, b, !0],
        28: [0, b, 1, c, !0],
        29: [0, c, 1, 1, !0],
        25: [0, 0, 1, 0.5, !0],
        26: [0, 0.5, 1, 1, !0],
        24: [0, 0, 1, 1, !0],
        11: [0, 0, 0.5, 1, !0],
        22: [0.5, 0, 1, 1, !0],
        33: [0, 0, b, 1, !0],
        44: [b, 0, c, 1, !0],
        55: [c, 0, 1, 1, !0],
        16: [1, b, 0, 0, !0],
        17: [1, c, 0, b, !0],
        18: [1, 1, 0, c, !0],
        14: [1, 0.5, 0, 0, !0],
        15: [1, 1, 0, 0.5, !0],
        13: [1, 1, 0, 0, !0],
        8: [0.5, 1, 0, 0, !0],
        19: [1, 1, 0.5, 0, !0],
        30: [b, 1, 0, 0, !0],
        41: [c, 1, b, 0, !0],
        52: [1, 1, c, 0, !0],
        38: [1, c, 0, 1, !0],
        39: [1, b, 0, c, !0],
        40: [1, 0,
            0, b, !0
        ],
        36: [1, 0.5, 0, 1, !0],
        37: [1, 0, 0, 0.5, !0],
        35: [1, 0, 0, 1, !0],
        9: [1, 0, 0.5, 1, !0],
        20: [0.5, 0, 0, 1, !0],
        31: [1, 0, c, 1, !0],
        42: [c, 0, b, 1, !0],
        53: [b, 0, 0, 1, !0],
        12: [0, 0, 1, 0, !1],
        23: [1, 1, 0, 1, !1],
        34: [1, 0, 1, 1, !1],
        45: [0, 1, 0, 0, !1]
    };
    ig.CollisionMap.staticNoCollision = {
        trace: function(b, c, g, l) {
            return {
                collision: {
                    x: !1,
                    y: !1,
                    slope: !1
                },
                pos: {
                    x: b + g,
                    y: c + l
                },
                tile: {
                    x: 0,
                    y: 0
                }
            }
        }
    }
});
ig.baked = !0;
ig.module("impact.background-map").requires("impact.map", "impact.image").defines(function() {
    ig.BackgroundMap = ig.Map.extend({
        tiles: null,
        scroll: {
            x: 0,
            y: 0
        },
        distance: 1,
        repeat: !1,
        tilesetName: "",
        foreground: !1,
        enabled: !0,
        preRender: !1,
        preRenderedChunks: null,
        chunkSize: 512,
        debugChunks: !1,
        anims: {},
        init: function(b, c, d) {
            this.parent(b, c);
            this.setTileset(d)
        },
        setTileset: function(b) {
            this.tilesetName = b instanceof ig.Image ? b.path : b;
            this.tiles = new ig.Image(this.tilesetName);
            this.preRenderedChunks = null
        },
        setScreenPos: function(b,
            c) {
            this.scroll.x = b / this.distance;
            this.scroll.y = c / this.distance
        },
        preRenderMapToChunks: function() {
            var b = this.width * this.tilesize * ig.system.scale,
                c = this.height * this.tilesize * ig.system.scale;
            this.chunkSize = Math.min(Math.max(b, c), this.chunkSize);
            var d = Math.ceil(b / this.chunkSize),
                e = Math.ceil(c / this.chunkSize);
            this.preRenderedChunks = [];
            for (var g = 0; g < e; g++) {
                this.preRenderedChunks[g] = [];
                for (var l = 0; l < d; l++) this.preRenderedChunks[g][l] = this.preRenderChunk(l, g, l == d - 1 ? b - l * this.chunkSize : this.chunkSize, g == e - 1 ?
                    c - g * this.chunkSize : this.chunkSize)
            }
        },
        preRenderChunk: function(b, c, d, e) {
            var g = d / this.tilesize / ig.system.scale + 1,
                l = e / this.tilesize / ig.system.scale + 1,
                r = b * this.chunkSize / ig.system.scale % this.tilesize,
                p = c * this.chunkSize / ig.system.scale % this.tilesize;
            b = Math.floor(b * this.chunkSize / this.tilesize / ig.system.scale);
            c = Math.floor(c * this.chunkSize / this.tilesize / ig.system.scale);
            var t = ig.$new("canvas");
            t.width = d;
            t.height = e;
            t.retinaResolutionEnabled = !1;
            e = t.getContext("2d");
            ig.System.scaleMode(t, e);
            d = ig.system.context;
            ig.system.context = e;
            for (e = 0; e < g; e++)
                for (var s = 0; s < l; s++)
                    if (e + b < this.width && s + c < this.height) {
                        var y = this.data[s + c][e + b];
                        y && this.tiles.drawTile(e * this.tilesize - r, s * this.tilesize - p, y - 1, this.tilesize)
                    }
            ig.system.context = d;
            return t
        },
        draw: function() {
            this.tiles.loaded && this.enabled && (this.preRender ? this.drawPreRendered() : this.drawTiled())
        },
        drawPreRendered: function() {
            this.preRenderedChunks || this.preRenderMapToChunks();
            var b = ig.system.getDrawPos(this.scroll.x),
                c = ig.system.getDrawPos(this.scroll.y);
            if (this.repeat) var d =
                this.width * this.tilesize * ig.system.scale,
                b = (b % d + d) % d,
                d = this.height * this.tilesize * ig.system.scale,
                c = (c % d + d) % d;
            var d = Math.max(Math.floor(b / this.chunkSize), 0),
                e = Math.max(Math.floor(c / this.chunkSize), 0),
                g = Math.ceil((b + ig.system.realWidth) / this.chunkSize),
                l = Math.ceil((c + ig.system.realHeight) / this.chunkSize),
                r = this.preRenderedChunks[0].length,
                p = this.preRenderedChunks.length;
            this.repeat || (g = Math.min(g, r), l = Math.min(l, p));
            for (var t = 0; e < l; e++) {
                for (var s = 0, y = d; y < g; y++) {
                    var m = this.preRenderedChunks[e % p][y % r],
                        q = -b + y * this.chunkSize - s,
                        x = -c + e * this.chunkSize - t;
                    ig.system.context.drawImage(m, q, x);
                    ig.Image.drawCount++;
                    this.debugChunks && (ig.system.context.strokeStyle = "#f0f", ig.system.context.strokeRect(q, x, this.chunkSize, this.chunkSize));
                    this.repeat && m.width < this.chunkSize && q + m.width < ig.system.realWidth && (s += this.chunkSize - m.width, g++)
                }
                this.repeat && m.height < this.chunkSize && x + m.height < ig.system.realHeight && (t += this.chunkSize - m.height, l++)
            }
        },
        drawTiled: function() {
            for (var b = 0, c = null, d = (this.scroll.x / this.tilesize).toInt(),
                e = (this.scroll.y / this.tilesize).toInt(), g = this.scroll.x % this.tilesize, l = this.scroll.y % this.tilesize, r = -g - this.tilesize, g = ig.system.width + this.tilesize - g, p = ig.system.height + this.tilesize - l, t = -1, l = -l - this.tilesize; l < p; t++, l += this.tilesize) {
                var s = t + e;
                if (s >= this.height || 0 > s) {
                    if (!this.repeat) continue;
                    s = (s % this.height + this.height) % this.height
                }
                for (var y = -1, m = r; m < g; y++, m += this.tilesize) {
                    b = y + d;
                    if (b >= this.width || 0 > b) {
                        if (!this.repeat) continue;
                        b = (b % this.width + this.width) % this.width
                    }
                    if (b = this.data[s][b])(c = this.anims[b -
                        1]) ? c.draw(m, l) : this.tiles.drawTile(m, l, b - 1, this.tilesize)
                }
            }
        }
    })
});
ig.baked = !0;
ig.module("impact.game").requires("impact.impact", "impact.entity", "impact.collision-map", "impact.background-map").defines(function() {
    ig.Game = ig.Class.extend({
        clearColor: "#000000",
        gravity: 0,
        screen: {
            x: 0,
            y: 0
        },
        _rscreen: {
            x: 0,
            y: 0
        },
        entities: [],
        namedEntities: {},
        collisionMap: ig.CollisionMap.staticNoCollision,
        backgroundMaps: [],
        backgroundAnims: {},
        autoSort: !1,
        sortBy: null,
        cellSize: 64,
        _deferredKill: [],
        _levelToLoad: null,
        _doSortEntities: !1,
        entitiesOnScreen: [],
        staticInstantiate: function() {
            this.sortBy = this.sortBy ||
                ig.Game.SORT.Z_INDEX;
            ig.game = this;
            return null
        },
        loadLevel: function(b) {
            this.screen = {
                x: 0,
                y: 0
            };
            this.entities = [];
            this.namedEntities = {};
            for (var c = 0; c < b.entities.length; c++) {
                var d = b.entities[c];
                this.spawnEntity(d.type, d.x, d.y, d.settings)
            }
            this.sortEntities();
            this.collisionMap = ig.CollisionMap.staticNoCollision;
            this.backgroundMaps = [];
            for (c = 0; c < b.layer.length; c++)
                if (d = b.layer[c], "collision" == d.name) this.collisionMap = new ig.CollisionMap(d.tilesize, d.data);
                else {
                    var e = new ig.BackgroundMap(d.tilesize, d.data, d.tilesetName);
                    e.anims = this.backgroundAnims[d.tilesetName] || {};
                    e.repeat = d.repeat;
                    e.distance = d.distance;
                    e.foreground = !!d.foreground;
                    e.preRender = !!d.preRender;
                    e.name = d.name;
                    this.backgroundMaps.push(e)
                }
            for (c = 0; c < this.entities.length; c++) this.entities[c].ready()
        },
        loadLevelDeferred: function(b) {
            this._levelToLoad = b
        },
        getMapByName: function(b) {
            if ("collision" == b) return this.collisionMap;
            for (var c = 0; c < this.backgroundMaps.length; c++)
                if (this.backgroundMaps[c].name == b) return this.backgroundMaps[c];
            return null
        },
        getEntityByName: function(b) {
            return this.namedEntities[b]
        },
        getEntitiesByType: function(b) {
            b = "string" === typeof b ? ig.global[b] : b;
            for (var c = [], d = 0; d < this.entities.length; d++) {
                var e = this.entities[d];
                e instanceof b && !e._killed && c.push(e)
            }
            return c
        },
        spawnEntity: function(b, c, d, e) {
            var g = "string" === typeof b ? ig.global[b] : b;
            if (!g) throw "Can't spawn entity of type " + b;
            b = new g(c, d, e || {});
            this.entities.push(b);
            b.name && (this.namedEntities[b.name] = b);
            return b
        },
        sortEntities: function() {
            this.entities.sort(this.sortBy)
        },
        sortEntitiesDeferred: function() {
            this._doSortEntities = !0
        },
        removeEntity: function(b) {
            b.name && delete this.namedEntities[b.name];
            b._killed = !0;
            b.type = ig.Entity.TYPE.NONE;
            b.checkAgainst = ig.Entity.TYPE.NONE;
            b.collides = ig.Entity.COLLIDES.NEVER;
            this._deferredKill.push(b)
        },
        run: function() {
            this.update();
            this.draw()
        },
        update: function() {
            this._levelToLoad && (this.loadLevel(this._levelToLoad), this._levelToLoad = null);
            this.updateEntities();
            this.checkEntities();
            for (var b = 0; b < this._deferredKill.length; b++) this._deferredKill[b].erase(), this.entities.erase(this._deferredKill[b]);
            this._deferredKill = [];
            if (this._doSortEntities || this.autoSort) this.sortEntities(), this._doSortEntities = !1;
            for (var c in this.backgroundAnims) {
                var b = this.backgroundAnims[c],
                    d;
                for (d in b) b[d].update()
            }
        },
        updateEntities: function() {
            for (; 0 < this.entitiesOnScreen.length;) this.entitiesOnScreen.pop();
            for (var b = 0; b < this.entities.length; b++) {
                var c = this.entities[b];
                c._killed || (c.anIsoEntity && c.moveEntity(this.scroll.x, this.scroll.y), c.update(), c.inView && this.entitiesOnScreen.push(c))
            }
        },
        draw: function() {
            ig.system.context.clearRect(0,
                0, ig.system.realWidth, ig.system.realHeight);
            this._rscreen.x = ig.system.getDrawPos(this.screen.x) / ig.system.scale;
            this._rscreen.y = ig.system.getDrawPos(this.screen.y) / ig.system.scale;
            var b;
            for (b = 0; b < this.backgroundMaps.length; b++) {
                var c = this.backgroundMaps[b];
                if (c.foreground) break;
                c.setScreenPos(this.screen.x, this.screen.y);
                c.draw()
            }
            this.drawEntities();
            for (b; b < this.backgroundMaps.length; b++) c = this.backgroundMaps[b], c.setScreenPos(this.screen.x, this.screen.y), c.draw()
        },
        drawEntities: function() {
            for (var b =
                0; b < this.entitiesOnScreen.length; b++) this.entitiesOnScreen[b].draw()
        },
        checkEntities: function() {
            for (var b = {}, c = 0; c < this.entities.length; c++) {
                var d = this.entities[c];
                if (!(d.type == ig.Entity.TYPE.NONE && d.checkAgainst == ig.Entity.TYPE.NONE && d.collides == ig.Entity.COLLIDES.NEVER))
                    for (var e = {}, g = Math.floor(d.pos.y / this.cellSize), l = Math.floor((d.pos.x + d.size.x) / this.cellSize) + 1, r = Math.floor((d.pos.y + d.size.y) / this.cellSize) + 1, p = Math.floor(d.pos.x / this.cellSize); p < l; p++)
                        for (var t = g; t < r; t++)
                            if (b[p])
                                if (b[p][t]) {
                                    for (var s =
                                        b[p][t], y = 0; y < s.length; y++) d.touches(s[y]) && !e[s[y].id] && (e[s[y].id] = !0, ig.Entity.checkPair(d, s[y]));
                                    s.push(d)
                                } else b[p][t] = [d];
                else b[p] = {}, b[p][t] = [d]
            }
        }
    });
    ig.Game.SORT = {
        Z_INDEX: function(b, c) {
            return b.zIndex - c.zIndex
        },
        POS_X: function(b, c) {
            return b.pos.x + b.size.x - (c.pos.x + c.size.x)
        },
        POS_Y: function(b, c) {
            return b.pos.y + b.size.y - (c.pos.y + c.size.y)
        }
    }
});
ig.baked = !0;
ig.module("plugins.splash-loader").requires("impact.loader", "impact.animation").defines(function() {
    ig.SplashLoader = ig.Loader.extend({
        splashDesktop: new ig.Image("media/graphics/splash/desktop/cover.png"),
        splashMobile: new ig.Image("media/graphics/splash/mobile/cover.png"),
        loadFrame: new ig.Image("media/graphics/game/loadbar.png"),
        loadBar: new ig.Image("media/graphics/game/start-button.png"),
        init: function(b, c) {
            this.parent(b, c);
            ig.ua.mobile 
            //&& _SETTINGS.Ad.Mobile.Preroll.Enabled && MobileAdInGamePreroll.Initialize()
        },
        end: function() {
            this.parent();
            var b = 0 <= document.URL.indexOf("localhost") ? 500 : 3E3;
            window.setTimeout("ig.system.setGame(MyGame)", b)
        },
        setupCustomAnimation: function() {
            this.customAnim = new ig.Animation(this.customAnim, 0.05, [0, 1, 2, 3, 4, 5]);
            this.customAnim.currentFrame = 0;
            ig.loadingScreen = this;
            ig.loadingScreen.animationTimer = window.setInterval("ig.loadingScreen.animate()", 100)
        },
        animate: function() {
            this.customAnim.currentFrame < this.customAnim.sequence.length ? this.customAnim.currentFrame++ : this.customAnim.currentFrame =
                0;
            this.customAnim.gotoFrame(this.customAnim.currentFrame)
        },
        draw: function() {
            ig.system.context.font = "1px dimitri";
            ig.system.context.fillText("", 1320, 1E3);
            this._drawStatus += (this.status - this._drawStatus) / 5;
            0 >= this._drawStatus && (this._drawStatus = 1);
            ig.system.context.fillStyle = "#000";
            ig.system.context.fillRect(0, 0, ig.system.width, ig.system.height);
            ig.ua.mobile ? this.splashMobile.draw(0, 0) : this.splashDesktop.draw(0, 0);
            ig.system.context.drawImage(this.loadFrame.data, 218.5, 350);
            1 > 203 * this._drawStatus ? ig.system.context.drawImage(this.loadBar.data,
                0, 0, 1, 61, 218.5, 350, 1, 61) : ig.system.context.drawImage(this.loadBar.data, 0, 0, 203 * this._drawStatus + 1, 61, 218.5, 350, 203 * this._drawStatus + 1, 61);
            ig.system.context.fillStyle = "#ffffff";
            ig.system.context.font = "30px dimitri";
            ig.system.context.textAlign = "center";
            ig.system.context.fillText(_STRINGS.Splash.Loading, 320, 390)
        }
    })
});
ig.baked = !0;
ig.module("plugins.tween").requires("impact.entity").defines(function() {
    Array.prototype.indexOf || (Array.prototype.indexOf = function(b) {
        for (var c = 0; c < this.length; ++c)
            if (this[c] === b) return c;
        return -1
    });
    ig.Entity.prototype.tweens = [];
    ig.Entity.prototype._preTweenUpdate = ig.Entity.prototype.update;
    ig.Entity.prototype.update = function() {
        this._preTweenUpdate();
        if (0 < this.tweens.length) {
            for (var b = [], c = 0; c < this.tweens.length; c++) this.tweens[c].update(), this.tweens[c].complete || b.push(this.tweens[c]);
            this.tweens =
                b
        }
    };
    ig.Entity.prototype.tween = function(b, c, d) {
        b = new ig.Tween(this, b, c, d);
        this.tweens.push(b);
        return b
    };
    ig.Entity.prototype.pauseTweens = function() {
        for (var b = 0; b < this.tweens.length; b++) this.tweens[b].pause()
    };
    ig.Entity.prototype.resumeTweens = function() {
        for (var b = 0; b < this.tweens.length; b++) this.tweens[b].resume()
    };
    ig.Entity.prototype.stopTweens = function(b) {
        for (var c = 0; c < this.tweens.length; c++) this.tweens[c].stop(b)
    };
    ig.Tween = function(b, c, d, e) {
        var g = {},
            l = {},
            r = {},
            p = 0,
            t = !1,
            s = !1,
            y = !1;
        this.duration = d;
        this.paused =
            this.complete = !1;
        this.easing = ig.Tween.Easing.Linear.EaseNone;
        this.onComplete = !1;
        this.loop = this.delay = 0;
        this.loopCount = -1;
        ig.merge(this, e);
        this.loopNum = this.loopCount;
        this.chain = function(b) {
            y = b
        };
        this.initEnd = function(b, c, d) {
            if ("object" !== typeof c[b]) d[b] = c[b];
            else
                for (subprop in c[b]) d[b] || (d[b] = {}), this.initEnd(subprop, c[b], d[b])
        };
        this.initStart = function(b, c, d, e) {
            if ("object" !== typeof d[b]) "undefined" !== typeof c[b] && (e[b] = d[b]);
            else
                for (subprop in d[b]) e[b] || (e[b] = {}), "undefined" !== typeof c[b] && this.initStart(subprop,
                    c[b], d[b], e[b])
        };
        this.start = function() {
            this.paused = this.complete = !1;
            this.loopNum = this.loopCount;
            p = 0; - 1 == b.tweens.indexOf(this) && b.tweens.push(this);
            s = !0;
            t = new ig.Timer;
            for (var d in c) this.initEnd(d, c, l);
            for (d in l) this.initStart(d, l, b, g), this.initDelta(d, r, b, l)
        };
        this.initDelta = function(b, c, d, e) {
            if ("object" !== typeof e[b]) c[b] = e[b] - d[b];
            else
                for (subprop in e[b]) c[b] || (c[b] = {}), this.initDelta(subprop, c[b], d[b], e[b])
        };
        this.propUpdate = function(b, c, d, e, g) {
            if ("object" !== typeof d[b]) c[b] = "undefined" != typeof d[b] ?
                d[b] + e[b] * g : c[b];
            else
                for (subprop in d[b]) this.propUpdate(subprop, c[b], d[b], e[b], g)
        };
        this.propSet = function(b, c, d) {
            if ("object" !== typeof c[b]) d[b] = c[b];
            else
                for (subprop in c[b]) d[b] || (d[b] = {}), this.propSet(subprop, c[b], d[b])
        };
        this.update = function() {
            if (!s) return !1;
            if (this.delay) {
                if (t.delta() < this.delay) return;
                this.delay = 0;
                t.reset()
            }
            if (this.paused || this.complete) return !1;
            var c = (t.delta() + p) / this.duration,
                c = 1 < c ? 1 : c,
                d = this.easing(c);
            for (property in r) this.propUpdate(property, b, g, r, d);
            if (1 <= c) {
                if (0 == this.loopNum ||
                    !this.loop) {
                    this.complete = !0;
                    if (this.onComplete) this.onComplete();
                    y && y.start();
                    return !1
                }
                if (this.loop == ig.Tween.Loop.Revert) {
                    for (property in g) this.propSet(property, g, b);
                    p = 0;
                    t.reset(); - 1 != this.loopNum && this.loopNum--
                } else if (this.loop == ig.Tween.Loop.Reverse) {
                    c = {};
                    d = {};
                    ig.merge(c, l);
                    ig.merge(d, g);
                    ig.merge(g, c);
                    ig.merge(l, d);
                    for (property in l) this.initDelta(property, r, b, l);
                    p = 0;
                    t.reset(); - 1 != this.loopNum && this.loopNum--
                }
            }
        };
        this.pause = function() {
            this.paused = !0;
            p += t.delta()
        };
        this.resume = function() {
            this.paused = !1;
            t.reset()
        };
        this.stop = function(b) {
            b && (this.loop = this.complete = this.paused = !1, p += d, this.update());
            this.complete = !0
        }
    };
    ig.Tween.Loop = {
        Revert: 1,
        Reverse: 2
    };
    ig.Tween.Easing = {
        Linear: {},
        Quadratic: {},
        Cubic: {},
        Quartic: {},
        Quintic: {},
        Sinusoidal: {},
        Exponential: {},
        Circular: {},
        Elastic: {},
        Back: {},
        Bounce: {}
    };
    ig.Tween.Easing.Linear.EaseNone = function(b) {
        return b
    };
    ig.Tween.Easing.Quadratic.EaseIn = function(b) {
        return b * b
    };
    ig.Tween.Easing.Quadratic.EaseOut = function(b) {
        return -b * (b - 2)
    };
    ig.Tween.Easing.Quadratic.EaseInOut =
        function(b) {
            return 1 > (b *= 2) ? 0.5 * b * b : -0.5 * (--b * (b - 2) - 1)
        };
    ig.Tween.Easing.Cubic.EaseIn = function(b) {
        return b * b * b
    };
    ig.Tween.Easing.Cubic.EaseOut = function(b) {
        return --b * b * b + 1
    };
    ig.Tween.Easing.Cubic.EaseInOut = function(b) {
        return 1 > (b *= 2) ? 0.5 * b * b * b : 0.5 * ((b -= 2) * b * b + 2)
    };
    ig.Tween.Easing.Quartic.EaseIn = function(b) {
        return b * b * b * b
    };
    ig.Tween.Easing.Quartic.EaseOut = function(b) {
        return -(--b * b * b * b - 1)
    };
    ig.Tween.Easing.Quartic.EaseInOut = function(b) {
        return 1 > (b *= 2) ? 0.5 * b * b * b * b : -0.5 * ((b -= 2) * b * b * b - 2)
    };
    ig.Tween.Easing.Quintic.EaseIn =
        function(b) {
            return b * b * b * b * b
        };
    ig.Tween.Easing.Quintic.EaseOut = function(b) {
        return (b -= 1) * b * b * b * b + 1
    };
    ig.Tween.Easing.Quintic.EaseInOut = function(b) {
        return 1 > (b *= 2) ? 0.5 * b * b * b * b * b : 0.5 * ((b -= 2) * b * b * b * b + 2)
    };
    ig.Tween.Easing.Sinusoidal.EaseIn = function(b) {
        return -Math.cos(b * Math.PI / 2) + 1
    };
    ig.Tween.Easing.Sinusoidal.EaseOut = function(b) {
        return Math.sin(b * Math.PI / 2)
    };
    ig.Tween.Easing.Sinusoidal.EaseInOut = function(b) {
        return -0.5 * (Math.cos(Math.PI * b) - 1)
    };
    ig.Tween.Easing.Exponential.EaseIn = function(b) {
        return 0 == b ? 0 : Math.pow(2,
            10 * (b - 1))
    };
    ig.Tween.Easing.Exponential.EaseOut = function(b) {
        return 1 == b ? 1 : -Math.pow(2, -10 * b) + 1
    };
    ig.Tween.Easing.Exponential.EaseInOut = function(b) {
        return 0 == b ? 0 : 1 == b ? 1 : 1 > (b *= 2) ? 0.5 * Math.pow(2, 10 * (b - 1)) : 0.5 * (-Math.pow(2, -10 * (b - 1)) + 2)
    };
    ig.Tween.Easing.Circular.EaseIn = function(b) {
        return -(Math.sqrt(1 - b * b) - 1)
    };
    ig.Tween.Easing.Circular.EaseOut = function(b) {
        return Math.sqrt(1 - --b * b)
    };
    ig.Tween.Easing.Circular.EaseInOut = function(b) {
        return 1 > (b /= 0.5) ? -0.5 * (Math.sqrt(1 - b * b) - 1) : 0.5 * (Math.sqrt(1 - (b -= 2) * b) + 1)
    };
    ig.Tween.Easing.Elastic.EaseIn =
        function(b) {
            var c, d = 0.1,
                e = 0.4;
            if (0 == b) return 0;
            if (1 == b) return 1;
            e || (e = 0.3);
            !d || 1 > d ? (d = 1, c = e / 4) : c = e / (2 * Math.PI) * Math.asin(1 / d);
            return -(d * Math.pow(2, 10 * (b -= 1)) * Math.sin(2 * (b - c) * Math.PI / e))
        };
    ig.Tween.Easing.Elastic.EaseOut = function(b) {
        var c, d = 0.1,
            e = 0.4;
        if (0 == b) return 0;
        if (1 == b) return 1;
        e || (e = 0.3);
        !d || 1 > d ? (d = 1, c = e / 4) : c = e / (2 * Math.PI) * Math.asin(1 / d);
        return d * Math.pow(2, -10 * b) * Math.sin(2 * (b - c) * Math.PI / e) + 1
    };
    ig.Tween.Easing.Elastic.EaseInOut = function(b) {
        var c, d = 0.1,
            e = 0.4;
        if (0 == b) return 0;
        if (1 == b) return 1;
        e || (e = 0.3);
        !d || 1 > d ? (d = 1, c = e / 4) : c = e / (2 * Math.PI) * Math.asin(1 / d);
        return 1 > (b *= 2) ? -0.5 * d * Math.pow(2, 10 * (b -= 1)) * Math.sin(2 * (b - c) * Math.PI / e) : 0.5 * d * Math.pow(2, -10 * (b -= 1)) * Math.sin(2 * (b - c) * Math.PI / e) + 1
    };
    ig.Tween.Easing.Back.EaseIn = function(b) {
        return b * b * (2.70158 * b - 1.70158)
    };
    ig.Tween.Easing.Back.EaseOut = function(b) {
        return (b -= 1) * b * (2.70158 * b + 1.70158) + 1
    };
    ig.Tween.Easing.Back.EaseInOut = function(b) {
        return 1 > (b *= 2) ? 0.5 * b * b * (3.5949095 * b - 2.5949095) : 0.5 * ((b -= 2) * b * (3.5949095 * b + 2.5949095) + 2)
    };
    ig.Tween.Easing.Bounce.EaseIn =
        function(b) {
            return 1 - ig.Tween.Easing.Bounce.EaseOut(1 - b)
        };
    ig.Tween.Easing.Bounce.EaseOut = function(b) {
        return (b /= 1) < 1 / 2.75 ? 7.5625 * b * b : b < 2 / 2.75 ? 7.5625 * (b -= 1.5 / 2.75) * b + 0.75 : b < 2.5 / 2.75 ? 7.5625 * (b -= 2.25 / 2.75) * b + 0.9375 : 7.5625 * (b -= 2.625 / 2.75) * b + 0.984375
    };
    ig.Tween.Easing.Bounce.EaseInOut = function(b) {
        return 0.5 > b ? 0.5 * ig.Tween.Easing.Bounce.EaseIn(2 * b) : 0.5 * ig.Tween.Easing.Bounce.EaseOut(2 * b - 1) + 0.5
    }
});
ig.baked = !0;
ig.module("plugins.url-parameters").defines(function() {
    ig.UrlParameters = ig.Class.extend({
        init: function() {
            switch (getQueryVariable("iphone")) {
                case "true":
                    ig.ua.iPhone = !0, console.log("iPhone mode")
            }
            var b = getQueryVariable("webview");
            if (b) switch (b) {
                case "true":
                    ig.ua.is_uiwebview = !0, console.log("webview mode")
            }
            if (b = getQueryVariable("debug")) switch (b) {
                case "true":
                    ig.game.showDebugMenu(), console.log("debug mode")
            }
            switch (getQueryVariable("view")) {
                case "stats":
                    ig.game.resetPlayerStats(), ig.game.endGame()
            }
            getQueryVariable("ad")
        }
    })
});
ig.baked = !0;
ig.module("plugins.director").requires("impact.impact").defines(function() {
    ig.Director = ig.Class.extend({
        init: function(b, c) {
            this.game = b;
            this.levels = [];
            this.currentLevel = 0;
            this.append(c)
        },
        loadLevel: function(b) {
            if (!ig.global.wm)
                for (key in dynamicClickableEntityDivs) ig.game.hideOverlay([key]);
            this.currentLevel = b;
            this.game.loadLevel(this.levels[b]);
            return !0
        },
        loadLevelWithoutEntities: function(b) {
            this.currentLevel = b;
            this.game.loadLevelWithoutEntities(this.levels[b]);
            return !0
        },
        append: function(b) {
            newLevels = [];
            return "object" === typeof b ? (b.constructor === [].constructor ? newLevels = b : newLevels[0] = b, this.levels = this.levels.concat(newLevels), !0) : !1
        },
        nextLevel: function() {
            return this.currentLevel + 1 < this.levels.length ? this.loadLevel(this.currentLevel + 1) : !1
        },
        previousLevel: function() {
            return 0 <= this.currentLevel - 1 ? this.loadLevel(this.currentLevel - 1) : !1
        },
        jumpTo: function(b) {
            var c = null;
            for (i = 0; i < this.levels.length; i++) this.levels[i] == b && (c = i);
            return 0 <= c ? this.loadLevel(c) : !1
        },
        firstLevel: function() {
            return this.loadLevel(0)
        },
        lastLevel: function() {
            return this.loadLevel(this.levels.length - 1)
        },
        reloadLevel: function() {
            return this.loadLevel(this.currentLevel)
        }
    })
});
ig.baked = !0;
ig.module("plugins.textwrapper").defines(function() {
    ig.Textwrapper = ig.Class.extend({
        textFontSize: 14,
        textFont: "Impact, Charcoal, sans-serif",
        textLineHeight: 14,
        init: function(b, c) {
            this.textSize = b;
            this.textFont = c;
            this.textLineHeight = b
        },
        wrapText: function(b, c) {
            var d = ig.system.context;
            d.font = this.textFontSize + "px " + this.textFont;
            var e = b.split(" "),
                g = "",
                l = [];
            if (1 == e.length)
                for (var r = 0; r < b.length; r++) {
                    var p = g + b[r],
                        t = d.measureText(p),
                        t = t.width;
                    t > c && 0 < r ? (l.push(g), g = b[r]) : g = p
                } else
                    for (r = 0; r < e.length; r++) p = g +
                        e[r] + " ", t = d.measureText(p), t = t.width, t > c && 0 < r ? (l.push(g), g = e[r] + " ") : g = p;
            l.push(g);
            return l
        },
        drawTextList: function(b, c, d) {
            for (var e = ig.system.context, g = 0, l = 0; l < b.length; l++) e.fillText(b[l], c + 0, d + g), g += this.textLineHeight
        }
    })
});
this.START_BRANDING_SPLASH;
ig.baked = !0;
ig.module("plugins.branding.splash").requires("impact.impact", "impact.entity").defines(function() {
    ig.BrandingSplash = ig.Class.extend({
        init: function() {
            ig.game.spawnEntity(EntityBranding, 0, 0)
        }
    });
    EntityBranding = ig.Entity.extend({
        gravityFactor: 0,
        size: {
            x: 32,
            y: 32
        },
        splash: new ig.Image("branding/splash1.png"),
        init: function(b, c, d) {
            this.parent(b, c, d);
            320 >= ig.system.width ? (this.size.x = 320, this.size.y = 200) : (this.size.x = 480, this.size.y = 240);
            this.pos.x = (ig.system.width - this.size.x) / 2;
            this.pos.y = -this.size.y - 200;
            this.endPosY = (ig.system.height - this.size.y) / 2;
            b = this.tween({
                pos: {
                    y: this.endPosY
                }
            }, 0.5, {
                easing: ig.Tween.Easing.Bounce.EaseIn
            });
            c = this.tween({}, 2.5, {
                onComplete: function() {
                    ig.game.director.loadLevel(ig.game.director.currentLevel)
                }
            });
            b.chain(c);
            b.start();
            this.currentAnim = this.anims.idle
        },
        createClickableLayer: function() {
            console.log("Build clickable layer");
            this.checkClickableLayer("branding-splash", _SETTINGS.Branding.Logo.Link, _SETTINGS.Branding.Logo.NewWindow)
        },
        doesClickableLayerExist: function(b) {
            for (k in dynamicClickableEntityDivs)
                if (k ==
                    b) return !0;
            return !1
        },
        checkClickableLayer: function(b, c, d) {
            "undefined" == typeof wm && (this.doesClickableLayerExist(b) ? (ig.game.showOverlay([b]), $("#" + b).find("[href]").attr("href", c)) : this.createClickableOutboundLayer(b, c, "media/graphics/misc/invisible.png", d))
        },
        createClickableOutboundLayer: function(b, c, d, e) {
            var g = ig.$new("div");
            g.id = b;
            document.body.appendChild(g);
            g = $("#" + g.id);
            g.css("float", "left");
            g.css("position", "absolute");
            if (ig.ua.mobile) {
                var l = window.innerHeight / mobileHeight,
                    r = window.innerWidth /
                    mobileWidth;
                g.css("left", this.pos.x * r);
                g.css("top", this.pos.y * l);
                g.css("width", this.size.x * r);
                g.css("height", this.size.y * l)
            } else l = w / 2 - destW / 2, r = h / 2 - destH / 2, console.log(l, r), g.css("left", l + this.pos.x * multiplier), g.css("top", r + this.pos.y * multiplier), g.css("width", this.size.x * multiplier), g.css("height", this.size.y * multiplier);
            e ? g.html("<a target='_blank' href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>") : g.html("<a href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>");
            dynamicClickableEntityDivs[b] = {};
            dynamicClickableEntityDivs[b].width = this.size.x * multiplier;
            dynamicClickableEntityDivs[b].height = this.size.y * multiplier;
            dynamicClickableEntityDivs[b].entity_pos_x = this.pos.x;
            dynamicClickableEntityDivs[b].entity_pos_y = this.pos.y
        },
        draw: function() {
            ig.system.context.fillStyle = "#ffffff";
            ig.system.context.fillRect(0, 0, ig.system.width, ig.system.height);
            ig.system.context.fillStyle = "#000";
            ig.system.context.font = "12px Arial";
            320 >= ig.system.width ? ig.system.context.fillText("powered by MarketJS.com",
                ig.system.width - 150, ig.system.height - 15) : ig.system.context.fillText("powered by MarketJS.com", ig.system.width - 160, ig.system.height - 15);
            this.parent();
            this.splash && ig.system.context.drawImage(this.splash.data, 0, 0, this.splash.data.width, this.splash.data.height, this.pos.x, this.pos.y, this.size.x, this.size.y)
        }
    })
});
this.END_BRANDING_SPLASH;
ig.baked = !0;
ig.module("game.entities.branding-logo-placeholder").requires("impact.entity").defines(function() {
    EntityBrandingLogoPlaceholder = ig.Entity.extend({
        gravityFactor: 0,
        size: {
            x: 32,
            y: 32
        },
        _wmDrawBox: !0,
        _wmBoxColor: "rgba(0, 0, 255, 0.7)",
        init: function(b, c, d) {
            this.parent(b, c, d);
            if (d) switch (console.log("settings found ... using that div layer name"), b = d.div_layer_name, console.log("settings.centralize:", d.centralize), d.centralize) {
                case "true":
                    console.log("centralize true");
                    centralize = !0;
                    break;
                case "false":
                    console.log("centralize false");
                    centralize = !1;
                    break;
                default:
                    console.log("default ... centralize false"), centralize = !1
            } else b = "branding-logo", centralize = !1;
            if ("undefined" == typeof wm) {
                if (_SETTINGS.Branding.Logo.Enabled) try {
                    ig.game.spawnEntity(EntityBrandingLogo, this.pos.x, this.pos.y, {
                        div_layer_name: b,
                        centralize: centralize
                    })
                } catch (e) {
                    console.log(e)
                }
                this.kill()
            }
        }
    })
});
this.START_BRANDING_LOGO;
ig.baked = !0;
ig.module("game.entities.branding-logo").requires("impact.entity").defines(function() {
    EntityBrandingLogo = ig.Entity.extend({
        gravityFactor: 0,
        logo: new ig.AnimationSheet("branding/logo.png", _SETTINGS.Branding.Logo.Width, _SETTINGS.Branding.Logo.Height),
        size: {
            x: 32,
            y: 32
        },
        zIndex: 10001,
        init: function(b, c, d) {
            this.parent(b, c, d);
            "undefined" == typeof wm && (_SETTINGS.Branding.Logo.Enabled ? (this.size.x = _SETTINGS.Branding.Logo.Width, this.size.y = _SETTINGS.Branding.Logo.Height, d && d.centralize && (this.pos.x = ig.system.width /
                2 - this.size.x / 2, console.log("centralize true ... centering branded logo ..."))) : this.kill());
            this.anims.idle = new ig.Animation(this.logo, 0, [0], !0);
            this.currentAnim = this.anims.idle;
            d ? (console.log("branding settings found ... using that div layer name"), b = d.div_layer_name) : b = "branding-logo";
            _SETTINGS.Branding.Logo.LinkEnabled && (console.log("logo link enabled"), this.checkClickableLayer(b, _SETTINGS.Branding.Logo.Link, _SETTINGS.Branding.Logo.NewWindow));
            console.log("branding logo spawed ...")
        },
        doesClickableLayerExist: function(b) {
            for (k in dynamicClickableEntityDivs)
                if (k ==
                    b) return !0;
            return !1
        },
        checkClickableLayer: function(b, c, d) {
            "undefined" == typeof wm && (this.doesClickableLayerExist(b) ? (ig.game.showOverlay([b]), $("#" + b).find("[href]").attr("href", c)) : this.createClickableOutboundLayer(b, c, "media/graphics/misc/invisible.png", d))
        },
        createClickableOutboundLayer: function(b, c, d, e) {
            var g = ig.$new("div");
            g.id = b;
            document.body.appendChild(g);
            $("#" + g.id).css("float", "left");
            $("#" + g.id).css("position", "absolute");
            if (ig.ua.mobile) {
                var l = window.innerHeight / mobileHeight,
                    r = window.innerWidth /
                    mobileWidth;
                $("#" + g.id).css("left", this.pos.x * r);
                $("#" + g.id).css("top", this.pos.y * l);
                $("#" + g.id).css("width", this.size.x * r);
                $("#" + g.id).css("height", this.size.y * l)
            } else l = w / 2 - destW / 2, r = h / 2 - destH / 2, console.log(l, r), $("#" + g.id).css("left", l + this.pos.x * multiplier), $("#" + g.id).css("top", r + this.pos.y * multiplier), $("#" + g.id).css("width", this.size.x * multiplier), $("#" + g.id).css("height", this.size.y * multiplier);
            e ? $("#" + g.id).html("<a target='_blank' href='" + c + "'><img style='width:100%;height:100%' src='" +
                d + "'></a>") : $("#" + g.id).html("<a href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>");
            dynamicClickableEntityDivs[b] = {};
            dynamicClickableEntityDivs[b].width = this.size.x * multiplier;
            dynamicClickableEntityDivs[b].height = this.size.y * multiplier;
            dynamicClickableEntityDivs[b].entity_pos_x = this.pos.x;
            dynamicClickableEntityDivs[b].entity_pos_y = this.pos.y
        }
    })
});
this.END_BRANDING_LOGO;
ig.baked = !0;
ig.module("game.entities.button-more-games").requires("impact.entity").defines(function() {
    EntityButtonMoreGames = ig.Entity.extend({
        gravityFactor: 0,
        logo: new ig.AnimationSheet("media/graphics/game/start-button.png", 203, 61),
        size: {
            x: 203,
            y: 61
        },
        zIndex: 101,
        init: function(b, c, d) {
            this.parent(b, c, d);
            "undefined" == typeof wm && (_SETTINGS.MoreGames.Enabled ? (d.div_layer_name ? (console.log("settings found ... using that div layer name"), b = d.div_layer_name) : b = "more-games", console.log("div_layer_name:", b), this.checkClickableLayer(b,
                _SETTINGS.MoreGames.Link, _SETTINGS.MoreGames.NewWindow)) : this.kill());
            this.anims.idle = new ig.Animation(this.logo, 0, [0], !0);
            this.currentAnim = this.anims.idle
        },
        doesClickableLayerExist: function(b) {
            for (k in dynamicClickableEntityDivs)
                if (k == b) return console.log("clickable layer already exists ..."), !0;
            console.log("doesnt exist yet ...");
            return !1
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = " 30px dimitri";
            this.context.fillText(_STRINGS.Game.moreGames, this.pos.x + this.size.x / 2, this.pos.y + this.size.y / 2 + 10)
        },
        checkClickableLayer: function(b, c, d) {
            "undefined" == typeof wm && (this.doesClickableLayerExist(b) ? (ig.game.showOverlay([b]), $("#" + b).find("[href]").attr("href", c)) : this.createClickableOutboundLayer(b, c, "media/graphics/misc/invisible.png", d))
        },
        createClickableOutboundLayer: function(b, c, d, e) {
            var g = ig.$new("div");
            g.id = b;
            document.body.appendChild(g);
            $("#" + g.id).css("float", "left");
            $("#" + g.id).css("position",
                "absolute");
            if (ig.ua.mobile) {
                var l = window.innerHeight / mobileHeight,
                    r = window.innerWidth / mobileWidth;
                $("#" + g.id).css("left", this.pos.x * r);
                $("#" + g.id).css("top", this.pos.y * l);
                $("#" + g.id).css("width", this.size.x * r);
                $("#" + g.id).css("height", this.size.y * l)
            } else l = document.getElementById("game").offsetLeft, r = document.getElementById("game").offsetTop, $("#" + g.id).css("left", l + this.pos.x * multiplier), $("#" + g.id).css("top", r + this.pos.y * multiplier), $("#" + g.id).css("width", this.size.x * multiplier), $("#" + g.id).css("height",
                this.size.y * multiplier);
            e ? $("#" + g.id).html("<a target='_blank' href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>") : $("#" + g.id).html("<a href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>");
            dynamicClickableEntityDivs[b] = {};
            dynamicClickableEntityDivs[b].width = this.size.x * multiplier;
            dynamicClickableEntityDivs[b].height = this.size.y * multiplier;
            dynamicClickableEntityDivs[b].entity_pos_x = this.pos.x;
            dynamicClickableEntityDivs[b].entity_pos_y = this.pos.y
        }
    })
});
ig.baked = !0;
ig.module("game.entities.opening-shield").requires("impact.entity").defines(function() {
    EntityOpeningShield = ig.Entity.extend({
        size: {
            x: 48,
            y: 48
        },
        move: 0,
        mIconAnim: 0,
        shieldAnim: 0,
        titleAnim: 0,
        shieldImage: new ig.Image("media/graphics/opening/shield.png"),
        mIconImage: new ig.Image("media/graphics/opening/m_icon.png"),
        titleImage: new ig.Image("media/graphics/opening/title.png"),
        init: function(b, c, d) {
            this.parent(b, c, d)
        },
        ready: function() {
            if (!ig.wm)
                if (_SETTINGS.DeveloperBranding.Splash.Enabled) {
                    this.initTimer = new ig.Timer(0.1);
                    try {
                        ig.soundHandler.playSound(ig.soundHandler.SOUNDID.openingSound)
                    } catch (b) {
                        console.log(b)
                    }
                } else ig.game.director.nextLevel(), ig.system.context.globalAlpha = 1, this.kill()
        },
        update: function() {
            this.parent();
            this.updateOriginalShieldOpening()
        },
        draw: function() {
            this.parent();
            ig.global.wm || (this.nextLevelTimer && 0 > this.nextLevelTimer.delta() && (ig.system.context.globalAlpha = -this.nextLevelTimer.delta()), this.drawOriginalShieldOpening())
        },
        updateOriginalShieldOpening: function() {
            this.initTimer && 0 < this.initTimer.delta() &&
                (this.initTimer = null, this.sheildTimer = new ig.Timer(0.05));
            this.sheildTimer && 0 < this.sheildTimer.delta() && (3 > this.shieldAnim ? (this.shieldAnim++, this.sheildTimer.reset()) : (this.sheildTimer = null, this.moveTimer = new ig.Timer(0.0010), this.mIconTimer = new ig.Timer(0.05), this.titleTimer = new ig.Timer(0.15)));
            this.moveTimer && 0 < this.moveTimer.delta() && (this.move += 0.3, this.moveTimer.reset());
            this.mIconTimer && 0 < this.mIconTimer.delta() && (12 > this.mIconAnim ? (this.mIconAnim++, this.moveTimer.reset()) : this.mIconTimer =
                null);
            this.titleTimer && 0 < this.titleTimer.delta() && (11 > this.titleAnim ? (this.titleAnim++, this.titleTimer.reset()) : (this.titleTimer = null, this.nextLevelTimer = new ig.Timer(1)));
            this.nextLevelTimer && 0 < this.nextLevelTimer.delta() && (this.nextLevelTimer = null, ig.game.director.nextLevel(), ig.system.context.globalAlpha = 1)
        },
        drawOriginalShieldOpening: function() {
            if (this.moveTimer) {
                var b = ig.system.context;
                b.save();
                var c = ig.system.width / 2,
                    d = ig.system.height / 2;
                b.translate(c, d);
                b.rotate(this.move * Math.PI / 180);
                b.beginPath();
                b.moveTo(0, 0);
                for (var e = 0, g = 1; 48 >= g; g += 1) b.lineTo(0 + 800 * Math.cos(2 * g * Math.PI / 48), 0 + 800 * Math.sin(2 * g * Math.PI / 48)), e++, 2 == e && (e = 0, b.lineTo(0, 0));
                b.translate(-c, -d);
                c = b.createRadialGradient(c, d, 100, c, d, 250);
                c.addColorStop(0, "rgba(255,255,255,0.1)");
                c.addColorStop(1, "rgba(0,0,0,0)");
                b.fillStyle = c;
                b.fill();
                b.restore()
            }
            this.shieldImage.drawTile(ig.system.width / 2 - 91, 0 - (768 - ig.system.height) / 2, this.shieldAnim, 182, 768);
            this.moveTimer && (this.mIconImage.drawTile(ig.system.width / 2 - 96, ig.system.height / 2 - 70, this.mIconAnim,
                166, 160), this.titleImage.drawTile(ig.system.width / 2 - 204, ig.system.height / 2 + 100, this.titleAnim, 409, 76));
            ig.system.context.globalAlpha = 1
        }
    })
});
ig.baked = !0;
ig.module("game.entities.opening-kitty").requires("impact.entity").defines(function() {
    EntityOpeningKitty = ig.Entity.extend({
        size: {
            x: 48,
            y: 48
        },
        kittyAnim: -1,
        kittyImage: new ig.Image("media/graphics/opening/kitty.png"),
        kittyTitleImage: new ig.Image("media/graphics/opening/kittytitle.png"),
        init: function(b, c, d) {
            this.parent(b, c, d)
        },
        ready: function() {
            if (!ig.wm)
                if (_SETTINGS.DeveloperBranding.Splash.Enabled) {
                    this.initTimer = new ig.Timer(0.1);
                    try {
                        ig.soundHandler.playSound(ig.soundHandler.SOUNDID.kittyopeningSound)
                    } catch (b) {
                        console.log(b)
                    }
                } else ig.game.director.nextLevel(),
                    ig.system.context.globalAlpha = 1, this.kill()
        },
        update: function() {
            this.parent();
            this.updateKittyOpening()
        },
        draw: function() {
            this.parent();
            ig.global.wm || (this.nextLevelTimer && 0 > this.nextLevelTimer.delta() && (ig.system.context.globalAlpha = -this.nextLevelTimer.delta()), this.drawKittyOpening())
        },
        updateKittyOpening: function() {
            this.initTimer && 0 < this.initTimer.delta() && (this.initTimer = null, this.kittyTimer = new ig.Timer(0.15));
            this.kittyTimer && 0 < this.kittyTimer.delta() && (7 > this.kittyAnim ? (this.kittyAnim++, this.kittyTimer.reset()) :
                (this.kittyTimer = null, this.nextLevelTimer = new ig.Timer(2)));
            this.nextLevelTimer && 0 < this.nextLevelTimer.delta() && (this.nextLevelTimer = null, ig.game.director.nextLevel(), ig.system.context.globalAlpha = 0)
        },
        drawKittyOpening: function() {
            var b = ig.system.context.createLinearGradient(0, 0, 0, ig.system.height);
            b.addColorStop(0, "#ffed94");
            b.addColorStop(1, "#ffcd85");
            ig.system.context.fillStyle = b;
            ig.system.context.fillRect(0, 0, ig.system.width, ig.system.height);
            0 <= this.kittyAnim && (this.kittyImage.drawTile(ig.system.width /
                2 - this.kittyImage.width / 8, ig.system.height / 2 - this.kittyImage.height / 4, this.kittyAnim, 218, 325), this.kittyTitleImage.drawTile(ig.system.width / 2 - this.kittyTitleImage.width / 2, ig.system.height / 2 + this.kittyImage.height / 4 + 10, this.kittyAnim, 380, 37));
            ig.system.context.globalAlpha = 1
        }
    })
});
ig.baked = !0;
ig.module("game.entities.pointer").requires("impact.entity").defines(function() {
    EntityPointer = ig.Entity.extend({
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        isClicking: !1,
        isHovering: !1,
        firstClick: !1,
        isReleased: !1,
        hoveringItem: null,
        objectArray: [],
        ignorePause: !0,
        zIndex: 1E4,
        check: function(b) {
            this.objectArray.push(b)
        },
        clickObject: function(b) {
            this.isClicking && !this.firstClick && "function" == typeof b.clicked && (b.clicked(), this.firstClick = !0);
            this.firstClick && !this.isReleased && "function" == typeof b.clicking &&
                b.clicking();
            this.firstClick && this.isReleased && "function" == typeof b.released && (b.released(), this.firstClick = !1)
        },
        update: function() {
            if (ig.ua.mobile) {
                var b = window.innerHeight / mobileHeight;
                this.pos.x = ig.input.mouse.x / (window.innerWidth / mobileWidth) - this.size.x / 2 + ig.game.screen.x;
                this.pos.y = ig.input.mouse.y / b - this.size.y / 2
            } else this.pos.x = ig.input.mouse.x - this.size.x / 2, this.pos.y = ig.input.mouse.y - this.size.y / 2;
            var b = null,
                c = -1;
            for (a = this.objectArray.length - 1; - 1 < a; a--) this.objectArray[a].zIndex > c && (c = this.objectArray[a].zIndex,
                b = this.objectArray[a]);
            null != b ? ("close" == b.name && console.log(b), null != this.hoveringItem && "function" == typeof this.hoveringItem.idle && this.hoveringItem != b && this.hoveringItem.idle(), this.hoveringItem = b, this.clickObject(b), this.objectArray = []) : null != this.hoveringItem && "function" == typeof this.hoveringItem.idle && (this.hoveringItem.idle(), this.hoveringItem = null);
            this.isClicking = ig.input.pressed("click");
            this.isReleased = ig.input.released("click")
        }
    })
});
ig.baked = !0;
ig.module("game.entities.pointer-selector").requires("game.entities.pointer").defines(function() {
    EntityPointerSelector = EntityPointer.extend({
        zIndex: 1E4,
        _wmDrawBox: !0,
        _wmBoxColor: "rgba(0, 0, 255, 0.7)",
        size: {
            x: 20,
            y: 20
        },
        init: function(b, c, d) {
            this.parent(b, c, d)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.select").requires("impact.entity").defines(function() {
    EntitySelect = ig.Entity.extend({
        type: ig.Entity.TYPE.B,
        checkAgainst: ig.Entity.TYPE.A,
        collides: ig.Entity.COLLIDES.NEVER,
        canSelect: !1,
        canSelectTimerDuration: 0.35,
        zIndex: 99999,
        isHovering: !1,
        isSelected: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.canSelectTimer = new ig.Timer(this.canSelectTimerDuration)
        },
        doesClickableLayerExist: function(b) {
            for (k in dynamicClickableEntityDivs)
                if (k == b) return !0;
            return !1
        },
        checkClickableLayer: function(b,
            c, d) {
            "undefined" == typeof wm && (this.doesClickableLayerExist(b) ? (ig.game.showOverlay([b]), $("#" + b).find("[href]").attr("href", c)) : this.createClickableOutboundLayer(b, c, "media/graphics/misc/invisible.png", d))
        },
        createClickableOutboundLayer: function(b, c, d, e) {
            var g = ig.$new("div");
            g.id = b;
            document.body.appendChild(g);
            $("#" + g.id).css("float", "left");
            $("#" + g.id).css("width", this.size.x * multiplier);
            $("#" + g.id).css("height", this.size.y * multiplier);
            $("#" + g.id).css("position", "absolute");
            var l = w / 2 - destW / 2,
                r = h /
                2 - destH / 2;
            w == mobileWidth ? ($("#" + g.id).css("left", this.pos.x), $("#" + g.id).css("top", this.pos.y)) : ($("#" + g.id).css("left", l + this.pos.x * multiplier), $("#" + g.id).css("top", r + this.pos.y * multiplier));
            e ? $("#" + g.id).html("<a target='_blank' href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>") : $("#" + g.id).html("<a href='" + c + "'><img style='width:100%;height:100%' src='" + d + "'></a>");
            dynamicClickableEntityDivs[b] = {};
            dynamicClickableEntityDivs[b].width = $("#" + g.id).width();
            dynamicClickableEntityDivs[b].height =
                $("#" + g.id).height();
            dynamicClickableEntityDivs[b].entity_pos_x = this.pos.x;
            dynamicClickableEntityDivs[b].entity_pos_y = this.pos.y
        },
        hovered: function() {
            this.isHovering = !0;
            this.dehoverOthers()
        },
        dehoverOthers: function() {
            var b = ig.game.getEntitiesByType(EntitySelect);
            for (i = 0; i < b.length; i++) b[i] != this && (b[i].isHovering = !1)
        },
        deselectOthers: function() {
            var b = ig.game.getEntitiesByType(EntitySelect);
            for (i = 0; i < b.length; i++) b[i] != this && (b[i].isSelected = !1)
        },
        update: function() {
            this.parent();
            this.canSelectTimer && 0 <
                this.canSelectTimer.delta() && (this.canSelect = !0, this.canSelectTimer = null)
        }
    })
});
ig.baked = !0;
ig.module("game.levels.opening").requires("impact.image", "game.entities.opening-kitty").defines(function() {
    LevelOpening = {
        entities: [{
            type: "EntityOpeningKitty",
            x: 0,
            y: 0
        }],
        layer: []
    }
});
ig.baked = !0;
ig.module("game.entities.level-button").requires("impact.entity").defines(function() {
    EntityLevelButton = ig.Entity.extend({
        size: {
            x: 58,
            y: 58
        },
        zIndex: 120,
        level: 0,
        type: ig.Entity.TYPE.B,
        pBox: null,
        posRange: 0,
        posRangeY: 0,
        unlocked: !1,
        smallButton: new ig.Image("media/graphics/game/small-button.png"),
        init: function(b, c, d) {
            this.parent(b, c, d);
            switch (this.level) {
                case 1:
                    this.unlocked = ig.game.levelsUnlocked[0];
                    break;
                case 2:
                    this.unlocked = ig.game.levelsUnlocked[1];
                    break;
                case 3:
                    this.unlocked = ig.game.levelsUnlocked[2];
                    break;
                case 4:
                    this.unlocked = ig.game.levelsUnlocked[3];
                    break;
                case 5:
                    this.unlocked = ig.game.levelsUnlocked[4];
                    break;
                case 6:
                    this.unlocked = ig.game.levelsUnlocked[5];
                    break;
                case 7:
                    this.unlocked = ig.game.levelsUnlocked[6];
                    break;
                case 8:
                    this.unlocked = ig.game.levelsUnlocked[7];
                    break;
                case 9:
                    this.unlocked = ig.game.levelsUnlocked[8];
                    break;
                case 10:
                    this.unlocked = ig.game.levelsUnlocked[9];
                    break;
                case 11:
                    this.unlocked = ig.game.levelsUnlocked[10];
                    break;
                case 12:
                    this.unlocked = ig.game.levelsUnlocked[11];
                    break;
                case 13:
                    this.unlocked =
                        ig.game.levelsUnlocked[12];
                    break;
                case 14:
                    this.unlocked = ig.game.levelsUnlocked[13];
                    break;
                case 15:
                    this.unlocked = ig.game.levelsUnlocked[14]
            }
        },
        update: function() {
            this.parent();
            this.pos.x = this.posRange + this.pBox.pos.x - 10;
            this.pos.y = this.posRangeY + this.pBox.pos.y
        },
        draw: function() {
            this.parent();
            this.ctx = ig.system.context;
            this.unlocked || (this.ctx.globalAlpha = 0.4);
            this.ctx.drawImage(this.smallButton.data, this.pos.x, this.pos.y, 58, 58);
            this.ctx.fillStyle = "#ffffff";
            this.ctx.textAlign = "center";
            this.ctx.font = "28px dimitri";
            this.ctx.fillText(this.level, this.pos.x + 28, this.pos.y + 38);
            this.ctx.globalAlpha = 1
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            ig.game.repeatMonologue = !1;
            switch (this.level) {
                case 1:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test, ig.game.levelCount = 1, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 2:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test2, ig.game.levelCount = 2, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 3:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test3, ig.game.levelCount = 3, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 4:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test4, ig.game.levelCount = 4, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 5:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test5, ig.game.levelCount = 5, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 6:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test6, ig.game.levelCount = 6, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 7:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test7, ig.game.levelCount = 7, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 8:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test8, ig.game.levelCount = 8, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 9:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test9, ig.game.levelCount = 9, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 10:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test10, ig.game.levelCount = 10, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 11:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test11, ig.game.levelCount = 11, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 12:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test12, ig.game.levelCount = 12, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 13:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test13, ig.game.levelCount = 13, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 14:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test14, ig.game.levelCount = 14, ig.game.director.jumpTo(LevelTransition));
                    break;
                case 15:
                    this.unlocked && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button), ig.game.mapLevel = test15, ig.game.levelCount = 15, ig.game.director.jumpTo(LevelTransition))
            }
        }
    })
});
ig.baked = !0;
ig.module("game.entities.level-selector").requires("impact.entity", "game.entities.level-button").defines(function() {
    EntityLevelSelector = ig.Entity.extend({
        size: {
            x: 500,
            y: 340
        },
        zIndex: 110,
        type: ig.Entity.TYPE.B,
        boxImage: new ig.Image("media/graphics/game/dialogbox.png"),
        init: function(b, c, d) {
            this.parent(b, c, d);
            null == ig.game.levelsUnlocked && (ig.game.levelsUnlocked = [!0, !1, !1, !1, !1, !1, !1, !1, !1, !1, !1, !1, !1, !1, !1]);
            this.tween({
                pos: {
                    x: 70,
                    y: 70
                }
            }, 0.5, {
                easing: ig.Tween.Easing.Cubic.EaseOut
            }).start();
            this.levelButton1 =
                ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                    level: 1,
                    posRange: 50,
                    posRangeY: 85,
                    pBox: this
                });
            this.levelButton2 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 2,
                posRange: 140,
                posRangeY: 85,
                pBox: this
            });
            this.levelButton3 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 3,
                posRange: 230,
                posRangeY: 85,
                pBox: this
            });
            this.levelButton4 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 4,
                posRange: 320,
                posRangeY: 85,
                pBox: this
            });
            this.levelButton5 =
                ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                    level: 5,
                    posRange: 410,
                    posRangeY: 85,
                    pBox: this
                });
            this.levelButton6 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 6,
                posRange: 50,
                posRangeY: 155,
                pBox: this
            });
            this.levelButton7 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 7,
                posRange: 140,
                posRangeY: 155,
                pBox: this
            });
            this.levelButton8 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 8,
                posRange: 230,
                posRangeY: 155,
                pBox: this
            });
            this.levelButton9 =
                ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                    level: 9,
                    posRange: 320,
                    posRangeY: 155,
                    pBox: this
                });
            this.levelButton10 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 10,
                posRange: 410,
                posRangeY: 155,
                pBox: this
            });
            this.levelButton11 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 11,
                posRange: 50,
                posRangeY: 225,
                pBox: this
            });
            this.levelButton12 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 12,
                posRange: 140,
                posRangeY: 225,
                pBox: this
            });
            this.levelButton13 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 13,
                posRange: 230,
                posRangeY: 225,
                pBox: this
            });
            this.levelButton14 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 14,
                posRange: 320,
                posRangeY: 225,
                pBox: this
            });
            this.levelButton15 = ig.game.spawnEntity(EntityLevelButton, this.pos.x, this.pos.y + 50, {
                level: 15,
                posRange: 410,
                posRangeY: 225,
                pBox: this
            })
        },
        update: function() {
            this.parent();
            ig.game.sortEntitiesDeferred()
        },
        draw: function() {
            this.parent();
            this.ctx = ig.system.context;
            this.ctx.drawImage(this.boxImage.data, this.pos.x, this.pos.y, 500, 340);
            this.ctx.fillStyle = "#ffffff";
            this.ctx.textAlign = "center";
            this.ctx.font = "50px dimitri";
            this.ctx.fillText(_STRINGS.Game.selectLevel, this.pos.x + this.size.x / 2, this.pos.y + 60)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.start-button").requires("impact.entity").defines(function() {
    EntityStartButton = ig.Entity.extend({
        size: {
            x: 203,
            y: 61
        },
        zIndex: 105,
        type: ig.Entity.TYPE.B,
        buttonImage: new ig.Image("media/graphics/game/start-button.png"),
        init: function(b, c, d) {
            this.parent(b, c, d)
        },
        update: function() {
            this.parent()
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.drawImage(this.buttonImage.data, this.pos.x, this.pos.y);
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = " 30px dimitri";
            this.context.fillText(_STRINGS.Game.startbutton, this.pos.x + this.size.x / 2, this.pos.y + this.size.y / 2 + 10)
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            this.levelSelector || (ig.game.hideOverlay(["more-games"]), this.levelSelector = ig.game.spawnEntity(EntityLevelSelector, 700, 70), ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button))
        }
    })
});
ig.baked = !0;
ig.module("game.entities.button-sound").requires("impact.entity").defines(function() {
    EntityButtonSound = ig.Entity.extend({
        size: {
            x: 51,
            y: 41
        },
        zIndex: 5E3,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/button-sound.png", 51, 41),
        anIsoEntity: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("on", 1, [0]);
            this.addAnim("off", 1, [1]);
            this.currentAnim = ig.soundHandler.soundStatus ? this.anims.on : this.anims.off
        },
        update: function() {
            this.parent()
        },
        draw: function() {
            this.parent()
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            ig.soundHandler.soundStatus ? (ig.soundHandler.soundStatus = !1, this.currentAnim = this.anims.off, ig.soundHandler.mute()) : (ig.soundHandler.soundStatus = !0, this.currentAnim = this.anims.on, ig.soundHandler.unmute())
        }
    })
});
ig.baked = !0;
ig.module("game.entities.main-menu").requires("impact.entity", "game.entities.level-selector", "game.entities.start-button", "game.entities.button-sound").defines(function() {
    EntityMainMenu = ig.Entity.extend({
        size: {
            x: 640,
            y: 480
        },
        zIndex: 100,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/menu-frame.png", 640, 480),
        ss1: new ig.Image("media/graphics/game/ss1.png"),
        ss2: new ig.Image("media/graphics/game/ss2.png"),
        ss3: new ig.Image("media/graphics/game/ss3.png"),
        title: new ig.Image("media/graphics/game/title.png"),
        ss1Tween: 40,
        ss2Tween: 160,
        ss3Tween: 90,
        titleTween: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.pointer = ig.game.spawnEntity(EntityPointer, 0, 0);
            this.startButton = ig.game.spawnEntity(EntityStartButton, 218.5, 250);
            _SETTINGS.MoreGames.Enabled && ig.game.spawnEntity(EntityButtonMoreGames, 218.5, 325);
            null == ig.soundHandler.soundStatus && (ig.soundHandler.soundStatus = !0);
            ig.game.spawnEntity(EntityButtonSound, 550, 20);
            this.tween({
                ss1Tween: 0
            }, 10, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            this.tween({
                ss2Tween: 0
            }, 16, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            this.tween({
                ss3Tween: 0
            }, 12, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            this.tween({
                titleTween: 30
            }, 5, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            ig.game.showOverlay(["more-games"])
        },
        update: function() {
            this.parent();
            0 >= this.ss1Tween ? this.tween({
                ss1Tween: 40
            }, 10, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start() : 40 <= this.ss1Tween && this.tween({
                ss1Tween: 0
            }, 10, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            0 >= this.ss2Tween ?
                this.tween({
                    ss2Tween: 160
                }, 16, {
                    easing: ig.Tween.Easing.Cubic.EaseInOut
                }).start() : 160 <= this.ss2Tween && this.tween({
                    ss2Tween: 0
                }, 16, {
                    easing: ig.Tween.Easing.Cubic.EaseInOut
                }).start();
            0 >= this.ss3Tween ? this.tween({
                ss3Tween: 90
            }, 12, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start() : 90 <= this.ss3Tween && this.tween({
                ss3Tween: 0
            }, 12, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start();
            0 >= this.titleTween ? this.tween({
                titleTween: 30
            }, 5, {
                easing: ig.Tween.Easing.Cubic.EaseInOut
            }).start() : 30 <= this.titleTween && this.tween({
                    titleTween: 0
                },
                5, {
                    easing: ig.Tween.Easing.Cubic.EaseInOut
                }).start()
        },
        draw: function() {
            this.context = ig.system.context;
            this.context.drawImage(this.ss3.data, 0 - this.ss1Tween, 280);
            this.context.drawImage(this.ss2.data, 0 - this.ss2Tween, 15);
            this.context.drawImage(this.ss1.data, 0 - this.ss3Tween, -45);
            this.parent();
            this.context.drawImage(this.title.data, 0, 0 + this.titleTween)
        }
    })
});
ig.baked = !0;
ig.module("game.levels.menu").requires("impact.image", "game.entities.main-menu").defines(function() {
    LevelMenu = {
        entities: [{
            type: "EntityMainMenu",
            x: 0,
            y: 0
        }],
        layer: []
    }
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.data.vector").defines(function() {
    Vector = ig.Class.extend({
        x: null,
        y: null,
        valType: "number",
        init: function(b, c) {
            this.x = b;
            this.y = c
        },
        row: function(b) {
            "number" === typeof b ? this.y = b : "string" === typeof b && (b = parseInt(b), isNaN(b) || (this.y = b));
            return this.y
        },
        col: function(b) {
            "number" === typeof b ? this.x = b : "string" === typeof b && (b = parseInt(b), isNaN(b) || (this.x = b));
            return this.x
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.data.tile").requires("plugins.iso-engine.components.data.vector").defines(function() {
    Tile = ig.Class.extend({
        gridPos: null,
        gridSize: null,
        terrain: null,
        valType: "number",
        overrideBlock: null,
        isInteract: !1,
        consoleID: null,
        activated: !1,
        init: function(b, c, d) {
            this.gridPos = new Vector(c, b);
            this.gridSize = new Vector(1, 1);
            this.setTerrain(d)
        },
        setTerrain: function(b) {
            this.terrain = b
        },
        isBlocked: function() {
            return this.terrain.isBlock() ? this.overrideBlock ? !1 : !0 : this.overrideBlock ? !0 :
                !1
        },
        canInteract: function() {
            return this.isInteract ? !0 : !1
        },
        getConsoleID: function() {
            return this.consoleID
        },
        activateConsole: function() {
            this.activated = this.activated ? !1 : !0
        },
        row: function(b) {
            return this.gridPos.row(b)
        },
        col: function(b) {
            return this.gridPos.col(b)
        },
        draw: function(b, c, d) {
            this.terrain && this.terrain.draw(b, c, d)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.data.terrain").defines(function() {
    Terrain = ig.Class.extend({
        type: "none",
        imgPath: null,
        terrainImage: null,
        source: {
            x: 0,
            y: 0,
            w: 0,
            h: 0
        },
        imageTileSize: {
            w: 64,
            h: 32
        },
        blockTerrain: !1,
        layerName: null,
        init: function(b, c, d, e, g, l, r, p) {
            c && (this.imgPath = c, this.terrainImage = new ig.Image(c));
            d && (this.source.x = d);
            e && (this.source.y = e);
            g && (this.source.w = g);
            l && (this.source.h = l);
            r && (this.blockTerrain = r);
            p && (this.layerName = p);
            this.type = b
        },
        isBlock: function() {
            return this.blockTerrain
        },
        draw: function(b,
            c, d) {
            this.terrainImage ? b.drawImage(this.terrainImage.data, this.source.x, this.source.y, this.source.w, this.source.h, c, d, ig.game.tileMath.tileSize.w, ig.game.tileMath.tileSize.h) : ig.game.drawer.drawTileHighLight(b, _COLORS.whiteAlpha25, c, d)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.data.file").defines(function() {
    File = ig.Class.extend({
        name: "",
        path: "",
        init: function(b) {
            this.setFile(b)
        },
        setFile: function(b) {
            this.path = b;
            this.name = b.replace(/^.*\//, "")
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.datastructures.iso-map").requires("plugins.iso-engine.components.data.tile", "plugins.iso-engine.components.data.terrain", "plugins.iso-engine.components.data.file").defines(function() {
    IsoMap = ig.Class.extend({
        tiles: [
            [],
            []
        ],
        startPos: new Vector(0, 0),
        maxSize: new Vector(0, 0),
        layers: [],
        terrainTypes: [],
        file: null,
        init: function() {},
        initFile: function(b) {
            "undefined" !== typeof b && (this.file = new File(b))
        },
        getLayerName: function(b) {
            for (index = 0; index < this.layers.length; index++)
                if (this.layers[index].tilesetName ==
                    b) return this.layers[index].name
        },
        getLayerTilesetName: function(b) {
            for (index = 0; index < this.layers.length; index++)
                if (this.layers[index].name == b) return this.layers[index].tilesetName
        },
        getNumberOfMapRows: function() {
            return this.tiles.length
        },
        getNumberOfMapCols: function() {
            return this.tiles[0].length
        },
        getTile: function(b, c) {
            return this.tiles[b] && this.tiles[b][c] ? this.tiles[b][c] : null
        },
        setTerrain: function(b, c, d) {
            this.getTile(b, c) && (d ? d != this.getTile(b, c).terrain && this.getTile(b, c).setTerrain(d) : (console.log("none"),
                this.getTile(b, c).setTerrain(new Terrain("none"))))
        },
        setMapSize: function(b, c) {
            this.maxSize.row(b);
            this.maxSize.col(c);
            var d = [];
            for (b = 0; b < this.maxSize.row(); b++) {
                d.push([]);
                for (c = 0; c < this.maxSize.col(); c++) this.tiles[b] && this.tiles[b][c] ? d[b].push(this.tiles[b][c]) : d[b].push(new Tile(b, c, new Terrain("none")))
            }
            this.tiles = [];
            for (b = 0; b < this.maxSize.row(); b++) {
                this.tiles.push([]);
                for (c = 0; c < this.maxSize.col(); c++) d[b] && d[b][c] ? this.tiles[b].push(d[b][c]) : this.tiles[b].push(new Tile(b, c, new Terrain("none")))
            }
            ig.game.isoWm ||
                (ig.system.offcanvas.width = 32 * (this.maxSize.col() + this.maxSize.row() + 9), ig.system.offcanvas.height = 16 * (this.maxSize.row() + this.maxSize.row() + 8))
        },
        updateBlockTerrain: function(b, c, d) {
            for (row = 0; row < this.maxSize.row(); row++)
                for (col = 0; col < this.maxSize.col(); col++)
                    if (this.tiles[row] && this.tiles[row][col] && this.tiles[row][col].terrain.layerName == d)
                        for (var e = 0; e < b.length; e++)
                            if (this.tiles[row][col].terrain.type == b[e]) {
                                console.log(this.tiles[row][col].terrain.type + "," + b[e]);
                                this.tiles[row][col].terrain.blockTerrain =
                                    c[e];
                                break
                            }
        },
        updateTerrainName: function(b, c, d, e) {
            for (row = 0; row < this.maxSize.row(); row++)
                for (col = 0; col < this.maxSize.col(); col++)
                    if (this.tiles[row] && this.tiles[row][col] && this.tiles[row][col].terrain.layerName == b) {
                        this.tiles[row][col].terrain.layerName = c;
                        for (var g = 0; g < d.length; g++)
                            if (this.tiles[row][col].terrain.type == d[g]) {
                                this.tiles[row][col].terrain.type = e[g];
                                break
                            }
                    }
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.renderers.drawer").defines(function() {
    Drawer = ig.Class.extend({
        init: function() {},
        optionsAvailable: function(b) {
            return "undefined" !== typeof b ? !0 : !1
        },
        drawRect: function(b, c, d, e, g, l) {
            "undefined" !== typeof l && l.color && (b.fillStyle = l.color);
            b.fillRect(c, d, e, g)
        },
        drawImage: function(b, c, d, e, g, l, r) {
            "undefined" !== typeof r ? b.drawImage(c, r.sx, r.sy, r.sw, r.sh, d, e, g, l) : b.drawImage(c, d, e, g, l)
        },
        clear: function(b) {
            b.clearRect(0, 0, ig.system.realWidth, ig.system.realHeight)
        },
        drawOverlay: function(b,
            c) {
            "undefined" !== typeof c && c.color && (b.fillStyle = c.color);
            this.drawRect(b, 0, 0, ig.system.realWidth, ig.system.realHeight, color)
        },
        drawText: function(b, c, d, e, g) {
            "undefined" !== typeof g && (g.font && (b.font = g.font), g.color && (b.fillStyle = g.color));
            b.fillText(c, d, e)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.renderers.iso-drawer").requires("plugins.iso-engine.components.renderers.drawer").defines(function() {
    IsoDrawer = Drawer.extend({
        boxHeight: 10,
        init: function() {
            this.parent()
        },
        drawTerrain: function(b, c, d, e) {
            b.drawImage(c.terrainImage.data, c.source.x, c.source.y, c.source.w, c.source.h, d, e, ig.game.tileMath.tileSize.w, ig.game.tileMath.tileSize.h)
        },
        drawLines: function(b, c, d) {
            if (0 < c.length) {
                b.beginPath();
                b.moveTo(c[0].x, c[0].y);
                for (var e = 1; e < c.length; e++) b.lineTo(c[e].x,
                    c[e].y);
                this.optionsAvailable(d) && (d.close && b.closePath(), d.color && (b.strokeStyle = d.color));
                b.stroke()
            }
        },
        fillLines: function(b, c, d) {
            if (0 < c.length) {
                b.beginPath();
                b.moveTo(c[0].x, c[0].y);
                for (var e = 1; e < c.length; e++) b.lineTo(c[e].x, c[e].y);
                this.optionsAvailable(d) && (d.close && b.closePath(), d.color && (b.strokeStyle = d.color));
                b.fill()
            }
        },
        drawTileHighLight: function(b, c, d, e) {
            var g = b.fillStyle;
            b.beginPath();
            b.moveTo(d + ig.game.tileMath.tileSize.wHalf, e);
            b.lineTo(d + ig.game.tileMath.tileSize.w, e + ig.game.tileMath.tileSize.h -
                ig.game.tileMath.tileSize.hHalf);
            b.lineTo(d + ig.game.tileMath.tileSize.wHalf, e + ig.game.tileMath.tileSize.h);
            b.lineTo(d, e + ig.game.tileMath.tileSize.h - ig.game.tileMath.tileSize.hHalf);
            b.closePath();
            b.fillStyle = c;
            b.fill();
            b.fillStyle = g
        },
        drawTileLineHighLight: function(b, c, d, e) {
            var g = b.strokeStyle;
            b.beginPath();
            b.moveTo(d + ig.game.tileMath.tileSize.wHalf, e);
            b.lineTo(d + ig.game.tileMath.tileSize.w, e + ig.game.tileMath.tileSize.h - ig.game.tileMath.tileSize.hHalf);
            b.lineTo(d + ig.game.tileMath.tileSize.wHalf, e + ig.game.tileMath.tileSize.h);
            b.lineTo(d, e + ig.game.tileMath.tileSize.h - ig.game.tileMath.tileSize.hHalf);
            b.closePath();
            b.strokeStyle = c;
            b.stroke();
            b.strokeStyle = g
        },
        drawTileBox: function(b, c, d, e) {
            var g = ig.game.tileMath.getTopPoint(c.row() - d, c.col());
            d = ig.game.tileMath.getRightPoint(c.row() - d, c.col() + e);
            e = ig.game.tileMath.getBottomPoint(c.row(), c.col() + e);
            c = ig.game.tileMath.getLeftPoint(c.row(), c.col());
            this.drawLines(b, [{
                x: c.x,
                y: c.y
            }, {
                x: g.x,
                y: g.y
            }, {
                x: d.x,
                y: d.y
            }, {
                x: e.x,
                y: e.y
            }, {
                x: c.x,
                y: c.y
            }], {
                color: _COLORS.turq,
                close: !0
            })
        },
        drawTileGrid: function(b,
            c, d) {
            var e = ig.game.tileMath.getTopPoint(0, 0),
                g = ig.game.tileMath.getRightPoint(0, d.getNumberOfMapCols() - 1),
                l = ig.game.tileMath.getBottomPoint(d.getNumberOfMapRows() - 1, d.getNumberOfMapCols() - 1);
            this.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }, {
                x: l.x,
                y: l.y
            }], {
                color: c,
                close: !1
            });
            for (row = 0; row < d.getNumberOfMapRows(); row++) e = d.getTile(row, 0), g = d.getTile(row, d.getNumberOfMapCols() - 1), e && (e = ig.game.tileMath.getLeftPoint(e.row, e.col), g && (g = ig.game.tileMath.getBottomPoint(g.row, g.col), this.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }], {
                color: c,
                close: !0
            })));
            for (col = 0; col < d.getNumberOfMapCols(); col++) e = d.getTile(0, col), g = d.getTile(d.getNumberOfMapRows() - 1, col), e = ig.game.tileMath.getTopPoint(e.row, e.col), g = ig.game.tileMath.getLeftPoint(g.row, g.col), this.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }], {
                color: c,
                close: !0
            })
        },
        drawTiles: function(b, c, d) {
            var e = ig.game.tileMath.convertScreenIntoMap(0, 0);
            for (index = 0; index < d.length; index++)
                for (innerIndex = 0; innerIndex < d[index].length; innerIndex++) {
                    var g = e.row() + d[index][innerIndex].row,
                        l = e.col() + d[index][innerIndex].col;
                    if (l < c.maxSize.col() && g < c.maxSize.row() && 0 <= l && 0 <= g) {
                        var r = ig.game.tileMath.convertMapIntoScreen(g, l);
                        (g = c.getTile(g, l)) && g.terrain && this.drawTerrain(b, g.terrain, r.x, r.y)
                    }
                }
        },
        fillTileBox: function(b, c, d, e, g) {
            var l = ig.game.tileMath.getTopPoint(c.row() - d, c.col());
            d = ig.game.tileMath.getRightPoint(c.row() - d, c.col() + e);
            e = ig.game.tileMath.getBottomPoint(c.row(), c.col() + e);
            c = ig.game.tileMath.getLeftPoint(c.row(), c.col());
            b.save();
            b.fillStyle = "Blue";
            b.globalAlpha = g;
            this.fillLines(b, [{
                x: c.x,
                y: c.y
            }, {
                x: l.x,
                y: l.y
            }, {
                x: d.x,
                y: d.y
            }, {
                x: e.x,
                y: e.y
            }, {
                x: c.x,
                y: c.y
            }], {
                color: _COLORS.turq,
                close: !0
            });
            b.restore()
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.renderers.iso-renderer").requires("plugins.iso-engine.components.renderers.iso-drawer").defines(function() {
    IsoRenderer = ig.Class.extend({
        drawGrid: !0,
        screenTileOffsets: [],
        maxScreenRow: 35,
        maxScreenCol: 14,
        init: function() {
            this.figureOutScreenOffsetFill()
        },
        figureOutScreenOffsetFill: function() {
            var b = -1,
                c = -1,
                d = this.maxScreenRow,
                e = this.maxScreenCol,
                g = -1,
                l = -1,
                r = !1;
            this.screenTileOffsets = [];
            for (i = 0; i <= d; i++) {
                this.screenTileOffsets.push([]);
                for (j = 0; j < e; j++) this.screenTileOffsets[i].push(new Vector(l,
                    g)), g--, l++;
                r ? (r = !1, c++) : (r = !0, b++);
                g = b;
                l = c
            }
        },
        redraw: function(b, c) {
            ig.game.drawer.clear(b);
            this.drawTiles(b, c);
            ig.game.isoWm && this.drawGrid && this.drawTileGrid(b, _COLORS.blue, c)
        },
        switchGrid: function() {
            this.drawGrid = !this.drawGrid
        },
        drawTileGrid: function() {},
        drawTiles: function() {}
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.renderers.iso-tile-renderer").requires("plugins.iso-engine.components.renderers.iso-renderer").defines(function() {
    IsoTileRenderer = IsoRenderer.extend({
        init: function() {
            this.parent()
        },
        drawTileGrid: function(b, c, d) {
            var e = ig.game.tileMath.getTopPoint(0, 0),
                g = ig.game.tileMath.getRightPoint(0, d.getNumberOfMapCols() - 1),
                l = ig.game.tileMath.getBottomPoint(d.getNumberOfMapRows() - 1, d.getNumberOfMapCols() - 1);
            ig.game.drawer.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }, {
                x: l.x,
                y: l.y
            }], {
                color: c,
                close: !1
            });
            for (row = 0; row < d.getNumberOfMapRows(); row++) e = d.getTile(row, 0), g = d.getTile(row, d.getNumberOfMapCols() - 1), e && (e = ig.game.tileMath.getLeftPoint(e.row(), e.col()), g && (g = ig.game.tileMath.getBottomPoint(g.row(), g.col()), ig.game.drawer.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }], {
                color: c,
                close: !0
            })));
            for (col = 0; col < d.getNumberOfMapCols(); col++) e = d.getTile(0, col), g = d.getTile(d.getNumberOfMapRows() - 1, col), e = ig.game.tileMath.getTopPoint(e.row(), e.col()), g = ig.game.tileMath.getLeftPoint(g.row(),
                g.col()), ig.game.drawer.drawLines(b, [{
                x: e.x,
                y: e.y
            }, {
                x: g.x,
                y: g.y
            }], {
                color: c,
                close: !0
            })
        },
        drawTiles: function(b, c) {
            var d = ig.game.tileMath.convertScreenIntoMap(0, 0);
            for (index = 0; index < this.screenTileOffsets.length; index++)
                for (innerIndex = 0; innerIndex < this.screenTileOffsets[index].length; innerIndex++) {
                    var e = d.row() + this.screenTileOffsets[index][innerIndex].row(),
                        g = d.col() + this.screenTileOffsets[index][innerIndex].col();
                    if (g < c.maxSize.col() && e < c.maxSize.row() && 0 <= g && 0 <= e) {
                        var l = ig.game.tileMath.convertMapIntoScreen(e,
                            g);
                        (e = c.getTile(e, g)) && e.draw(b, l.x, l.y)
                    }
                }
        },
        offscreenDraw: function(b, c) {
            for (var d = 0; d < c.maxSize.row(); d++)
                for (var e = 0; e < c.maxSize.col(); e++) {
                    var g = d,
                        l = e,
                        r = ig.game.tileMath.convertMapIntoScreen(g, l);
                    (g = c.getTile(g, l)) && g.draw(b, r.x + ig.system.offcanvas.width / 2, r.y)
                }
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.iso-map-handler").requires("plugins.iso-engine.components.datastructures.iso-map", "plugins.iso-engine.components.renderers.iso-tile-renderer").defines(function() {
    IsoMapHandler = ig.Class.extend({
        map: null,
        tileRenderer: null,
        entitiesSpawned: [],
        init: function() {
            null === this.tileRenderer && (this.tileRenderer = new IsoTileRenderer)
        },
        initGameMap: function(b) {
            if ("undefined" === typeof b) return null;
            b = ig.game.ioHandler.getMap(b);
            this.map = b.map;
            for (var c = 0; c < b.entities.length; c++) this.addEntity(b.entities[c],
                b.entities[c].row, b.entities[c].col);
            ig.game.tileMath.resetWorldScreen();
            b = ig.game.tileMath.convertMapIntoScreen(0, 0);
            this.move(b.x, b.y)
        },
        initFileMap: function(b) {
            "undefined" !== typeof b && (this.map = this.createNewMap(b), console.log(this.map), ig.game.tileMath.resetWorldScreen(), b = ig.game.tileMath.convertMapIntoScreen(0, 0), this.move(b.x, b.y))
        },
        getTile: function(b, c) {
            return this.map.getTile(b, c)
        },
        createNewMap: function(b) {
            console.log("create new map");
            var c = new IsoMap;
            c.initFile(b);
            b = ig.game.ioHandler.loadFile(b);
            console.log(b);
            for (var c = b.map, d = 0; d < b.entities.length; d++) {
                var e = b.entities[d];
                this.addEntity(e, e.row, e.col, e.entWmSettings)
            }
            return c
        },
        move: function(b, c) {
            ig.game.tileMath.adjustWorldScreen(ig.system.getDrawPos(b), ig.system.getDrawPos(c));
            if (ig.game.isoWm) this.tileRenderer.redraw(ig.system.bgcontext, this.map);
            else {
                var d = 0,
                    e = 0,
                    g = 0 + ig.game.tileMath.worldScreen.x + ig.system.offcanvas.width / 2,
                    l = 0 + ig.game.tileMath.worldScreen.y,
                    r = 672,
                    p = 480;
                g + r > ig.system.offcanvas.width && (r = ig.system.offcanvas.width - g - 1);
                l + p > ig.system.offcanvas.height && (p = ig.system.offcanvas.height - l - 1);
                0 > g && (d = g + 0, g = 0);
                0 > l && (e = l + 0, l = 0);
                ig.game.drawer.clear(ig.system.bgcontext);
                0 <= g && 0 <= l && 0 <= r && 0 <= p && ig.system.bgcontext.drawImage(ig.system.offcanvas, g, l, r, p, -32 - d, 0 - e, r, p)
            }
        },
        redrawBgTiles: function() {
            this.tileRenderer.offscreenDraw(ig.system.offcontext, this.map);
            var b = ig.game.tileMath.convertMapIntoScreen(0, 0);
            this.move(b.x, b.y)
        },
        getEntity: function(b, c) {
            for (var d = 0; d < this.entitiesSpawned.length; d++)
                if (this.entitiesSpawned[d].row ===
                    b && this.entitiesSpawned[d].col === c) return this.entitiesSpawned[d].ent
        },
        addEntity: function(b, c, d, e) {
            var g = ig.game.tileMath.convertMapIntoScreen(c, d);
            b = ig.game.isoWm ? ig.game.spawnEntity(b.entityType, g.x, g.y, {
                row: c,
                col: d,
                wmSettings: e,
                isoWmPlacedEntity: !0
            }) : ig.game.spawnEntity(b.entityType, g.x, g.y, {
                row: c,
                col: d,
                wmSettings: e
            });
            ig.game.sortEntitiesDeferred();
            this.entitiesSpawned.push({
                ent: b,
                row: c,
                col: d
            });
            e && (b.entityWmSettings = e);
            return b
        },
        removeEntity: function(b, c) {
            for (var d = 0; d < this.entitiesSpawned.length; d++)
                if (this.entitiesSpawned[d].row ===
                    b && this.entitiesSpawned[d].col === c) {
                    console.log(this.entitiesSpawned[d]);
                    this.entitiesSpawned[d].ent.kill();
                    this.entitiesSpawned.splice(d, 1);
                    break
                }
        },
        clearEntities: function() {
            for (var b = 0; b < this.entitiesSpawned.length; b++) console.log(this.entitiesSpawned[b]), this.removeEntity(this.entitiesSpawned[b].row, this.entitiesSpawned[b].col)
        },
        reset: function() {
            this.move(-ig.game.tileMath.worldScreen.x, -ig.game.tileMath.worldScreen.y)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.commands.command").defines(function() {
    Command = ig.Class.extend({
        name: "command",
        keyName: "none",
        func: null,
        ioHandler: null,
        executeOnPress: null,
        executeOnHeld: null,
        executeOnRelease: null,
        init: function(b, c, d) {
            this.keyName = b;
            d && (d.onPress && (this.executeOnPress = d.onPress), d.onHeld && (this.executeOnHeld = d.onHeld), d.onRelease && (this.executeOnRelease = d.onRelease));
            c && (this.ioHandler = c)
        },
        checkPress: function() {
            return this.ioHandler.press(this.keyName) && "function" === typeof this.executeOnPress
        },
        checkHeld: function() {
            return this.ioHandler.held(this.keyName) && "function" === typeof this.executeOnHeld
        },
        checkRelease: function() {
            return this.ioHandler.release(this.keyName) && "function" === typeof this.executeOnRelease
        },
        executePress: function() {
            this.executeOnPress()
        },
        executeHeld: function() {
            this.executeOnHeld()
        },
        executeRelease: function() {
            this.executeOnRelease()
        },
        checkOverlap: function(b) {
            return this.ioHandler.checkOverlap(b.pos.x, b.pos.y, b.size.x, b.size.y)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.input-handler").defines(function() {
    InputHandler = ig.Class.extend({
        controller: null,
        init: function(b) {
            this.controller = b
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.game-input-handler").requires("plugins.iso-engine.components.commands.command", "plugins.iso-engine.components.handlers.input-handler").defines(function() {
    GameInputHandler = InputHandler.extend({
        commandList: [],
        firstClickCoordinate: null,
        newMouse: null,
        init: function(b) {
            ig.game.screenMoving = !1;
            this.parent(b);
            this.commandList = [new Command(ig.game.ioHandler.click, ig.game.ioHandler, {
                onPress: this.cursorClick.bind(this),
                onHeld: this.cursorHeld.bind(this),
                onRelease: this.cursorRelease.bind(this)
            })]
        },
        handle: function() {
            for (var b = 0; b < this.commandList.length; b++) {
                var c = this.commandList[b];
                c.checkPress() && c.executePress();
                c.checkHeld() && c.executeHeld();
                c.checkRelease() && c.executeRelease()
            }
        },
        cursorClick: function() {
            this.moveCheckTimer = 0
        },
        cursorHeld: function() {
            this.moveCheckTimer++;
            5 < this.moveCheckTimer && !ig.game.getEntitiesByType(EntityDialogMonologue)[0] && !ig.game.isPausingButton ? (ig.game.screenMoving = !0, this.newMouse = ig.game.ioHandler.getClickPos(), this.controller.mapHandler.move(-(this.newMouse.x -
                this.firstClickCoordinate.x), -(this.newMouse.y - this.firstClickCoordinate.y)), this.firstClickCoordinate = this.newMouse) : this.firstClickCoordinate = ig.game.ioHandler.getClickPos()
        },
        cursorRelease: function() {
            ig.game.screenMoving = !1
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test").defines(function() {
    test = {
        tiles: [{
            data: [
                [{
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 15,
            mapMaxCols: 15,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    testResources = [new ig.Image("media/graphics/sprites/tiles-woods.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test2").defines(function() {
    test2 = {
        tiles: [{
            data: [
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 15,
            mapMaxCols: 8,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test2Resources = [new ig.Image("media/graphics/sprites/tiles-woods.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test3").defines(function() {
    test3 = {
        tiles: [{
            data: [
                [{
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }],
                [{
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }],
                [{
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 11,
            mapMaxCols: 15,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test3Resources = [new ig.Image("media/graphics/sprites/tiles-woods.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test4").defines(function() {
    test4 = {
        tiles: [{
            data: [
                [{
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 2,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test4Resources = [new ig.Image("media/graphics/sprites/tiles-woods.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test5").defines(function() {
    test5 = {
        tiles: [{
            data: [
                [{
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }],
                [{
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 11,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }]
            ]
        }, {
            data: [
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 21,
            mapMaxCols: 11,
            mapStartRows: 0,
            mapStartCols: 0
        }, {
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 21,
            mapMaxCols: 11,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test5Resources = [new ig.Image("media/graphics/sprites/tiles-woods.png"), new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test6").defines(function() {
    test6 = {
        tiles: [{
            data: [
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 14,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 14,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 17,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 14,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test6Resources = [new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test7").defines(function() {
    test7 = {
        tiles: [{
            data: [
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test7Resources = [new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test8").defines(function() {
    test8 = {
        tiles: [{
            data: [
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test8Resources = [new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test9").defines(function() {
    test9 = {
        tiles: [{
            data: [
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 18,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test9Resources = [new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test10").defines(function() {
    test10 = {
        tiles: [{
            data: [
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 16,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }],
                [{
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }, {
                    codeId: 19,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test10Resources = [new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test11").defines(function() {
    test11 = {
        tiles: [{
            data: [
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 13,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test11Resources = [new ig.Image("media/graphics/sprites/tiles-lab.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test12").defines(function() {
    test12 = {
        tiles: [{
            data: [
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }]
            ]
        }, {
            data: [
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }, {
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 18,
            mapMaxCols: 18,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test12Resources = [new ig.Image("media/graphics/sprites/tiles-lab.png"), new ig.Image("media/graphics/sprites/tiles-lab.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test13").defines(function() {
    test13 = {
        tiles: [{
            data: [
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 23,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 11,
                    block: !0
                }],
                [{
                    codeId: 20,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }],
                [{
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 18,
                    block: !0
                }, {
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 24,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 12,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 17,
                    block: !0
                }, {
                    codeId: 6,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 20,
            mapMaxCols: 20,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test13Resources = [new ig.Image("media/graphics/sprites/tiles-lab.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test14").defines(function() {
    test14 = {
        tiles: [{
            data: [
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 20,
            mapMaxCols: 20,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test14Resources = [new ig.Image("media/graphics/sprites/tiles-lab.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.maps.test15").defines(function() {
    test15 = {
        tiles: [{
            data: [
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }]
            ]
        }, {
            data: [
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 16,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 10,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 14,
                    block: !0
                }, {
                    codeId: 22,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !0
                }],
                [{
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }, {
                    codeId: 5,
                    block: !0
                }, {
                    codeId: 15,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 21,
                    block: !0
                }, {
                    codeId: 4,
                    block: !0
                }]
            ]
        }, {
            data: [
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 10,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 3,
                    block: !1
                }, {
                    codeId: 4,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 11,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 8,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 20,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 5,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 15,
                    block: !1
                }, {
                    codeId: 9,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: -1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 1,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 6,
                    block: !1
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: 2,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }],
                [{
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }, {
                    codeId: -1,
                    block: !0
                }]
            ]
        }],
        entities: [],
        layers: [{
            name: "tiles",
            tilesetName: "media/graphics/sprites/tiles-woods.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 256,
            terrainCodes: "terrain_tiles_0 terrain_tiles_1 terrain_tiles_2 terrain_tiles_3 terrain_tiles_4 terrain_tiles_5 terrain_tiles_6 terrain_tiles_7 terrain_tiles_8 terrain_tiles_9 terrain_tiles_10 terrain_tiles_11 terrain_tiles_12 terrain_tiles_13 terrain_tiles_14 terrain_tiles_15".split(" "),
            mapMaxRows: 20,
            mapMaxCols: 20,
            mapStartRows: 0,
            mapStartCols: 0
        }, {
            name: "tiles3",
            tilesetName: "media/graphics/sprites/tiles-lab.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 384,
            terrainCodes: "terrain_tiles3_0 terrain_tiles3_1 terrain_tiles3_2 terrain_tiles3_3 terrain_tiles3_4 terrain_tiles3_5 terrain_tiles3_6 terrain_tiles3_7 terrain_tiles3_8 terrain_tiles3_9 terrain_tiles3_10 terrain_tiles3_11 terrain_tiles3_12 terrain_tiles3_13 terrain_tiles3_14 terrain_tiles3_15 terrain_tiles3_16 terrain_tiles3_17 terrain_tiles3_18 terrain_tiles3_19 terrain_tiles3_20 terrain_tiles3_21 terrain_tiles3_22 terrain_tiles3_23".split(" "),
            mapMaxRows: 20,
            mapMaxCols: 20,
            mapStartRows: 0,
            mapStartCols: 0
        }, {
            name: "tiles2",
            tilesetName: "media/graphics/sprites/tiles-city.png",
            imageTileWidth: 64,
            imageTileHeight: 32,
            tileSetHeight: 128,
            tileSetWidth: 320,
            terrainCodes: "terrain_tiles2_0 terrain_tiles2_1 terrain_tiles2_2 terrain_tiles2_3 terrain_tiles2_4 terrain_tiles2_5 terrain_tiles2_6 terrain_tiles2_7 terrain_tiles2_8 terrain_tiles2_9 terrain_tiles2_10 terrain_tiles2_11 terrain_tiles2_12 terrain_tiles2_13 terrain_tiles2_14 terrain_tiles2_15 terrain_tiles2_16 terrain_tiles2_17 terrain_tiles2_18 terrain_tiles2_19".split(" "),
            mapMaxRows: 20,
            mapMaxCols: 20,
            mapStartRows: 0,
            mapStartCols: 0
        }]
    };
    test15Resources = [new ig.Image("media/graphics/sprites/tiles-woods.png"), new ig.Image("media/graphics/sprites/tiles-lab.png"), new ig.Image("media/graphics/sprites/tiles-city.png")]
});
ig.baked = !0;
ig.module("plugins.iso-engine.iso-editor.iso-cursor").requires("plugins.iso-engine.components.data.terrain", "plugins.iso-engine.components.renderers.iso-tile-renderer").defines(function() {
    IsoCursor = ig.Class.extend({
        tile: null,
        terrain: null,
        entity: null,
        tileOffsets: {
            row: 0,
            col: 0
        },
        tileToDrawOn: [],
        init: function() {
            this.tileToDrawOn.push({
                row: 0,
                col: 0
            })
        },
        setTile: function(b) {
            this.tile = b;
            this.terrain = new Terrain(b.terrainCode, b.imgPath, b.sx, b.sy, b.sw, b.sh, b.blockTerrain)
        },
        removeTile: function() {
            this.tile && (this.tile =
                null);
            this.terrain && (this.terrain = null)
        },
        setEntity: function(b) {
            this.entity = b
        },
        removeEntity: function() {
            this.entity && (this.entity.kill(), this.entity = null)
        },
        removeAll: function() {
            this.removeEntity();
            this.removeTile()
        },
        drawCursor: function(b, c, d) {
            c = ig.game.tileMath.convertScreenIntoMap(c, d);
            d = ig.game.tileMath.convertMapIntoScreen(c.row(), c.col());
            c && ig.game.drawer.drawTileBox(b, c, this.tileOffsets.row, this.tileOffsets.col);
            this.entity && (this.entity.pos.x = d.x, this.entity.pos.y = d.y);
            if (this.terrain)
                for (b =
                    0; b < this.tileToDrawOn.length; b++) d = ig.game.tileMath.convertMapIntoScreen(c.row() - this.tileToDrawOn[b].row, c.col() + this.tileToDrawOn[b].col), ig.game.drawer.drawTerrain(ig.system.context, this.terrain, d.x, d.y)
        },
        increaseSize: function() {
            this.tileOffsets.row++;
            this.tileOffsets.col++;
            this.resizeTilesToDrawOn()
        },
        decreaseSize: function() {
            var b = this.tileOffsets.col - 1;
            0 >= this.tileOffsets.row - 1 && 0 >= b ? (this.tileOffsets.row = 0, this.tileOffsets.col = 0) : (this.tileOffsets.row--, this.tileOffsets.col--);
            this.resizeTilesToDrawOn()
        },
        resizeTilesToDrawOn: function() {
            this.tileToDrawOn = [];
            for (var b = 0; b <= this.tileOffsets.row; b++)
                for (var c = 0; c <= this.tileOffsets.col; c++) this.tileToDrawOn.push({
                    row: b,
                    col: c
                })
        },
        hasTile: function() {
            return this.tile || this.terrain || this.entity ? !0 : !1
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.entities.iso-entity").requires("impact.entity", "plugins.iso-engine.components.data.vector").defines(function() {
    IsoEntity = ig.Entity.extend({
        gridPos: null,
        gridSize: null,
        actualPos: null,
        ignoreInView: !1,
        inView: !0,
        screenOffsets: {
            widthRight: 0,
            widthLeft: -260,
            heightAbove: -140,
            heightBelow: 200
        },
        zIndex: 1,
        placedEntity: !1,
        tempPos: null,
        anIsoEntity: !0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            0 <= d.row && 0 <= d.col && (this.gridPos = new Vector(d.col, d.row), b = ig.game.tileMath.convertMapIntoScreen(this.gridPos.row(),
                this.gridPos.col()), this.pos = this.actualPos = new Vector(b.x, b.y));
            d.rowSize && d.colSize && (this.gridSize = new Vector(d.colSize, d.rowSize));
            d.isoWmPlacedEntity && (this.placedEntity = d.isoWmPlacedEntity)
        },
        update: function() {
            this.parent();
            this.ignoreInView || (this.inView = this.pos.x < this.screenOffsets.widthLeft || this.pos.x > ig.system.width || this.pos.y < this.screenOffsets.heightAbove || this.pos.y > ig.system.height + this.screenOffsets.heightBelow ? !1 : !0);
            if (this.placedEntity)
                if (this.gridPos && 0 <= this.gridPos.row() && 0 <=
                    this.gridPos.col()) {
                    var b = ig.game.tileMath.convertMapIntoScreen(this.gridPos.row(), this.gridPos.col());
                    this.pos = new Vector(b.x, b.y)
                } else this.kill()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.iso-example.testa").requires("plugins.iso-engine.components.entities.iso-entity").defines(function() {
    EntityTesta = IsoEntity.extend({
        size: {
            x: 100,
            y: 100
        },
        entityType: "EntityTesta",
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        zIndex: 500,
        init: function(b, c, d) {
            this.parent(b, c, d)
        },
        draw: function() {
            this.parent();
            ig.system.context.fillStyle = "rgba(255,255,0,1)";
            ig.system.context.fillRect(this.pos.x, this.pos.y, this.size.x, this.size.y)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.iso-example.testb").requires("plugins.iso-engine.components.entities.iso-entity").defines(function() {
    EntityTestb = IsoEntity.extend({
        size: {
            x: 100,
            y: 100
        },
        entityType: "EntityTestb",
        type: ig.Entity.TYPE.B,
        checkAgainst: ig.Entity.TYPE.A,
        zIndex: 500,
        init: function(b, c, d) {
            this.parent(b, c, d)
        },
        update: function() {
            this.parent()
        },
        draw: function() {
            this.parent();
            ig.system.context.fillStyle = "rgba(255,255,0,1)";
            ig.system.context.fillRect(this.pos.x, this.pos.y, this.size.x, this.size.y)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.game-cursor").requires("impact.entity").defines(function() {
    EntityGameCursor = ig.Entity.extend({
        size: {
            x: 50,
            y: 50
        },
        zIndex: 5E3,
        tileOffsets: {
            row: 0,
            col: 0
        },
        mapHandler: null,
        clickPos: new Vector(0, 0),
        init: function(b, c, d) {
            this.parent(b, c, d);
            d.mapHandler && (this.mapHandler = d.mapHandler)
        },
        update: function() {
            this.parent();
            var b = ig.game.ioHandler.getClickPos();
            this.clickPos = new Vector(b.x + ig.game.tileMath.worldScreen.x, b.y + ig.game.tileMath.worldScreen.y);
            b = ig.game.tileMath.convertScreenIntoMap(b.x, b.y);
            this.mapHandler.getTile(b.row(), b.col());
            ig.input.pressed("click")
        },
        draw: function() {
            this.parent();
            var b = this.clickPos,
                b = ig.game.tileMath.convertScreenIntoMap(b.x - ig.game.tileMath.worldScreen.x, b.y - ig.game.tileMath.worldScreen.y);
            ig.game.tileMath.convertMapIntoScreen(b.row(), b.col());
            b && ig.game.drawer.drawTileBox(ig.system.context, b, this.tileOffsets.row, this.tileOffsets.col)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.data.grid-node").defines(function() {
    GridNode = ig.Class.extend({
        row: 0,
        col: 0,
        tile: null,
        init: function(b, c, d) {
            this.row = b;
            this.col = c;
            this.tile = d
        },
        getCost: function() {
            return this.tile.isBlocked() ? 2 : 1
        },
        getTerrain: function() {
            return this.tile.terrain
        },
        isBlock: function() {
            return this.tile.isBlocked() ? !0 : !1
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.datastructures.graph").requires("plugins.iso-engine.components.data.grid-node").defines(function() {
    Graph = ig.Class.extend({
        options: null,
        nodes: [],
        grid: [],
        count: 0,
        init: function(b, c) {
            this.options = c || {};
            for (var d = this.count = 0; d < b.length; d++) {
                this.grid[d] = [];
                for (var e = 0, g = b[d]; e < g.length; e++) {
                    var l = new GridNode(d, e, g[e]);
                    this.grid[d][e] = l;
                    this.nodes.push(l)
                }
            }
        },
        getNode: function(b, c) {
            return this.grid[b] && this.grid[b][c] ? this.grid[b][c] : null
        },
        neighbors: function(b) {
            var c = [],
                d = b.row;
            b = b.col;
            var e = this.grid;
            e[d - 1] && e[d - 1][b] && c.push(e[d - 1][b]);
            e[d + 1] && e[d + 1][b] && c.push(e[d + 1][b]);
            e[d] && e[d][b - 1] && c.push(e[d][b - 1]);
            e[d] && e[d][b + 1] && c.push(e[d][b + 1]);
            return c
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.datastructures.binary-heap").defines(function() {
    BinaryHeap = ig.Class.extend({
        content: [],
        scoreFunction: null,
        init: function(b) {
            this.scoreFunction = b
        },
        push: function(b) {
            this.content.push(b);
            this.sinkDown(this.content.length - 1)
        },
        pop: function() {
            var b = this.content[0],
                c = this.content.pop();
            0 < this.content.length && (this.content[0] = c, this.bubbleUp(0));
            return b
        },
        remove: function(b) {
            var c = this.content.indexOf(b),
                d = this.content.pop();
            c !== this.content.length - 1 && (this.content[c] =
                d, this.scoreFunction(d) < this.scoreFunction(b) ? this.sinkDown(c) : this.bubbleUp(c))
        },
        size: function() {
            return this.content.length
        },
        rescoreElement: function(b) {
            this.sinkDown(this.content.indexOf(b))
        },
        sinkDown: function(b) {
            for (var c = this.content[b]; 0 < b;) {
                var d = (b + 1 >> 1) - 1,
                    e = this.content[d];
                if (this.scoreFunction(c) < this.scoreFunction(e)) this.content[d] = c, this.content[b] = e, b = d;
                else break
            }
        },
        bubbleUp: function(b) {
            for (var c = this.content.length, d = this.content[b], e = this.scoreFunction(d);;) {
                var g = b + 1 << 1,
                    l = g - 1,
                    r = null,
                    p;
                l < c && (p = this.scoreFunction(this.content[l]), p < e && (r = l));
                if (g < c && this.scoreFunction(this.content[g]) < (null === r ? e : p)) r = g;
                if (null !== r) this.content[b] = this.content[r], this.content[r] = d, b = r;
                else break
            }
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.helpers.astar").requires("plugins.iso-engine.components.datastructures.graph", "plugins.iso-engine.components.datastructures.binary-heap").defines(function() {
    AStar = ig.Class.extend({
        graph: null,
        goalPos: null,
        startPos: null,
        pathList: null,
        character: null,
        openHeap: null,
        init: function(b) {
            this.graph = new Graph(b.tiles)
        },
        resetPath: function() {
            for (var b = 0, c = this.graph.nodes.length; b < c; ++b) {
                var d = this.graph.nodes[b];
                d.f = 0;
                d.g = 0;
                d.h = 0;
                d.visited = !1;
                d.closed = !1;
                d.parent = null
            }
        },
        findPath: function(b, c) {
            this.resetPath();
            var d = this.graph.getNode(b.row(), b.col()),
                e = this.graph.getNode(c.row(), c.col());
            this.openHeap = new BinaryHeap(function(b) {
                return b.f
            });
            d.h = this.heuristic(d, e);
            this.openHeap.push(d);
            for (var g = !0; 0 < this.openHeap.size();) {
                var l = this.openHeap.pop();
                if (l && l === e) return this.pathTo(l);
                l.closed = !0;
                for (var r = this.graph.neighbors(l, g), p = 0, t = r.length; p < t; ++p) {
                    var s = r[p];
                    if (s)
                        if (s.closed || s.isBlock()) g = !1;
                        else {
                            var y = l.g + s.getCost(l),
                                m = s.visited;
                            if (!m || y < s.g) {
                                s.visited = !0;
                                s.parent = l;
                                s.h = s.h || this.heuristic(s, e);
                                s.g = y;
                                s.f = s.g + s.h;
                                if (s.h < d.h || s.h === d.h && s.g < d.g) d = s;
                                m ? this.openHeap.rescoreElement(s) : this.openHeap.push(s)
                            }
                        }
                }
            }
            return this.pathTo(d)
        },
        pathTo: function(b) {
            for (var c = []; b.parent;) c.push(b.tile), b = b.parent;
            return c
        },
        heuristic: function(b, c) {
            var d = Math.abs(c.row - b.row),
                e = Math.abs(c.col - b.col);
            return d + e
        }
    })
});
ig.baked = !0;
ig.module("game.entities.character").requires("impact.entity", "plugins.iso-engine.components.helpers.astar").defines(function() {
    EntityCharacter = ig.Entity.extend({
        entityType: "EntityCharacter",
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 0,
            y: 40
        },
        zIndex: 5E3,
        vel: {
            x: 0,
            y: 0
        },
        maxVel: {
            x: 1E3,
            y: 1E3
        },
        mapHandler: null,
        type: ig.Entity.TYPE.B,
        checkAgainst: ig.Entity.TYPE.A,
        animSheet: new ig.AnimationSheet("media/graphics/game/detective.png", 30, 50),
        currentDistanceTravelled: 0,
        totalDistanceToTravel: 0,
        moveCommand: !1,
        restrictMovement: !1,
        initialScreen: {
            x: null,
            y: null
        },
        clickCoord: {
            x: 0,
            y: 0
        },
        stillMoving: !1,
        anIsoEntity: !0,
        aStar: null,
        currentPath: [],
        pathOnce: !0,
        walkOnce: !0,
        walkTo: [],
        zDepth: 0,
        interacting: !1,
        interactTimer: 0,
        footstepsInterval: 0,
        charaTween: 1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.addAnim("walk", 0.15, [1, 2, 3, 4, 5]);
            this.addAnim("walkRight", 0.15, [22, 21, 20, 19, 18]);
            this.addAnim("interact", 0.1, [6, 7, 8, 9, 10, 11, 8, 7, 6]);
            this.addAnim("caught", 0.4, [6, 7, 8, 8, 8, 8, 8, 8, 8]);
            this.addAnim("caughtend", 1, [8]);
            this.currentAnim =
                this.anims.idle;
            !ig.game.isoWm && !ig.global.wm && (this.tileMath = new IsoTileMath, this.map = new IsoMapHandler, this.terrain = new Terrain, this.tile = new Tile, d.mapHandler && (this.mapHandler = d.mapHandler), this.aStar = new AStar(this.mapHandler.map))
        },
        update: function() {
            this.parent();
            ig.game.isPausing && (this.vel.x = 0, this.vel.y = 0, this.walkTo = []);
            if (!ig.game.isoWm && !ig.global.wm) {
                this.zDepth = this.pos.y + 0;
                this.zIndex = Math.abs(this.zDepth + 0);
                var b = this.tileMath.convertScreenIntoMap(this.pos.x + this.size.x / 2, this.pos.y +
                    this.size.y);
                this.gameController = ig.game.getEntitiesByType(EntityGameController)[0];
                this.charCoord = this.gameController.charTile = b;
                var c = this.mapHandler.getTile(b.y - 1, b.x),
                    d = this.mapHandler.getTile(b.y + 1, b.x),
                    e = this.mapHandler.getTile(b.y, b.x - 1),
                    g = this.mapHandler.getTile(b.y, b.x + 1);
                c && d && (e && g) && (c.isBlocked() || d.isBlocked() || e.isBlocked() || g.isBlocked());
                c = ig.game.ioHandler.getClickPos();
                c = this.tileMath.convertScreenIntoMap(c.x, c.y);
                this.interacting && (this.interactTimer++, this.restrictMovement = !0,
                    50 < this.interactTimer && (this.interacting = !1, this.interactTimer = 0, this.restrictMovement = !1, e.activateConsole(), ig.soundHandler.playSound(ig.soundHandler.SOUNDID.door)));
                this.showCoordY = c.x;
                this.showCoordX = c.y;
                e.canInteract() && !this.restrictMovement && c.x == e.col() && (c.y == e.row() && ig.input.released("click")) && (e.getConsoleID(), this.currentAnim = this.anims.interact.rewind(), this.interacting = !0);
                this.stillMoving && (20 < this.footstepsInterval && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.footsteps), this.footstepsInterval =
                    0), this.footstepsInterval++);
                if (!this.stillMoving && !ig.game.isPausing && !ig.game.getEntitiesByType(EntityDialogMonologue)[0]) {
                    if (ig.input.pressed("click") && (this.footstepsInterval = 20, this.initialScreen.x = ig.game.tileMath.worldScreen.x, this.initialScreen.y = ig.game.tileMath.worldScreen.y), !ig.game.screenMoving && ig.input.released("click")) {
                        c = Math.abs(this.initialScreen.x - ig.game.tileMath.worldScreen.x);
                        d = Math.abs(this.initialScreen.y - ig.game.tileMath.worldScreen.y);
                        if (10 < c || 10 < d) this.restrictMovement = !0;
                        if (this.restrictMovement) this.restrictMovement = !1;
                        else {
                            this.moveCommand = !0;
                            this.firstClickCoordinate = ig.game.ioHandler.getClickPos();
                            c = this.tileMath.convertScreenIntoMap(this.firstClickCoordinate.x, this.firstClickCoordinate.y);
                            if (this.clickedTile = this.mapHandler.getTile(c.row(), c.col())) {
                                if (this.clickedTile.isBlocked()) return;
                                this.pathOnce = !0;
                                this.currentPath = this.aStar.findPath(b, c)
                            }
                            this.clickedCoord = c;
                            c = this.tileMath.convertMapIntoScreen(c.x, c.y);
                            e.canInteract();
                            this.destX = -c.x - ig.game.tileMath.worldScreen.x -
                                ig.game.tileMath.worldScreen.x - 30;
                            this.destY = c.y + 5;
                            this.distX = this.destX - this.pos.x;
                            this.distY = this.destY - this.pos.y
                        }
                    }
                } else this.stillMoving && (ig.input.pressed("click") && (this.initialScreen.x = ig.game.tileMath.worldScreen.x, this.initialScreen.y = ig.game.tileMath.worldScreen.y), ig.input.released("click") && !ig.game.screenMoving && (c = Math.abs(this.initialScreen.x - ig.game.tileMath.worldScreen.x), d = Math.abs(this.initialScreen.y - ig.game.tileMath.worldScreen.y), 1 < c || 1 < d || (this.vel.x = 0, this.vel.y = 0, this.walkTo = []))); if (this.moveCommand && (this.newMouse = ig.game.ioHandler.getClickPos(), this.clickedTile)) {
                    this.clickedTile.isBlocked() || (c = this.tileMath.convertMapIntoScreen(this.clickedCoord.x, this.clickedCoord.y));
                    if (this.pathOnce) {
                        for (e = 0; e < this.currentPath.length; e++) this.walkTo[e] = this.currentPath[e].gridPos;
                        this.pathOnce = !1
                    }
                    if (0 < this.walkTo.length) {
                        if (!l) var l = !0;
                        l && (l = this.walkTo.length - 1, e = this.tileMath.convertMapIntoScreen(this.walkTo[l].x, this.walkTo[l].y), this.distX = -e.x - ig.game.tileMath.worldScreen.x -
                            ig.game.tileMath.worldScreen.x - 30 - this.pos.x - this.size.x / 2, this.distY = e.y - this.pos.y + 5, c = this.walkTo[l].x - b.x, d = this.walkTo[l].y - b.y, l = !1);
                        this.tileMath.convertMapIntoScreen(this.walkTo[0].x, this.walkTo[0].y);
                        1 < this.distX ? (this.vel.x = 100, this.stillMoving = !0) : -1 > this.distX ? (this.vel.x = -100, this.stillMoving = !0) : this.vel.x = 0;
                        this.vel.y = 1 < this.distY ? 50 : -1 > this.distY ? -50 : 0;
                        if (0 == this.vel.x && 0 == this.vel.y) {
                            if (!r) var r = !0;
                            r && (this.walkTo.pop(), r = !1)
                        }
                    }
                    0 !== this.vel.x || 0 !== this.vel.y ? this.interacting || (this.currentAnim =
                        0 > this.vel.x ? this.anims.walk : this.anims.walkRight) : this.interacting || (ig.game.playerCaught ? (this.currentAnim != this.anims.caught && (this.currentAnim = this.anims.caught.rewind(), this.tween({
                        charaTween: 1
                    }, 0.5, {
                        onComplete: function() {
                            this.tween({
                                charaTween: 0
                            }, 0.5).start()
                        }.bind(this)
                    }).start()), this.currentAnim == this.anims.caught && 3 <= this.currentAnim.frame && !this.dialog && (this.dialog = ig.game.spawnEntity(EntityLevelFailDialog, 122.5, 120))) : this.currentAnim = this.anims.idle, this.stillMoving = !1)
                }
            }
        },
        draw: function() {
            this.context =
                ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = "25px dimitri";
            this.context.globalAlpha = this.charaTween;
            this.parent();
            this.context.globalAlpha = 1;
            ctx = ig.system.context;
            this.glowTimer || (this.glowTimer = 0.1);
            null == this.glowing && (this.glowing = !0);
            this.glowTimer = this.glowing ? this.glowTimer + 0.0050 : this.glowTimer - 0.0050;
            0.1 >= this.glowTimer ? this.glowing = !0 : 0.4 <= this.glowTimer && (this.glowing = !1);
            for (var b = 0; b < this.walkTo.length; b++) ig.game.drawer.fillTileBox(ig.system.context,
                this.walkTo[b], 0, 0, this.glowTimer)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.roboto").requires("impact.entity", "plugins.iso-engine.components.helpers.astar").defines(function() {
    EntityRoboto = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 5,
            y: 30
        },
        zIndex: 5E3,
        vel: {
            x: 0,
            y: 0
        },
        maxVel: {
            x: 1E3,
            y: 1E3
        },
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/roboto.png", 40, 40),
        anIsoEntity: !0,
        aStar: null,
        currentPath: [],
        facing: "SE",
        zDepth: 0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            !ig.game.isoWm &&
                !ig.global.wm && (this.addAnim("NWSE", 1, [0]), this.addAnim("NESW", 1, [1]), this.currentAnim = this.anims.NWSE, this.tileMath = new IsoTileMath, d.mapHandler && (this.mapHandler = d.mapHandler));
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col + 1);
            this.pos.x = this.repos.x - this.size.x / 2;
            this.pos.y = this.repos.y - this.size.y / 2
        },
        update: function() {
            this.parent();
            if (!ig.game.isoWm && !ig.global.wm) {
                this.zDepth = this.pos.y + 0;
                this.zIndex = Math.abs(this.zDepth + 0);
                this.char = ig.game.getEntitiesByType(EntityCharacter)[0];
                this.posOnMap = this.tileMath.convertScreenIntoMap(this.pos.x, this.pos.y);
                try {
                    var b = Math.floor(this.posOnMap.x),
                        c = Math.floor(this.posOnMap.y),
                        d = Math.floor(this.char.charCoord.x),
                        e = Math.floor(this.char.charCoord.y)
                } catch (g) {}
                b == d && c == e && !ig.game.isPausing && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.alert), ig.game.playerCaught = !0, ig.game.isPausing = !0);
                b = this.mapHandler.getTile(this.posOnMap.y - 1, this.posOnMap.x);
                c = this.mapHandler.getTile(this.posOnMap.y + 1, this.posOnMap.x);
                d = this.mapHandler.getTile(this.posOnMap.y,
                    this.posOnMap.x - 1);
                e = this.mapHandler.getTile(this.posOnMap.y, this.posOnMap.x + 1);
                switch (this.facing) {
                    case "SE":
                        ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = 50, this.vel.y = 25);
                        this.currentAnim = this.anims.NWSE;
                        e ? e.isBlocked() && (this.facing = this.invertDirection(this.facing)) : this.facing = this.invertDirection(this.facing);
                        break;
                    case "SW":
                        ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = -50, this.vel.y = 25);
                        this.currentAnim = this.anims.NESW;
                        c ? c.isBlocked() && (this.facing = this.invertDirection(this.facing)) :
                            this.facing = this.invertDirection(this.facing);
                        break;
                    case "NW":
                        ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = -50, this.vel.y = -25);
                        this.currentAnim = this.anims.NESW;
                        d ? d.isBlocked() && (this.facing = this.invertDirection(this.facing)) : this.facing = this.invertDirection(this.facing);
                        break;
                    case "NE":
                        ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = 50, this.vel.y = -25), this.currentAnim = this.anims.NWSE, b ? b.isBlocked() && (this.facing = this.invertDirection(this.facing)) : this.facing = this.invertDirection(this.facing)
                }
            }
        },
        invertDirection: function(b) {
            switch (b) {
                case "SE":
                    return "NW";
                case "SW":
                    return "NE";
                case "NW":
                    return "SE";
                case "NE":
                    return "SW"
            }
        },
        draw: function() {
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.roboto2").requires("impact.entity").defines(function() {
    EntityRoboto2 = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 5,
            y: 30
        },
        zIndex: 5E3,
        vel: {
            x: 0,
            y: 0
        },
        maxVel: {
            x: 1E3,
            y: 1E3
        },
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/roboto2.png", 40, 40),
        anIsoEntity: !0,
        facing: "SE",
        goLeftOnCollide: !0,
        zDepth: 0,
        xVel: 50,
        yVel: 25,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            !ig.game.isoWm && !ig.global.wm && (this.addAnim("SE",
                1, [0]), this.addAnim("SW", 1, [1]), this.addAnim("NW", 1, [2]), this.addAnim("NE", 1, [3]), this.currentAnim = this.anims.SE, this.tileMath = new IsoTileMath, d.mapHandler && (this.mapHandler = d.mapHandler));
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col + 1);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0);
            this.char = ig.game.getEntitiesByType(EntityCharacter)[0];
            this.posOnMap = this.tileMath.convertScreenIntoMap(this.pos.x,
                this.pos.y);
            var b = Math.floor(this.posOnMap.x),
                c = Math.floor(this.posOnMap.y);
            try {
                var d = Math.floor(this.char.charCoord.x),
                    e = Math.floor(this.char.charCoord.y)
            } catch (g) {}
            b == d && c == e && !ig.game.isPausing && (ig.soundHandler.playSound(ig.soundHandler.SOUNDID.alert), this.dialog = ig.game.spawnEntity(EntityLevelFailDialog, 122.5, 120), ig.game.isPausing = !0);
            try {
                var l = this.mapHandler.getTile(this.posOnMap.y - 1, this.posOnMap.x),
                    r = this.mapHandler.getTile(this.posOnMap.y + 1, this.posOnMap.x),
                    p = this.mapHandler.getTile(this.posOnMap.y,
                        this.posOnMap.x - 1),
                    t = this.mapHandler.getTile(this.posOnMap.y, this.posOnMap.x + 1)
            } catch (s) {}
            b = this.tileMath.convertMapIntoScreen(this.posOnMap.x, this.posOnMap.y);
            switch (this.facing) {
                case "SE":
                    ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = this.xVel, this.vel.y = this.yVel);
                    this.currentAnim = this.anims.SE;
                    t ? t.isBlocked() && this.pos.x + this.size.x + ig.game.tileMath.worldScreen.x > -(b.x + this.size.x + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing)) : this.pos.x + this.size.x +
                        ig.game.tileMath.worldScreen.x > -(b.x + this.size.x + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing));
                    break;
                case "SW":
                    ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = -this.xVel, this.vel.y = this.yVel);
                    this.currentAnim = this.anims.SW;
                    r ? r.isBlocked() && this.pos.x + ig.game.tileMath.worldScreen.x < -(b.x + 20 + this.size.x / 2 + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing)) : null == r && this.pos.x + ig.game.tileMath.worldScreen.x < -(b.x + 32 + this.size.x /
                        3 + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing));
                    break;
                case "NW":
                    ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = -this.xVel, this.vel.y = -this.yVel);
                    this.currentAnim = this.anims.NW;
                    p ? p.isBlocked() && this.pos.x + ig.game.tileMath.worldScreen.x < -(b.x + 32 + this.size.x / 3 + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing)) : this.pos.x + ig.game.tileMath.worldScreen.x < -(b.x + 32 + this.size.x / 3 + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing));
                    break;
                case "NE":
                    ig.game.isPausing ? (this.vel.x = 0, this.vel.y = 0) : (this.vel.x = this.xVel, this.vel.y = -this.yVel), this.currentAnim = this.anims.NE, l ? l.isBlocked() && this.pos.x + this.size.x / 2 + ig.game.tileMath.worldScreen.x > -(b.x + this.size.x + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing)) : this.pos.x + this.size.x + ig.game.tileMath.worldScreen.x > -(b.x + this.size.x + ig.game.tileMath.worldScreen.x) && (this.facing = this.changeDirection(this.facing))
            }
        },
        changeDirection: function(b) {
            if (this.goLeftOnCollide) switch (b) {
                case "SE":
                    return "NE";
                case "NE":
                    return "NW";
                case "NW":
                    return "SW";
                case "SW":
                    return "SE"
            } else switch (b) {
                case "SE":
                    return "SW";
                case "NE":
                    return "SE";
                case "NW":
                    return "NE";
                case "SW":
                    return "NW"
            }
        },
        draw: function() {
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.wall-console").requires("impact.entity").defines(function() {
    EntityWallConsole = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 14,
            y: 72
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/wall-active.png", 62, 100),
        wallActive: new ig.AnimationSheet("media/graphics/game/wall-active.png", 62, 100),
        wallInactive: new ig.AnimationSheet("media/graphics/game/wall-inactive.png", 62, 100),
        anIsoEntity: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        wallCol: 0,
        wallRow: 0,
        isDoor: null,
        isWall: null,
        ifFlipped: !1,
        consoleID: 0,
        activated: !1,
        inverted: !1,
        usedOnce: !1,
        overrideBlock: !0,
        isTutorial: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            d.mapHandler && (this.mapHandler = d.mapHandler);
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row,
                this.col);
            this.currentCoord.overrideBlock = this.overrideBlock;
            this.currentCoord.isInteract = !0;
            this.currentCoord.consoleID = 100;
            this.currentCoord.canInteract();
            this.isDoor && (this.door = ig.game.spawnEntity(EntityDoor, 0, 0, {
                mapHandler: this.mapHandler,
                row: this.wallRow,
                col: this.wallCol,
                doorIsOpened: !1,
                isFlipped: this.isFlipped
            }));
            this.isWall && (this.wallPillar = ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                mapHandler: this.mapHandler,
                row: this.wallRow,
                col: this.wallCol,
                inverted: this.inverted
            }));
            this.activateOnce = this.usedOnce
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0);
            this.activated = this.currentCoord.activated;
            this.isDoor && (this.usedOnce ? this.activateOnce ? this.activated ? (this.door.doorIsOpened = !0, this.animSheet = this.wallInactive, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.activateOnce = !1) : this.door.doorIsOpened = !1 : ig.game.stopDoorSound = !0 : this.activated ? (this.isTutorial && (ig.game.arrowNumber = 3), ig.game.stopDoorSound = !1, this.door.doorIsOpened = !0) : (ig.game.stopDoorSound = !1, this.door.doorIsOpened = !1));
            this.isWall && (this.usedOnce ? this.activateOnce ? this.activated ? (this.animSheet = this.wallInactive, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.activateOnce = this.wallPillar.wallIsUp = !1) : this.wallPillar.wallIsUp = !0 : ig.game.stopDoorSound = !0 : this.activated ? (ig.game.stopDoorSound = !1, this.wallPillar.wallIsUp = !1) : (ig.game.stopDoorSound = !1, this.wallPillar.wallIsUp = !0));
            this.isFake && this.usedOnce && (this.activateOnce && this.activated) && (this.animSheet = this.wallInactive,
                this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.activateOnce = !1)
        },
        draw: function() {
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.bridge").requires("impact.entity").defines(function() {
    EntityBridge = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 15,
            y: 5
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        bridgeLeft: new ig.Image("media/graphics/game/bridge.png"),
        bridgeRight: new ig.Image("media/graphics/game/bridge-right.png"),
        anIsoEntity: !0,
        zDepth: 0,
        isFlipped: !1,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.tileMath = new IsoTileMath;
            d.mapHandler && (this.mapHandler = d.mapHandler);
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = !0
        },
        update: function() {
            this.parent();
            1 >= this.zDepth && (this.zDepth = 1);
            this.zIndex = this.zDepth
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.zDepth = this.pos.y - 10;
            this.isFlipped ? this.context.drawImage(this.bridgeRight.data, this.pos.x - this.offset.x, this.pos.y -
                this.offset.y) : this.context.drawImage(this.bridgeLeft.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.door-cover").requires("impact.entity").defines(function() {
    EntityDoorCover = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 45,
            y: 82
        },
        zIndex: 5E3,
        mapHandler: null,
        doorEnter: new ig.AnimationSheet("media/graphics/game/door-enter.png", 126, 126),
        doorEnterRight: new ig.AnimationSheet("media/graphics/game/door-enter-right.png", 126, 126),
        isFlipped: !1,
        anIsoEntity: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.tileMath = new IsoTileMath;
            this.animSheet = this.isFlipped ? this.doorEnterRight :
                this.doorEnter;
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 10)
        },
        draw: function() {
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.door").requires("impact.entity", "game.entities.door-cover").defines(function() {
    EntityDoor = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 45,
            y: 82
        },
        zIndex: 5E3,
        mapHandler: null,
        animSheet: new ig.AnimationSheet("media/graphics/game/door-enter.png", 126, 126),
        doorEnter: new ig.AnimationSheet("media/graphics/game/door-enter.png", 126, 126),
        doorEnterRight: new ig.AnimationSheet("media/graphics/game/door-enter.png", 126, 126),
        doorOpen: new ig.Image("media/graphics/game/door-opened.png"),
        doorClose: new ig.Image("media/graphics/game/door-closed.png"),
        doorOpenRight: new ig.Image("media/graphics/game/door-opened-right.png"),
        doorCloseRight: new ig.Image("media/graphics/game/door-closed-right.png"),
        anIsoEntity: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        isFlipped: !1,
        doorIsOpened: !1,
        isDoorCover: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.isFlipped ? (this.animSheet = this.doorEnterRight, this.isDoorCover ? (this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle) : (this.tileMath = new IsoTileMath, d.mapHandler && (this.mapHandler = d.mapHandler), this.repos = this.tileMath.convertMapIntoScreen(this.row,
                this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row - 1, this.col).overrideBlock = !0, this.mapHandler.getTile(this.row + 1, this.col).overrideBlock = !0, this.doorCover = ig.game.spawnEntity(EntityDoorCover, this.pos.x, this.pos.y, {
                zIndex: this.zIndex + 1,
                row: this.row,
                col: this.col,
                isFlipped: this.isFlipped
            }))) : (this.animSheet = this.doorEnter, this.isDoorCover ? (this.addAnim("idle", 1, [0]), this.currentAnim =
                this.anims.idle) : (this.tileMath = new IsoTileMath, d.mapHandler && (this.mapHandler = d.mapHandler), this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row, this.col - 1).overrideBlock = !0, this.mapHandler.getTile(this.row, this.col + 1).overrideBlock = !0, this.doorCover = ig.game.spawnEntity(EntityDoorCover, this.pos.x, this.pos.y, {
                zIndex: this.zIndex +
                    1,
                row: this.row,
                col: this.col
            })))
        },
        update: function() {
            this.parent();
            this.isDoorCover ? (this.zDepth = this.pos.y + 0, this.zIndex = Math.abs(this.zDepth + 5)) : (this.zDepth = this.pos.y + 0, this.zIndex = Math.abs(this.zDepth - 5), this.currentCoord.overrideBlock = this.doorIsOpened ? !1 : !0)
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.isFlipped ? this.doorIsOpened ? this.context.drawImage(this.doorOpenRight.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y) : this.context.drawImage(this.doorCloseRight.data,
                this.pos.x - this.offset.x, this.pos.y - this.offset.y) : this.isDoorCover || (this.doorIsOpened ? this.context.drawImage(this.doorOpen.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y) : this.context.drawImage(this.doorClose.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y))
        }
    })
});
ig.baked = !0;
ig.module("game.entities.tree").requires("impact.entity").defines(function() {
    EntityTree = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 2,
            y: 41
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/tree.png", 42, 55),
        shadow: new ig.Image("media/graphics/game/tree-shadow.png"),
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.ctx.drawImage(this.shadow.data, this.pos.x, this.pos.y);
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.tree-city").requires("impact.entity").defines(function() {
    EntityTreeCity = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 2,
            y: 41
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/tree-city.png", 42, 64),
        anIsoEntity: !0,
        overrideBlock: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row,
                this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.wall-pillar").requires("impact.entity").defines(function() {
    EntityWallPillar = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 14,
            y: 72
        },
        zIndex: 5E3,
        mapHnadler: null,
        wallDown: new ig.Image("media/graphics/game/wall-down.png"),
        wallUp: new ig.Image("media/graphics/game/wall-up.png"),
        anIsoEntity: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        wallIsUp: !0,
        inverted: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.tileMath = new IsoTileMath;
            d.mapHandler && (this.mapHandler = d.mapHandler);
            this.repos = this.tileMath.convertMapIntoScreen(this.row,
                this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.mapHandler.getTile(this.row, this.col).overrideBlock = this.wallIsUp
        },
        update: function() {
            this.parent();
            this.zIndex = Math.abs(this.zDepth);
            this.currentCoord.overrideBlock = this.wallIsUp ? this.inverted ? !1 : !0 : this.inverted ? !0 : !1
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.wallIsUp ? this.inverted ? (this.zDepth = this.pos.y - 10, this.context.drawImage(this.wallDown.data,
                this.pos.x - this.offset.x, this.pos.y - this.offset.y)) : (this.zDepth = this.pos.y + 0, this.context.drawImage(this.wallUp.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y)) : this.inverted ? (this.zDepth = this.pos.y + 0, this.context.drawImage(this.wallUp.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y)) : (this.zDepth = this.pos.y - 10, this.context.drawImage(this.wallDown.data, this.pos.x - this.offset.x, this.pos.y - this.offset.y))
        }
    })
});
ig.baked = !0;
ig.module("game.entities.key").requires("impact.entity").defines(function() {
    EntityKey = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: -10,
            y: 10
        },
        zIndex: 5E3,
        mapHandler: null,
        keyImage: new ig.Image("media/graphics/game/key.png"),
        anIsoEntity: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        floatOffset: 0,
        floatSpeed: 1.5,
        levelCompletion: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.tileMath = new IsoTileMath;
            d.mapHandler && (this.mapHandler = d.mapHandler);
            this.tween({
                floatOffset: 15
            }, this.floatSpeed, {
                easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                onComplete: function() {
                    this.tween({
                        floatOffset: 0
                    }, this.floatSpeed, {
                        easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                    }).start()
                }.bind(this)
            }).start();
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.spawnOnce = !0
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth - 0);
            this.char = ig.game.getEntitiesByType(EntityCharacter)[0];
            this.coord = new Vector(this.col, this.row);
            this.charCoord =
                this.tileMath.convertScreenIntoMap(this.char.pos.x + 6, this.char.pos.y);
            0 >= this.floatOffset && this.tween({
                floatOffset: 15
            }, this.floatSpeed, {
                easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                onComplete: function() {
                    this.tween({
                        floatOffset: 0
                    }, this.floatSpeed, {
                        easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                    }).start()
                }.bind(this)
            }).start();
            if (this.charCoord.x === this.coord.x && this.charCoord.y === this.coord.y && this.spawnOnce) {
                switch (this.levelCompletion) {
                    case 1:
                        ig.game.levelsUnlocked[1] = !0;
                        ig.game.storage.set("lostInTime-levels",
                            ig.game.levelsUnlocked);
                        break;
                    case 2:
                        ig.game.levelsUnlocked[2] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 3:
                        ig.game.levelsUnlocked[3] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 4:
                        ig.game.levelsUnlocked[4] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 5:
                        ig.game.levelsUnlocked[5] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 6:
                        ig.game.levelsUnlocked[6] = !0;
                        ig.game.storage.set("lostInTime-levels",
                            ig.game.levelsUnlocked);
                        break;
                    case 7:
                        ig.game.levelsUnlocked[7] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 8:
                        ig.game.levelsUnlocked[8] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 9:
                        ig.game.levelsUnlocked[9] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 10:
                        ig.game.levelsUnlocked[10] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 11:
                        ig.game.levelsUnlocked[11] = !0;
                        ig.game.storage.set("lostInTime-levels",
                            ig.game.levelsUnlocked);
                        break;
                    case 12:
                        ig.game.levelsUnlocked[12] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 13:
                        ig.game.levelsUnlocked[13] = !0;
                        ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked);
                        break;
                    case 14:
                        ig.game.levelsUnlocked[14] = !0, ig.game.storage.set("lostInTime-levels", ig.game.levelsUnlocked)
                }
                ig.soundHandler.playSound(ig.soundHandler.SOUNDID.key);
                ig.game.spawnEntity(EntityLevelCompleteDialog, 0, 0);
                this.spawnOnce = !1
            }
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.drawImage(this.keyImage.data, this.pos.x - this.offset.x, this.pos.y - 5 - this.offset.y - this.floatOffset)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.level-complete-button").requires("impact.entity").defines(function() {
    EntityLevelCompleteButton = ig.Entity.extend({
        size: {
            x: 170,
            y: 61
        },
        zIndex: 6001,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/normal-button.png", 170, 61),
        anIsoEntity: !1,
        buttonName: "",
        levelFailDialog: null,
        levelCompleteDialog: null,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle
        },
        update: function() {
            this.parent();
            this.levelFailDialog && (this.pos.x =
                this.levelFailDialog.pos.x + 20);
            this.levelCompleteDialog && "Next" == this.buttonName ? this.pos.x = this.levelCompleteDialog.pos.x + this.levelCompleteDialog.size.x / 2 + 10 : this.levelCompleteDialog && "Menu" == this.buttonName && (this.pos.x = this.levelCompleteDialog.pos.x + 20)
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = "25px dimitri";
            this.context.fillText(this.buttonName, this.pos.x + this.size.x / 2, this.pos.y + 40)
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button);
            ig.game.repeatMonologue = !1;
            switch (this.buttonName) {
                case "Next":
                    15 > ig.game.levelCount ? (ig.game.levelCount++, ig.game.director.jumpTo(LevelTransition)) : ig.game.director.jumpTo(LevelMenu);
                    break;
                case "Menu":
                    ig.game.director.jumpTo(LevelMenu), ig.game.isPausingButton = !1, ig.game.isPausing = !1
            }
        }
    })
});
ig.baked = !0;
ig.module("game.entities.level-complete-dialog").requires("impact.entity", "game.entities.level-complete-button").defines(function() {
    EntityLevelCompleteDialog = ig.Entity.extend({
        size: {
            x: 395,
            y: 240
        },
        zIndex: 6E3,
        animSheet: new ig.AnimationSheet("media/graphics/game/dialogbox.png", 395, 240),
        anIsoEntity: !1,
        bgAlpha: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.pos.x = 650;
            this.pos.y = 240 - this.size.y / 2;
            this.tween({
                pos: {
                    x: 122.5
                },
                bgAlpha: 0.5
            }, 0.5, {
                easing: ig.Tween.Easing.Cubic.EaseOut
            }).start();
            15 > ig.game.levelCount ? (this.levelCompleteButton1 = ig.game.spawnEntity(EntityLevelCompleteButton, this.pos.x + this.size.x / 2 - 150, this.pos.y + this.size.y - 70, {
                buttonName: "Next",
                levelCompleteDialog: this
            }), this.levelCompleteButton2 = ig.game.spawnEntity(EntityLevelCompleteButton, this.pos.x + this.size.x / 2 + 150, this.pos.y + this.size.y - 70, {
                buttonName: "Menu",
                levelCompleteDialog: this
            })) : this.levelCompleteButton2 = ig.game.spawnEntity(EntityLevelCompleteButton, this.pos.x + this.size.x / 2, this.pos.y + this.size.y - 70, {
                buttonName: "Menu",
                levelCompleteDialog: this
            });
            this.timeScore = ig.game.getEntitiesByType(EntityTimeScore)[0];
            ig.game.isPausing = !0
        },
        update: function() {
            this.parent();
            ig.game.sortEntitiesDeferred();
            15 > ig.game.levelCount ? (this.levelCompleteButton1.pos.x = this.pos.x + this.size.x / 2 + 150 - this.levelCompleteButton1.size.x / 2, this.levelCompleteButton2.pos.x = this.pos.x + this.size.x / 2 - 150 - this.levelCompleteButton2.size.x / 2) : this.levelCompleteButton2.pos.x = this.pos.x + this.size.x / 2 - this.levelCompleteButton2.size.x / 2
        },
        draw: function() {
            this.context =
                ig.system.context;
            this.context.fillStyle = "#000000";
            this.context.textAlign = "center";
            this.context.globalAlpha = this.bgAlpha;
            this.context.fillRect(0, 0, 640, 480);
            this.context.globalAlpha = 1;
            this.context.fillStyle = "#ffffff";
            this.parent();
            this.context.font = "32px dimitri";
            this.context.fillText("Level Completed", this.pos.x + this.size.x / 2, this.pos.y + 40);
            this.context.font = "28px dimitri";
            this.context.fillText("Your time:", this.pos.x + this.size.x / 2, this.pos.y + 80);
            1 > this.timeScore.minutes && 10 > this.timeScore.seconds ?
                this.context.fillText("00:0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120) : 1 > this.timeScore.minutes && 10 <= this.timeScore.seconds ? this.context.fillText("00:" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120) : 10 > this.timeScore.minutes && 10 > this.timeScore.seconds ? this.context.fillText("0" + this.timeScore.minutes + ":0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120) : 10 > this.timeScore.minutes && 10 <= this.timeScore.seconds ? this.context.fillText("0" + this.timeScore.minutes +
                    ":" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120) : 10 <= this.timeScore.minutes && 10 > this.timeScore.seconds ? this.context.fillText(this.timeScore.minutes + ":0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120) : 10 <= this.timeScore.minutes && 10 <= this.timeScore.seconds && this.context.fillText(this.timeScore.minutes + ":" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 120)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.time-score").requires("impact.entity").defines(function() {
    EntityTimeScore = ig.Entity.extend({
        size: {
            x: 200,
            y: 50
        },
        zIndex: 6E3,
        anIsoEntity: !1,
        timer: new ig.Timer,
        seconds: 0,
        minutes: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.minutes = this.seconds = 0;
            this.timer.set(0)
        },
        update: function() {
            this.parent();
            ig.game.isPausing ? this.timer.pause() : this.timer.unpause();
            this.seconds = Math.floor(this.timer.delta());
            59 < this.seconds && (this.seconds = 0, this.timer.reset(), this.minutes++)
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "left";
            this.context.font = "25px dimitri";
            1 > this.minutes && 10 > this.seconds ? this.context.fillText("00:0" + this.seconds, 50, this.pos.y + 50) : 1 > this.minutes && 10 <= this.seconds ? this.context.fillText("00:" + this.seconds, 50, this.pos.y + 50) : 10 > this.minutes && 10 > this.seconds ? this.context.fillText("0" + this.minutes + ":0" + this.seconds, 50, this.pos.y + 50) : 10 > this.minutes && 10 <= this.seconds ? this.context.fillText("0" + this.minutes + ":" + this.seconds,
                50, this.pos.y + 50) : 10 <= this.minutes && 10 > this.seconds ? this.context.fillText(this.minutes + ":0" + this.seconds, 50, this.pos.y + 50) : 10 <= this.minutes && 10 <= this.seconds && this.context.fillText(this.minutes + ":" + this.seconds, 50, this.pos.y + 50)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.level-fail-dialog").requires("impact.entity").defines(function() {
    EntityLevelFailDialog = ig.Entity.extend({
        size: {
            x: 395,
            y: 240
        },
        zIndex: 6E3,
        animSheet: new ig.AnimationSheet("media/graphics/game/dialogbox.png", 395, 240),
        anIsoEntity: !1,
        bgAlpha: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.levelCompleteButton = ig.game.spawnEntity(EntityLevelCompleteButton, this.pos.x + 20, this.pos.y + this.size.y - 70, {
                buttonName: "Menu",
                levelFailDialog: this
            });
            this.levelRetryButton = ig.game.spawnEntity(EntityLevelRetryButton, this.pos.x + this.size.x / 2 + 20, this.pos.y + this.size.y - 70, {
                levelFailDialog: this
            });
            this.timeScore = ig.game.getEntitiesByType(EntityTimeScore)[0];
            this.pos.x = 650;
            this.pos.y = 240 - this.size.y / 2;
            this.tween({
                pos: {
                    x: 122.5
                },
                bgAlpha: 0.5
            }, 0.5, {
                easing: ig.Tween.Easing.Cubic.EaseOut
            }).start();
            b = Math.random();
            if (0.1 > b) var e = _STRINGS.Game.levelFailedDialog1;
            else 0.2 > b ? e = _STRINGS.Game.levelFailedDialog2 : 0.3 > b ? e = _STRINGS.Game.levelFailedDialog3 : 0.4 > b ? e = _STRINGS.Game.levelFailedDialog4 :
                0.5 > b ? e = _STRINGS.Game.levelFailedDialog5 : 0.6 > b ? e = _STRINGS.Game.levelFailedDialog6 : 0.7 > b ? e = _STRINGS.Game.levelFailedDialog7 : 0.8 > b ? e = _STRINGS.Game.levelFailedDialog8 : 0.9 > b ? e = _STRINGS.Game.levelFailedDialog9 : 1 >= b && (e = _STRINGS.Game.levelFailedDialog10);
            this.textwrapper = new ig.Textwrapper(22, "dimitri");
            this.textlist = this.textwrapper.wrapText(e, 210)
        },
        update: function() {
            this.parent();
            this.levelCompleteButton.x = this.pos.x - this.size.x / 2 + 150;
            this.levelRetryButton.x = this.pos.x + this.size.x / 2 + 20
        },
        draw: function() {
            this.context =
                ig.system.context;
            this.context.fillStyle = "#000000";
            this.context.textAlign = "center";
            this.context.globalAlpha = this.bgAlpha;
            this.context.fillRect(0, 0, 640, 480);
            this.context.globalAlpha = 1;
            this.context.fillStyle = "#ffffff";
            this.parent();
            this.context.font = "24px dimitri";
            this.textwrapper.drawTextList(this.textlist, this.pos.x + this.size.x / 2, this.pos.y + 40);
            this.context.font = "28px dimitri";
            this.context.fillText(_STRINGS.Game.yourTime, this.pos.x + this.size.x / 2, this.pos.y + 100);
            1 > this.timeScore.minutes && 10 > this.timeScore.seconds ?
                this.context.fillText("00:0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130) : 1 > this.timeScore.minutes && 10 <= this.timeScore.seconds ? this.context.fillText("00:" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130) : 10 > this.timeScore.minutes && 10 > this.timeScore.seconds ? this.context.fillText("0" + this.timeScore.minutes + ":0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130) : 10 > this.timeScore.minutes && 10 <= this.timeScore.seconds ? this.context.fillText("0" + this.timeScore.minutes +
                    ":" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130) : 10 <= this.timeScore.minutes && 10 > this.timeScore.seconds ? this.context.fillText(this.timeScore.minutes + ":0" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130) : 10 <= this.timeScore.minutes && 10 <= this.timeScore.seconds && this.context.fillText(this.timeScore.minutes + ":" + this.timeScore.seconds, this.pos.x + this.size.x / 2, this.pos.y + 130)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.level-retry-button").requires("impact.entity").defines(function() {
    EntityLevelRetryButton = ig.Entity.extend({
        size: {
            x: 170,
            y: 61
        },
        zIndex: 6001,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/normal-button.png", 170, 61),
        anIsoEntity: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle
        },
        update: function() {
            this.parent();
            this.levelFailDialog && (this.pos.x = this.levelFailDialog.pos.x + this.levelFailDialog.size.x /
                2 + 10)
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = "25px dimitri";
            this.context.fillText(_STRINGS.Game.retry, this.pos.x + this.size.x / 2, this.pos.y + 40)
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            ig.soundHandler.playSound(ig.soundHandler.SOUNDID.button);
            ig.game.isPausingButton = !1;
            ig.game.repeatMonologue = !0;
            ig.game.director.reloadLevel()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-house").requires("impact.entity").defines(function() {
    EntityPropHouse = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 10,
            y: 99
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        flipped: !1,
        animSheet: new ig.AnimationSheet("media/graphics/game/house.png", 154, 140),
        house: new ig.AnimationSheet("media/graphics/game/house.png", 154, 140),
        houseFlipped: new ig.AnimationSheet("media/graphics/game/house-right.png", 154, 140),
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.flipped ? (this.offset = {
                x: 10,
                y: 84
            }, this.animSheet = this.houseFlipped, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row - 1, this.col).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row -
                1, this.col + 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row - 1, this.col + 2).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row, this.col + 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row, this.col + 2).overrideBlock = this.overrideBlock) : (this.offset = {
                    x: 10,
                    y: 99
                }, this.animSheet = this.house, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x =
                this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row, this.col + 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row - 1, this.col + 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row - 2, this.col + 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row - 1, this.col).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row - 2, this.col).overrideBlock =
                this.overrideBlock);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-totem").requires("impact.entity").defines(function() {
    EntityPropTotem = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: -7,
            y: 30
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/totem.png", 20, 42),
        totem: new ig.Image("media/graphics/game/totem.png"),
        totemLevel: 1,
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        floating: !1,
        floatOffset: 0,
        floatSpeed: 4,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.floating ?
                this.tween({
                    floatOffset: 15
                }, this.floatSpeed, {
                    easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                    onComplete: function() {
                        this.tween({
                            floatOffset: 0
                        }, this.floatSpeed, {
                            easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                        }).start()
                    }.bind(this)
                }).start() : (this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle);
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row,
                this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0);
            this.floating && 0 >= this.floatOffset && this.tween({
                floatOffset: 15
            }, this.floatSpeed, {
                easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                onComplete: function() {
                    this.tween({
                        floatOffset: 0
                    }, this.floatSpeed, {
                        easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                    }).start()
                }.bind(this)
            }).start()
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent();
            if (this.floating) this.ctx.drawImage(this.totem.data,
                this.pos.x - this.offset.x, this.pos.y - 5 - this.offset.y - this.floatOffset);
            else if (1 < this.totemLevel)
                for (i = 0; i < this.totemLevel; i++) this.ctx.drawImage(this.totem.data, this.pos.x - this.offset.x, this.pos.y - 31 - this.offset.y * i)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-car").requires("impact.entity").defines(function() {
    EntityPropCar = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 10,
            y: 99
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        flipped: !1,
        animSheet: new ig.AnimationSheet("media/graphics/game/car1.png", 70, 48),
        car: new ig.AnimationSheet("media/graphics/game/car1.png", 70, 48),
        carFlipped: new ig.AnimationSheet("media/graphics/game/car1-right.png", 70, 48),
        car2: new ig.AnimationSheet("media/graphics/game/car2.png",
            70, 48),
        car2Flipped: new ig.AnimationSheet("media/graphics/game/car2-right.png", 70, 48),
        carType: 1,
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            switch (this.carType) {
                case 1:
                    this.flipped ? (this.offset = {
                            x: 30,
                            y: 30
                        }, this.animSheet = this.carFlipped, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y +
                        this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row, this.col - 1).overrideBlock = this.overrideBlock) : (this.offset = {
                        x: 10,
                        y: 25
                    }, this.animSheet = this.car, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row -
                        1, this.col).overrideBlock = this.overrideBlock);
                    this.currentCoord.overrideBlock = this.overrideBlock;
                    break;
                case 2:
                    this.flipped ? (this.offset = {
                        x: 30,
                        y: 30
                    }, this.animSheet = this.car2Flipped, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row,
                        this.col - 1).overrideBlock = this.overrideBlock) : (this.offset = {
                        x: 10,
                        y: 25
                    }, this.animSheet = this.car2, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row - 1, this.col).overrideBlock = this.overrideBlock), this.currentCoord.overrideBlock = this.overrideBlock
            }
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-building").requires("impact.entity").defines(function() {
    EntityPropBuilding = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 116,
            y: 80
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        buildingType: 1,
        buildingLevel: 1,
        flipped: !1,
        animSheet: new ig.AnimationSheet("media/graphics/game/building1.png", 136, 128),
        building1: new ig.AnimationSheet("media/graphics/game/building1.png", 136, 128),
        building1Flip: new ig.AnimationSheet("media/graphics/game/building1-flip.png",
            136, 128),
        building2: new ig.AnimationSheet("media/graphics/game/building2.png", 136, 128),
        building2Flip: new ig.AnimationSheet("media/graphics/game/building2-flip.png", 136, 128),
        buildingFloor: new ig.Image("media/graphics/game/building2.png"),
        buildingFloorFlip: new ig.Image("media/graphics/game/building2-flip.png"),
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            switch (this.buildingType) {
                case 1:
                    this.animSheet = this.flipped ? this.building1Flip : this.building1;
                    this.addAnim("idle",
                        1, [0]);
                    this.currentAnim = this.anims.idle;
                    this.tileMath = new IsoTileMath;
                    this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
                    this.pos.x = this.repos.x + this.size.x / 2;
                    this.pos.y = this.repos.y + this.size.y / 2;
                    this.currentCoord = this.mapHandler.getTile(this.row, this.col);
                    this.mapHandler.getTile(this.row + 1, this.col).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row + 1, this.col - 1).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row + 1, this.col - 2).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row + 2, this.col).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row + 2, this.col - 1).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row + 2, this.col - 2).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row, this.col - 1).overrideBlock = this.overrideBlock;
                    this.mapHandler.getTile(this.row, this.col - 2).overrideBlock = this.overrideBlock;
                    this.currentCoord.overrideBlock = this.overrideBlock;
                    break;
                case 2:
                    this.animSheet = this.flipped ? this.building2Flip :
                        this.building2, this.addAnim("idle", 1, [0]), this.currentAnim = this.anims.idle, this.tileMath = new IsoTileMath, this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col), this.pos.x = this.repos.x + this.size.x / 2, this.pos.y = this.repos.y + this.size.y / 2, this.currentCoord = this.mapHandler.getTile(this.row, this.col), this.mapHandler.getTile(this.row + 1, this.col).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row + 1, this.col - 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row + 1, this.col -
                            2).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row + 2, this.col).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row + 2, this.col - 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row + 2, this.col - 2).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row, this.col - 1).overrideBlock = this.overrideBlock, this.mapHandler.getTile(this.row, this.col - 2).overrideBlock = this.overrideBlock, this.currentCoord.overrideBlock = this.overrideBlock
            }
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.parent();
            this.ctx = ig.system.context;
            if (1 <= this.buildingLevel)
                for (i = 0; i < this.buildingLevel; i++) this.flipped ? this.ctx.drawImage(this.buildingFloorFlip.data, this.pos.x - this.offset.x, this.pos.y - 135 - this.offset.y * i / 2) : this.ctx.drawImage(this.buildingFloor.data, this.pos.x - this.offset.x, this.pos.y - 135 - this.offset.y * i / 2)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-streetlight").requires("impact.entity").defines(function() {
    EntityPropStreetlight = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: -10,
            y: 90
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        flipped: !1,
        animSheet: new ig.AnimationSheet("media/graphics/game/streetlight.png", 30, 100),
        streetlight: new ig.AnimationSheet("media/graphics/game/streetlight.png", 30, 100),
        streetlightFlipped: new ig.AnimationSheet("media/graphics/game/streetlight-flip.png", 30,
            100),
        flipped: !1,
        anIsoEntity: !0,
        zDepth: 0,
        overrideBlock: !0,
        col: 0,
        row: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.flipped ? (this.animSheet = this.streetlightFlipped, this.offset.x = 10) : this.animSheet = this.streetlight;
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-shelf").requires("impact.entity").defines(function() {
    EntityPropShelf = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 12,
            y: 48
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/shelf.png", 60, 72),
        shelf: new ig.AnimationSheet("media/graphics/game/shelf.png", 60, 72),
        shelfFlipped: new ig.AnimationSheet("media/graphics/game/shelf-flip.png", 60, 72),
        anIsoEntity: !0,
        overrideBlock: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        isFlipped: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.animSheet = this.isFlipped ? this.shelfFlipped : this.shelf;
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y +
                0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-pipe").requires("impact.entity").defines(function() {
    EntityPropPipe = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: -5,
            y: 20
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/pipe.png", 20, 30),
        anIsoEntity: !0,
        overrideBlock: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        pipe: new ig.Image("media/graphics/game/pipe.png"),
        pipeLevel: 1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent();
            if (1 < this.pipeLevel)
                for (i = 0; i < this.pipeLevel; i++) this.ctx.drawImage(this.pipe.data,
                    this.pos.x - this.offset.x, this.pos.y - 31 - this.offset.y * i)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.prop-lightline").requires("impact.entity").defines(function() {
    EntityPropLightline = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 5,
            y: 20
        },
        zIndex: 5E3,
        mapHandler: null,
        type: ig.Entity.TYPE.A,
        checkAgainst: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/lightline.png", 8, 32),
        lightline: new ig.AnimationSheet("media/graphics/game/lightline.png", 8, 32),
        lightlineFlipped: new ig.AnimationSheet("media/graphics/game/lightline-flip.png", 8, 32),
        isFlipped: !1,
        anIsoEntity: !0,
        overrideBlock: !0,
        zDepth: 0,
        col: 0,
        row: 0,
        lightlineImage: new ig.Image("media/graphics/game/lightline.png"),
        lightlineFlippedImage: new ig.Image("media/graphics/game/lightline-flip.png"),
        lightlineLevel: 1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.isFlipped ? (this.animSheet = this.lightlineFlipped, this.offset.x = 5) : (this.animSheet = this.lightline, this.offset.x = -30);
            this.offset.y = 20;
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.tileMath = new IsoTileMath;
            this.repos = this.tileMath.convertMapIntoScreen(this.row,
                this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.currentCoord = this.mapHandler.getTile(this.row, this.col);
            this.currentCoord.overrideBlock = this.overrideBlock
        },
        update: function() {
            this.parent();
            this.zDepth = this.pos.y + 0;
            this.zIndex = Math.abs(this.zDepth + 0)
        },
        draw: function() {
            this.ctx = ig.system.context;
            this.parent();
            if (this.isFlipped) {
                if (1 <= this.lightlineLevel)
                    for (i = 0; i < this.lightlineLevel; i++) this.ctx.drawImage(this.lightlineFlippedImage.data, this.pos.x - this.offset.x,
                        this.pos.y - 55 - 1.2 * this.offset.y * i)
            } else if (1 <= this.lightlineLevel)
                for (i = 0; i < this.lightlineLevel; i++) this.ctx.drawImage(this.lightlineImage.data, this.pos.x - this.offset.x, this.pos.y - 55 - 1.2 * this.offset.y * i)
        }
    })
});
ig.baked = !0;
ig.module("game.entities.arrow").requires("impact.entity").defines(function() {
    EntityArrow = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        offset: {
            x: 0,
            y: 50
        },
        zIndex: 5010,
        mapHandler: null,
        arrowImage: new ig.Image("media/graphics/game/arrow.png"),
        anIsoEntity: !0,
        col: 0,
        row: 0,
        floatOffset: 0,
        floatSpeed: 1,
        arrowNumber: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.tileMath = new IsoTileMath;
            d.mapHandler && (this.mapHandler = d.mapHandler);
            this.tween({
                floatOffset: 40
            }, this.floatSpeed, {
                easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                onComplete: function() {
                    this.tween({
                            floatOffset: 0
                        },
                        this.floatSpeed, {
                            easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                        }).start()
                }.bind(this)
            }).start();
            this.repos = this.tileMath.convertMapIntoScreen(this.row, this.col);
            this.pos.x = this.repos.x + this.size.x / 2;
            this.pos.y = this.repos.y + this.size.y / 2;
            this.spawnOnce = !0
        },
        update: function() {
            this.parent();
            this.char = ig.game.getEntitiesByType(EntityCharacter)[0];
            this.coord = new Vector(this.col, this.row);
            this.charCoord = this.tileMath.convertScreenIntoMap(this.char.pos.x + 6, this.char.pos.y);
            0 >= this.floatOffset && this.tween({
                    floatOffset: 40
                },
                this.floatSpeed, {
                    easing: ig.Tween.Easing.Sinusoidal.EaseInOut,
                    onComplete: function() {
                        this.tween({
                            floatOffset: 0
                        }, this.floatSpeed, {
                            easing: ig.Tween.Easing.Sinusoidal.EaseInOut
                        }).start()
                    }.bind(this)
                }).start();
            if (this.charCoord.x === this.coord.x && this.charCoord.y === this.coord.y) switch (ig.game.arrowNumber) {
                case 1:
                    ig.game.arrowNumber = 2;
                    this.kill();
                    break;
                case 3:
                    this.kill()
            }
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.globalAlpha = ig.game.arrowNumber == this.arrowNumber ? 0.9 : 0;
            this.context.drawImage(this.arrowImage.data,
                this.pos.x - this.offset.x, this.pos.y - 5 - this.offset.y - this.floatOffset);
            this.context.globalAlpha = 1
        }
    })
});
ig.baked = !0;
ig.module("game.entities.screen-drag-tutorial").requires("impact.entity").defines(function() {
    EntityScreenDragTutorial = ig.Entity.extend({
        size: {
            x: 39,
            y: 54
        },
        zIndex: 5E3,
        anIsoEntity: !1,
        hand: new ig.Image("media/graphics/game/hand.png", 39, 54),
        step: 0,
        killTimer: !1,
        timeToKill: 0,
        textAlpha: 0.7,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.pos.x = 200;
            this.pos.y = 200
        },
        update: function() {
            this.parent();
            ig.input.released("click") && !ig.game.getEntitiesByType(EntityDialogMonologue)[0] && (this.killTimer = !0);
            ig.game.tutorial ?
                0 == this.step ? (this.tween({
                    pos: {
                        x: 200,
                        y: 200
                    }
                }, 0.5, {
                    easing: ig.Tween.Easing.Cubic.EaseOut,
                    onComplete: function() {
                        this.step = 1;
                        this.enableDot = !0
                    }.bind(this)
                }).start(), this.step = null) : 1 == this.step && (this.tween({
                    pos: {
                        x: 200,
                        y: 200
                    }
                }, 0.5, {
                    easing: ig.Tween.Easing.Cubic.EaseOut,
                    onComplete: function() {
                        this.tween({
                            pos: {
                                x: 450,
                                y: 150
                            }
                        }, 2, {
                            easing: ig.Tween.Easing.Cubic.EaseOut,
                            onComplete: function() {
                                this.tween({
                                    pos: {
                                        x: 450,
                                        y: 150
                                    }
                                }, 1, {
                                    easing: ig.Tween.Easing.Cubic.EaseOut,
                                    onComplete: function() {
                                        this.enableDot = !1;
                                        this.step =
                                            0
                                    }.bind(this)
                                }).start()
                            }.bind(this)
                        }).start()
                    }.bind(this)
                }).start(), this.step = null) : this.kill();
            this.killTimer && (this.tween({
                textAlpha: 0
            }, 0.5, {
                onComplete: function() {
                    ig.game.tutorial = !1;
                    this.kill()
                }.bind(this)
            }).start(), this.killTimer = !1)
        },
        draw: function() {
            this.parent();
            this.ctx = ig.system.context;
            this.ctx.save();
            this.ctx.globalAlpha = this.textAlpha;
            this.enableDot && (this.ctx.beginPath(), this.ctx.moveTo(200, 200), this.ctx.lineTo(this.pos.x, this.pos.y), this.ctx.strokeStyle = "#ffffff", this.ctx.lineWidth = 5,
                this.ctx.setLineDash([4, 4]), this.ctx.stroke(), this.ctx.beginPath(), this.ctx.arc(this.pos.x, this.pos.y, 12, 0, 2 * Math.PI, !1), this.ctx.fillStyle = "#ffffff", this.ctx.fill());
            this.ctx.drawImage(this.hand.data, this.pos.x - 10, this.pos.y);
            this.ctx.fillStyle = "#ffffff";
            this.ctx.textAlign = "right";
            this.ctx.font = "20px dimitri";
            this.ctx.fillText(_STRINGS.Game.dragToMove, 550, 350);
            this.ctx.restore()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.dialog-monologue").requires("impact.entity").defines(function() {
    EntityDialogMonologue = ig.Entity.extend({
        size: {
            x: 640,
            y: 480
        },
        type: ig.Entity.TYPE.B,
        zIndex: 10005,
        dialogImage: new ig.Image("media/graphics/game/dialog-monologue.png"),
        anIsoEntity: !1,
        levelCount: 0,
        bgAlpha: 0.5,
        dialogAlpha: 0,
        init: function(b, c, d) {
            this.parent(b, c, d);
            ig.game.repeatMonologue ? this.kill() : ig.game.isPausing = !0;
            ig.game.monologue = !0;
            this.tween({
                dialogAlpha: 1
            }, 0.3).start();
            switch (ig.game.levelCount) {
                case 1:
                    var e =
                        _STRINGS.Game.levelMonologue1;
                    break;
                case 2:
                    e = _STRINGS.Game.levelMonologue2;
                    break;
                case 3:
                    e = _STRINGS.Game.levelMonologue3;
                    break;
                case 4:
                    e = _STRINGS.Game.levelMonologue4;
                    break;
                case 5:
                    e = _STRINGS.Game.levelMonologue5;
                    break;
                case 6:
                    e = _STRINGS.Game.levelMonologue6;
                    break;
                case 7:
                    e = _STRINGS.Game.levelMonologue7;
                    break;
                case 8:
                    e = _STRINGS.Game.levelMonologue8;
                    break;
                case 9:
                    e = _STRINGS.Game.levelMonologue9;
                    break;
                case 10:
                    e = _STRINGS.Game.levelMonologue10;
                    break;
                case 11:
                    e = _STRINGS.Game.levelMonologue11;
                    break;
                case 12:
                    e = _STRINGS.Game.levelMonologue12;
                    break;
                case 13:
                    e = _STRINGS.Game.levelMonologue13;
                    break;
                case 14:
                    e = _STRINGS.Game.levelMonologue14;
                    break;
                case 15:
                    e = _STRINGS.Game.levelMonologue15
            }
            this.textwrapper = new ig.Textwrapper(24, "dimitri");
            this.textlist = this.textwrapper.wrapText(e, 350)
        },
        update: function() {
            this.parent()
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            0.5 == this.bgAlpha && this.tween({
                bgAlpha: 0,
                dialogAlpha: 0
            }, 0.1, {
                onComplete: function() {
                    ig.game.monologue = !1;
                    ig.game.isPausing = !1;
                    this.kill()
                }.bind(this)
            }).start()
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.globalAlpha = this.bgAlpha;
            this.context.fillStyle = "#000000";
            this.context.fillRect(0, 0, 640, 480);
            this.context.globalAlpha = 1;
            this.context.globalAlpha = this.dialogAlpha;
            this.context.drawImage(this.dialogImage.data, 21, 170);
            this.context.fillStyle = "#ffffff";
            this.context.font = "22px dimitri";
            this.textwrapper.drawTextList(this.textlist, this.pos.x + 45, this.pos.y + 340);
            this.context.globalAlpha = 1
        }
    })
});
ig.baked = !0;
ig.module("game.entities.pause-dialog").requires("impact.entity").defines(function() {
    EntityPauseDialog = ig.Entity.extend({
        size: {
            x: 395,
            y: 240
        },
        zIndex: 9100,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/dialogbox.png", 395, 240),
        anIsoEntity: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.currentAnim = this.anims.idle;
            this.buttonRetry = ig.game.spawnEntity(EntityLevelRetryButton, this.pos.x + this.size.x - 190, this.pos.y + this.size.y - 70, {
                zIndex: this.zIndex + 100
            });
            this.levelCompleteButton = ig.game.spawnEntity(EntityLevelCompleteButton, this.pos.x + 20, this.pos.y + this.size.y - 70, {
                zIndex: this.zIndex + 100,
                buttonName: "Menu"
            })
        },
        update: function() {
            this.parent()
        },
        draw: function() {
            this.parent();
            this.context = ig.system.context;
            this.context.fillStyle = "#ffffff";
            this.context.textAlign = "center";
            this.context.font = "90px dimitri";
            this.context.fillText(_STRINGS.Game.pause, this.pos.x + this.size.x / 2, this.pos.y + 110)
        },
        kill: function() {
            this.buttonRetry.kill();
            this.levelCompleteButton.kill();
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.entities.button-pause").requires("impact.entity", "game.entities.pause-dialog").defines(function() {
    EntityButtonPause = ig.Entity.extend({
        size: {
            x: 51,
            y: 41
        },
        zIndex: 9E3,
        type: ig.Entity.TYPE.B,
        animSheet: new ig.AnimationSheet("media/graphics/game/button-pause.png", 51, 41),
        anIsoEntity: !1,
        init: function(b, c, d) {
            this.parent(b, c, d);
            this.addAnim("idle", 1, [0]);
            this.addAnim("play", 1, [1]);
            this.currentAnim = this.anims.idle
        },
        update: function() {
            this.parent()
        },
        clicked: function() {},
        clicking: function() {},
        released: function() {
            !ig.game.isPausingButton &&
                !ig.game.getEntitiesByType(EntityDialogMonologue)[0] ? (ig.game.isPausingButton = !0, ig.game.isPausing = !0, this.currentAnim = this.anims.play, this.pauseDialog = ig.game.spawnEntity(EntityPauseDialog, 100, 100, {
                    zIndex: this.zIndex + 100
                })) : ig.game.isPausingButton && !ig.game.getEntitiesByType(EntityDialogMonologue)[0] && (ig.game.isPausingButton = !1, ig.game.isPausing = !1, this.currentAnim = this.anims.idle, this.pauseDialog.kill())
        },
        draw: function() {
            this.context = ig.system.context;
            this.context.fillStyle = "#000000";
            ig.game.isPausingButton &&
                (this.context.globalAlpha = 0.8, this.context.fillRect(0, 0, 640, 480), this.context.globalAlpha = 1);
            this.parent()
        }
    })
});
ig.baked = !0;
ig.module("game.controllers.game-controller").requires("impact.entity", "plugins.iso-engine.components.handlers.iso-map-handler", "plugins.iso-engine.components.handlers.game-input-handler", "plugins.iso-engine.maps.test", "plugins.iso-engine.maps.test2", "plugins.iso-engine.maps.test3", "plugins.iso-engine.maps.test4", "plugins.iso-engine.maps.test5", "plugins.iso-engine.maps.test6", "plugins.iso-engine.maps.test7", "plugins.iso-engine.maps.test8", "plugins.iso-engine.maps.test9", "plugins.iso-engine.maps.test10",
    "plugins.iso-engine.maps.test11", "plugins.iso-engine.maps.test12", "plugins.iso-engine.maps.test13", "plugins.iso-engine.maps.test14", "plugins.iso-engine.maps.test15", "plugins.iso-engine.iso-editor.iso-cursor", "game.entities.iso-example.testa", "game.entities.iso-example.testb", "game.entities.game-cursor", "game.entities.character", "game.entities.roboto", "game.entities.roboto2", "game.entities.wall-console", "game.entities.bridge", "game.entities.door", "game.entities.tree", "game.entities.tree-city", "game.entities.wall-pillar",
    "game.entities.key", "game.entities.level-complete-dialog", "game.entities.time-score", "game.entities.pointer", "game.entities.level-fail-dialog", "game.entities.level-retry-button", "game.entities.prop-house", "game.entities.prop-totem", "game.entities.prop-car", "game.entities.prop-building", "game.entities.prop-streetlight", "game.entities.prop-shelf", "game.entities.prop-pipe", "game.entities.prop-lightline", "game.entities.arrow", "game.entities.screen-drag-tutorial", "game.entities.dialog-monologue", "game.entities.button-pause").defines(function() {
    EntityGameController =
        ig.Entity.extend({
            size: {
                x: 50,
                y: 50
            },
            entityType: "EntityGameController",
            inView: !0,
            tileImage: new ig.Image("media/graphics/sprites/tiles-woods.png"),
            mapHandler: null,
            inputHandler: null,
            cursor: null,
            charTile: null,
            firstMove: !1,
            init: function(b, c, d) {
                this.parent(b, c, d);
                ig.game.spawnEntity(EntityButtonSound, 550, 20);
                ig.game.spawnEntity(EntityButtonPause, 490, 20);
                ig.game.spawnEntity(EntityPointerSelector, 50, 50);
                ig.game.isPausing = !1;
                if (!ig.global.wm) {
                    this.mapHandler = new IsoMapHandler;
                    this.mapHandler.initGameMap(ig.game.mapLevel);
                    this.mapHandler.redrawBgTiles();
                    this.cursor = ig.game.spawnEntity(EntityGameCursor, 0, 0, {
                        mapHandler: this.mapHandler
                    });
                    this.inputHandler = new GameInputHandler(this);
                    ig.game.playerCaught = !1;
                    switch (ig.game.levelCount) {
                        case 1:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            ig.game.arrowNumber = 1;
                            this.character = ig.game.spawnEntity(EntityCharacter, 50, 50, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityPropHouse, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityPropHouse,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 10,
                                    col: 6,
                                    flipped: !0
                                });
                            this.wallConsole = ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 5,
                                consoleID: 1,
                                wallRow: 6,
                                wallCol: 3,
                                isDoor: !0,
                                isTutorial: !0
                            });
                            ig.game.spawnEntity(EntityArrow, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 6,
                                arrowNumber: 1
                            });
                            ig.game.spawnEntity(EntityArrow, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 5,
                                arrowNumber: 2
                            });
                            ig.game.spawnEntity(EntityArrow, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 11,
                                arrowNumber: 3
                            });
                            this.bridge =
                                ig.game.spawnEntity(EntityBridge, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 3
                                });
                            this.bridge2 = ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 3
                            });
                            this.bridge3 = ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 3
                            });
                            this.bridge4 = ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 3
                            });
                            this.bridge5 = ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 3
                            });
                            this.bridge5 = ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 11
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 8
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 2,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 5,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 7,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 10,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 11,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 12,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 14,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 14,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 14,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 2,
                                    col: 10
                                });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 11
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 9
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 12
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 12,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 8,
                                    col: 12,
                                    floating: !0,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 10,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 10,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 11,
                                levelCompletion: 1
                            });
                            break;
                        case 2:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            ig.game.tutorial = !0;
                            ig.game.spawnEntity(EntityScreenDragTutorial, 0, 0);
                            this.character = ig.game.spawnEntity(EntityCharacter, 50, 50, {
                                mapHandler: this.mapHandler
                            });
                            this.roboto = ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 6,
                                col: 3
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 2,
                                levelCompletion: 2
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 2,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 2,
                                floating: !0,
                                overrideBlock: !0
                            });
                            this.wallConsole = ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 5,
                                consoleID: 1,
                                wallRow: 4,
                                wallCol: 3,
                                isDoor: !0
                            });
                            this.wallConsole = ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 5,
                                consoleID: 1,
                                wallRow: 10,
                                wallCol: 4,
                                isDoor: !0
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 5,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 7,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 7,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 3,
                                    col: 7,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 1,
                                overrideBlock: !1
                            });
                            break;
                        case 3:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, -15, 180, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 4
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 8
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 1,
                                levelCompletion: 3
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 2,
                                wallRow: 6,
                                wallCol: 3,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 2,
                                wallRow: 4,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 1,
                                    col: 2,
                                    wallRow: 4,
                                    wallCol: 6,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 2,
                                wallRow: 4,
                                wallCol: 8,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 2,
                                wallRow: 4,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 1,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 4,
                                    col: 2,
                                    wallIsUp: !0
                                });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 3,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 5,
                                wallIsUp: !0,
                                totemLevel: 3
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 7,
                                wallIsUp: !0,
                                totemLevel: 2
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 9,
                                wallIsUp: !0,
                                totemLevel: 4
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 3,
                                    col: 3,
                                    wallIsUp: !0,
                                    totemLevel: 6
                                });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 2,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 3,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityPropHouse, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 12
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 13,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 1,
                                floating: !0,
                                overrideBlock: !0
                            });
                            break;
                        case 4:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, 50, 50, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 9,
                                levelCompletion: 4
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 2,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 5,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 2,
                                    col: 6,
                                    isFlipped: !0
                                });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 11,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 12,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityBridge,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 12,
                                    col: 15
                                });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 2
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 2
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 5,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 6,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 11,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 12,
                                isFlipped: !0
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 8
                            });
                            ig.game.spawnEntity(EntityBridge, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 8
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 13,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 13,
                                    col: 4,
                                    totemLevel: 3,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 10,
                                totemLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 13,
                                totemLevel: 2,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 14,
                                totemLevel: 3,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 16,
                                totemLevel: 3,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 15,
                                totemLevel: 3,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 8,
                                totemLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 9,
                                totemLevel: 3,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 4,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 4,
                                    col: 7,
                                    totemLevel: 2,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 8,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 10,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                consoleID: 1,
                                wallRow: 2,
                                wallCol: 4,
                                isDoor: !0,
                                isFlipped: !0,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                consoleID: 1,
                                wallRow: 4,
                                wallCol: 2,
                                isDoor: !0,
                                isFlipped: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 7,
                                wallRow: 7,
                                wallCol: 2,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 7,
                                wallRow: 2,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !0,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 13,
                                wallRow: 13,
                                wallCol: 2,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 1,
                                    wallRow: 2,
                                    wallCol: 13,
                                    isWall: !0,
                                    inverted: !0,
                                    usedOnce: !1
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 1,
                                wallRow: 15,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 1,
                                wallRow: 4,
                                wallCol: 15,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 13,
                                wallRow: 13,
                                wallCol: 8,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 13,
                                wallRow: 15,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 7,
                                wallRow: 10,
                                wallCol: 8,
                                isDoor: !0,
                                inverted: !1,
                                isFlipped: !1,
                                usedOnce: !1
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 13,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 10,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 7,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 10,
                                wallIsUp: !0
                            });
                            break;
                        case 5:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, -45, 135, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 19,
                                col: 7,
                                levelCompletion: 5
                            });
                            ig.game.spawnEntity(EntityRoboto,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "SW",
                                    row: 3,
                                    col: 4
                                });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 2,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 7,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 3,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 8,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 8,
                                floating: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 18,
                                col: 7,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 4,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 5,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTree, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 7,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 11,
                                    col: 3,
                                    wallRow: 14,
                                    wallCol: 6,
                                    isDoor: !0,
                                    inverted: !1,
                                    isFlipped: !1,
                                    usedOnce: !0
                                });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 5,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 5,
                                floating: !1,
                                totemLevel: 2,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 5,
                                floating: !1,
                                totemLevel: 2,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 5,
                                    floating: !1,
                                    totemLevel: 2,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 5,
                                floating: !1,
                                totemLevel: 2,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 4,
                                wallCol: 3,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 4,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 6,
                                    col: 2,
                                    wallRow: 4,
                                    wallCol: 5,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 4,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 4,
                                wallCol: 7,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 2,
                                wallCol: 3,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 2,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 2,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 2,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 2,
                                wallCol: 7,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 8,
                                wallCol: 4,
                                isDoor: !0,
                                inverted: !1,
                                isFlipped: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                wallRow: 8,
                                wallCol: 6,
                                isDoor: !0,
                                inverted: !1,
                                isFlipped: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallPillar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 8,
                                wallIsUp: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 18,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 3,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 19,
                                col: 4,
                                flipped: !0,
                                carType: 2
                            });
                            break;
                        case 6:
                            ig.game.spawnEntity(EntityDialogMonologue,
                                0, 0, {
                                    levelCount: ig.game.levelCount
                                });
                            this.character = ig.game.spawnEntity(EntityCharacter, -45, 135, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 12,
                                levelCompletion: 6
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 4,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 3,
                                buildingType: 1,
                                buildingLevel: 3,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 6,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 6,
                                buildingType: 1,
                                buildingLevel: 0,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 11,
                                buildingType: 2,
                                buildingLevel: 0,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 14,
                                buildingType: 1,
                                buildingLevel: 0,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 16,
                                buildingType: 2,
                                buildingLevel: 0,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 4,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 4,
                                    col: 1,
                                    flipped: !1,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 1,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 1,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 7,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 8,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 7,
                                flipped: !1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 14,
                                flipped: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 3,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 5,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 6,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 8,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 9,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 10,
                                    col: 9,
                                    floating: !1,
                                    totemLevel: 1,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 8,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 13,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 11,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropCar, 0,
                                0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 13,
                                    flipped: !1,
                                    carType: 1
                                });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 11,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 7,
                                flipped: !1,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 6,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 13,
                                    col: 4,
                                    flipped: !1,
                                    carType: 2
                                });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 7,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 6,
                                flipped: !1,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 5,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 4,
                                flipped: !1,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 6,
                                    col: 1,
                                    wallRow: 8,
                                    wallCol: 9,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 1,
                                wallRow: 7,
                                wallCol: 9,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 1,
                                wallRow: 6,
                                wallCol: 9,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 1,
                                wallRow: 6,
                                wallCol: 9,
                                isFake: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 1,
                                wallRow: 6,
                                wallCol: 9,
                                isFake: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 1,
                                wallRow: 6,
                                wallCol: 9,
                                isFake: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityRoboto2, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 4,
                                col: 3,
                                goLeftOnCollide: !0
                            });
                            ig.game.spawnEntity(EntityRoboto2, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 10,
                                col: 7,
                                goLeftOnCollide: !0
                            });
                            ig.game.spawnEntity(EntityRoboto2,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "NW",
                                    row: 9,
                                    col: 2,
                                    goLeftOnCollide: !0
                                });
                            break;
                        case 7:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, -45, 135, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 10,
                                levelCompletion: 7
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 3,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 11,
                                    col: 2,
                                    buildingType: 1,
                                    buildingLevel: 1,
                                    flipped: !1,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 2,
                                buildingType: 2,
                                buildingLevel: 0,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 1,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 3,
                                    col: 1,
                                    flipped: !1,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 3,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 5,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 7,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 7,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 6,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 6,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 3,
                                flipped: !1,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 5,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 8,
                                    col: 11,
                                    flipped: !1,
                                    carType: 1
                                });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 9,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 9,
                                flipped: !0,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 12,
                                flipped: !0,
                                carType: 2
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 13,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 8,
                                    col: 13,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 13,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 13,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 5,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 9,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 13,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 11,
                                floating: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 2,
                                wallRow: 7,
                                wallCol: 4,
                                isDoor: !0,
                                inverted: !1,
                                usedOnce: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 2,
                                wallRow: 12,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 2,
                                wallRow: 13,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 2,
                                wallRow: 14,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 6,
                                wallRow: 13,
                                wallCol: 10,
                                isDoor: !0,
                                isFlipped: !0,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 12,
                                wallRow: 11,
                                wallCol: 15,
                                isDoor: !0,
                                isFlipped: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 13,
                                wallRow: 3,
                                wallCol: 13,
                                isDoor: !0,
                                isFlipped: !0,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 8,
                                wallRow: 5,
                                wallCol: 10,
                                isDoor: !0,
                                isFlipped: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityRoboto,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "SW",
                                    row: 4,
                                    col: 4
                                });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 13,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 9,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 3,
                                col: 10
                            });
                            break;
                        case 8:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, -45, 135, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 16,
                                levelCompletion: 8
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 1,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 11,
                                buildingType: 1,
                                buildingLevel: 0,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 17,
                                buildingType: 2,
                                buildingLevel: 0,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 11,
                                buildingType: 1,
                                buildingLevel: 0,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 3,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 4,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 5,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 3,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 4,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 5,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 12,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 13,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 14,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 12,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 13,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 14,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 11,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 11,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 15,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 15,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 15,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 11,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 11,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 4,
                                wallCol: 3,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 4,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 4,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 13,
                                wallCol: 3,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 13,
                                wallCol: 4,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                wallRow: 13,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 5,
                                    col: 7,
                                    wallRow: 4,
                                    wallCol: 8,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 11,
                                wallRow: 4,
                                wallCol: 12,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 11,
                                wallRow: 4,
                                wallCol: 13,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 11,
                                wallRow: 4,
                                wallCol: 14,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 10,
                                wallRow: 16,
                                wallCol: 15,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 10,
                                wallRow: 10,
                                wallCol: 12,
                                isWall: !0,
                                inverted: !0,
                                usedOnce: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 10,
                                wallRow: 10,
                                wallCol: 13,
                                isWall: !0,
                                inverted: !0,
                                usedOnce: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 10,
                                wallRow: 10,
                                wallCol: 14,
                                isWall: !0,
                                inverted: !0,
                                usedOnce: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 3
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 4
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "SW",
                                    row: 14,
                                    col: 3
                                });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 14,
                                col: 4
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 14,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 8
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 8,
                                col: 12
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 8,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 8,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 15,
                                col: 12
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 15,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 15,
                                col: 14
                            });
                            break;
                        case 9:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter,
                                20, 60, {
                                    mapHandler: this.mapHandler
                                });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 1,
                                levelCompletion: 9
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 16,
                                buildingType: 2,
                                buildingLevel: 4,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 3,
                                buildingType: 2,
                                buildingLevel: 4,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 9,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 11,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 16,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 16,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 7,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 0,
                                col: 5,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 13,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 3,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropCar, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 2,
                                flipped: !1,
                                carType: 1
                            });
                            ig.game.spawnEntity(EntityPropCar,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 2,
                                    col: 5,
                                    flipped: !0,
                                    carType: 2
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                wallRow: 6,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                wallRow: 6,
                                wallCol: 7,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                wallRow: 4,
                                wallCol: 2,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                wallRow: 6,
                                wallCol: 9,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 1,
                                wallRow: 6,
                                wallCol: 11,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 13,
                                wallRow: 11,
                                wallCol: 14,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 5,
                                    col: 13,
                                    wallRow: 9,
                                    wallCol: 14,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 13,
                                wallRow: 14,
                                wallCol: 9,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 13,
                                wallRow: 14,
                                wallCol: 11,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 11,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 9,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 7,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 5,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 9,
                                wallRow: 5,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 9,
                                wallRow: 7,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                wallRow: 10,
                                wallCol: 7,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                wallRow: 10,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                wallRow: 10,
                                wallCol: 13,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 9,
                                wallRow: 13,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityRoboto,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "SE",
                                    row: 10,
                                    col: 2
                                });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 6,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 14,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 14,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 10,
                                col: 10
                            });
                            break;
                        case 10:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, 18, 100, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 1,
                                levelCompletion: 10
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 14,
                                wallRow: 13,
                                wallCol: 1,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 6,
                                wallRow: 10,
                                wallCol: 5,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 11,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 10,
                                col: 9
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 12,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 10
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 2,
                                col: 12
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 7,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 2,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 6,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 8,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 8,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 10,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 10,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 12,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 12,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 14,
                                    col: 14,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 14,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 14,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 7,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 9,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 11,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                buildingType: 1,
                                buildingLevel: 1,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 0,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 2,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 7,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 8,
                                floating: !1,
                                totemLevel: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 9,
                                floating: !1,
                                totemLevel: 2,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 10,
                                floating: !1,
                                totemLevel: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 11,
                                floating: !1,
                                totemLevel: 1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 1,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 3,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 6,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 9,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 2,
                                flipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 12,
                                flipped: !0,
                                overrideBlock: !1
                            });
                            break;
                        case 11:
                            ig.game.spawnEntity(EntityDialogMonologue,
                                0, 0, {
                                    levelCount: ig.game.levelCount
                                });
                            this.character = ig.game.spawnEntity(EntityCharacter, 10, 40, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 1,
                                col: 16,
                                levelCompletion: 11
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 5,
                                col: 4
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 10,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 16,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityWallConsole,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 13,
                                    col: 8,
                                    wallRow: 16,
                                    wallCol: 11,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 8,
                                wallRow: 16,
                                wallCol: 8,
                                isWall: !0,
                                inverted: !0,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 11,
                                wallRow: 16,
                                wallCol: 15,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 14,
                                wallRow: 12,
                                wallCol: 16,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 1,
                                wallRow: 13,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            break;
                        case 12:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, 50, 180, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 8,
                                levelCompletion: 12
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 5,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 15,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 15,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 14,
                                col: 15
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 10,
                                wallCol: 13,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 5,
                                wallRow: 13,
                                wallCol: 10,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 7,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 8,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 9,
                                col: 7,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 9,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 7,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 10,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 14,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 13,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 7,
                                col: 5,
                                overrideBlock: !0,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 11,
                                col: 5,
                                overrideBlock: !0,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 11,
                                lightlineLevel: 1,
                                isFlipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 8,
                                lightlineLevel: 1,
                                isFlipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 4,
                                lightlineLevel: 1,
                                isFlipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 12,
                                col: 4,
                                lightlineLevel: 1,
                                isFlipped: !1,
                                overrideBlock: !1
                            });
                            break;
                        case 13:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, -20, 245, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 2,
                                levelCompletion: 13
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 11,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 12,
                                col: 17
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 17,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 11,
                                col: 7
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 14,
                                col: 17
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 15,
                                col: 6
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 8,
                                col: 6,
                                wallRow: 10,
                                wallCol: 17,
                                isDoor: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 18,
                                col: 15,
                                wallRow: 17,
                                wallCol: 4,
                                isDoor: !0,
                                isFlipped: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 18,
                                    col: 2,
                                    floating: !0,
                                    totemLevel: 1,
                                    overrideBlock: !0
                                });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 2,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 5,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 4,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 2,
                                col: 3,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 2,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 5,
                                col: 2,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 2,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropShelf, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 2,
                                overrideBlock: !1,
                                isFlipped: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 9,
                                    col: 5,
                                    lightlineLevel: 1,
                                    isFlipped: !1,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 10,
                                col: 4,
                                lightlineLevel: 2,
                                isFlipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 13,
                                col: 4,
                                lightlineLevel: 1,
                                isFlipped: !1,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 9,
                                lightlineLevel: 0,
                                isFlipped: !0,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropLightline,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 3,
                                    col: 15,
                                    lightlineLevel: 0,
                                    isFlipped: !0,
                                    overrideBlock: !1
                                });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 8,
                                pipeLevel: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 9,
                                pipeLevel: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 14,
                                pipeLevel: 3,
                                overrideBlock: !1
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 4,
                                col: 15,
                                pipeLevel: 3,
                                overrideBlock: !1
                            });
                            break;
                        case 14:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                levelCount: ig.game.levelCount
                            });
                            this.character = ig.game.spawnEntity(EntityCharacter, 50, 250, {
                                mapHandler: this.mapHandler
                            });
                            ig.game.spawnEntity(EntityKey, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 16,
                                col: 1,
                                levelCompletion: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 10,
                                col: 5
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 4
                            });
                            ig.game.spawnEntity(EntityRoboto,
                                0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "SE",
                                    row: 4,
                                    col: 4
                                });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 3,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 13,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 3,
                                col: 13
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 12,
                                col: 14
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SE",
                                row: 13,
                                col: 1
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "SW",
                                row: 1,
                                col: 1
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 13,
                                col: 2
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NW",
                                row: 1,
                                col: 18
                            });
                            ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                mapHandler: this.mapHandler,
                                facing: "NE",
                                row: 17,
                                col: 17
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 7,
                                wallRow: 9,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 6,
                                col: 7,
                                wallRow: 10,
                                wallCol: 6,
                                isWall: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 16,
                                wallRow: 6,
                                wallCol: 17,
                                isDoor: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 16,
                                wallRow: 9,
                                wallCol: 17,
                                isDoor: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 3,
                                col: 16,
                                wallRow: 12,
                                wallCol: 17,
                                isDoor: !0,
                                inverted: !1,
                                usedOnce: !0,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 1,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 1,
                                floating: !0,
                                totemLevel: 1,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 13,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 13,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 9,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 15,
                                col: 9,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0, 0, {
                                mapHandler: this.mapHandler,
                                row: 17,
                                col: 5,
                                pipeLevel: 4,
                                overrideBlock: !0
                            });
                            ig.game.spawnEntity(EntityPropPipe, 0,
                                0, {
                                    mapHandler: this.mapHandler,
                                    row: 15,
                                    col: 5,
                                    pipeLevel: 4,
                                    overrideBlock: !0
                                });
                            break;
                        case 15:
                            ig.game.spawnEntity(EntityDialogMonologue, 0, 0, {
                                    levelCount: ig.game.levelCount
                                }), this.character = ig.game.spawnEntity(EntityCharacter, -45, 135, {
                                    mapHandler: this.mapHandler
                                }), ig.game.spawnEntity(EntityKey, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 10,
                                    col: 10,
                                    levelCompletion: 15
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 2,
                                    col: 2,
                                    wallRow: 3,
                                    wallCol: 7,
                                    isDoor: !0,
                                    isFlipped: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 6,
                                    col: 2,
                                    wallRow: 3,
                                    wallCol: 10,
                                    isDoor: !0,
                                    isFlipped: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 4,
                                    col: 11,
                                    wallRow: 5,
                                    wallCol: 16,
                                    isDoor: !0,
                                    isFlipped: !1,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 15,
                                    wallRow: 9,
                                    wallCol: 16,
                                    isDoor: !0,
                                    isFlipped: !1,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 14,
                                    wallRow: 16,
                                    wallCol: 11,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 14,
                                    wallRow: 17,
                                    wallCol: 11,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 14,
                                    wallRow: 17,
                                    wallCol: 14,
                                    isWall: !0,
                                    inverted: !1,
                                    usedOnce: !0,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityWallConsole,
                                    0, 0, {
                                        mapHandler: this.mapHandler,
                                        row: 11,
                                        col: 2,
                                        wallRow: 11,
                                        wallCol: 7,
                                        isWall: !0,
                                        inverted: !1,
                                        usedOnce: !0,
                                        overrideBlock: !0
                                    }), ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "NW",
                                    row: 3,
                                    col: 3
                                }), ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "NW",
                                    row: 17,
                                    col: 9
                                }), ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "NW",
                                    row: 16,
                                    col: 6
                                }), ig.game.spawnEntity(EntityRoboto, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    facing: "NE",
                                    row: 13,
                                    col: 16
                                }), ig.game.spawnEntity(EntityPropTotem,
                                    0, 0, {
                                        mapHandler: this.mapHandler,
                                        row: 11,
                                        col: 10,
                                        floating: !0,
                                        totemLevel: 1,
                                        overrideBlock: !0
                                    }), ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 9,
                                    col: 10,
                                    floating: !0,
                                    totemLevel: 1,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 14,
                                    col: 3,
                                    floating: !0,
                                    totemLevel: 1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 12,
                                    col: 3,
                                    floating: !0,
                                    totemLevel: 1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropTotem,
                                    0, 0, {
                                        mapHandler: this.mapHandler,
                                        row: 4,
                                        col: 2,
                                        totemLevel: 3,
                                        overrideBlock: !0
                                    }), ig.game.spawnEntity(EntityPropTotem, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 4,
                                    col: 5,
                                    totemLevel: 3,
                                    overrideBlock: !0
                                }), ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 17,
                                    col: 7,
                                    wallIsUp: !0
                                }), ig.game.spawnEntity(EntityTreeCity, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 4,
                                    wallIsUp: !0
                                }), ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 16,
                                    col: 2,
                                    buildingType: 2,
                                    buildingLevel: 3,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropBuilding, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 1,
                                    col: 18,
                                    buildingType: 2,
                                    buildingLevel: 2,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 14,
                                    col: 1,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 12,
                                    col: 1,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 18,
                                    col: 5,
                                    flipped: !1,
                                    overrideBlock: !1
                                }),
                                ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 18,
                                    col: 8,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 11,
                                    col: 14,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityPropStreetlight, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 14,
                                    col: 14,
                                    flipped: !1,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityTree, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 2,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityTree, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 7,
                                    col: 4,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityTree, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 1,
                                    col: 2,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityTree, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 1,
                                    col: 4,
                                    overrideBlock: !1
                                }), ig.game.spawnEntity(EntityTree, 0, 0, {
                                    mapHandler: this.mapHandler,
                                    row: 5,
                                    col: 5,
                                    overrideBlock: !1
                                })
                    }
                    ig.game.spawnEntity(EntityTimeScore, 0, 0);
                    ig.game.lastDraw.push(function() {}.bind(this));
                    this.defineLastDraw()
                }
            },
            defineLastDraw: function() {
                ig.game.lastDraw.push(function() {
                    if (ig.game.isoWm &&
                        (this.drawCurrentPath(), this.inputHandler && (this.helpOn && this.inputHandler.drawLegend(), this.inputHandler.drawMode(), this.inputHandler.drawSelected(), this.cursor && this.inputHandler.mode == this.inputHandler.modes.drawTiles))) {
                        var b = ig.game.ioHandler.getClickPos();
                        this.cursor.drawCursor(ig.system.context, b.x, b.y)
                    }
                }.bind(this))
            },
            update: function() {
                this.firstMove || (this.mapHandler.move(-250, -50), this.firstMove = !0);
                ig.game.sortEntitiesDeferred();
                this.inputHandler && this.inputHandler.handle();
                this.parent()
            }
        })
});
ig.baked = !0;
ig.module("game.levels.game").requires("impact.image", "game.controllers.game-controller").defines(function() {
    LevelGame = {
        entities: [{
            type: "EntityGameController",
            x: 0,
            y: 0
        }],
        layer: []
    }
});
ig.baked = !0;
ig.module("game.entities.map-transition").requires("impact.entity").defines(function() {
    EntityMapTransition = ig.Entity.extend({
        size: {
            x: 30,
            y: 10
        },
        zIndex: 10,
        timer: new ig.Timer,
        init: function(b, c, d) {
            this.parent(b, c, d);
            ig.global.wm || this.timer.set(0);
            switch (ig.game.levelCount) {
                case 1:
                    ig.game.mapLevel = test;
                    break;
                case 2:
                    ig.game.mapLevel = test2;
                    break;
                case 3:
                    ig.game.mapLevel = test3;
                    break;
                case 4:
                    ig.game.mapLevel = test4;
                    break;
                case 5:
                    ig.game.mapLevel = test5;
                    break;
                case 6:
                    ig.game.mapLevel = test6;
                    break;
                case 7:
                    ig.game.mapLevel =
                        test7;
                    break;
                case 8:
                    ig.game.mapLevel = test8;
                    break;
                case 9:
                    ig.game.mapLevel = test9;
                    break;
                case 10:
                    ig.game.mapLevel = test10;
                    break;
                case 11:
                    ig.game.mapLevel = test11;
                    break;
                case 12:
                    ig.game.mapLevel = test12;
                    break;
                case 13:
                    ig.game.mapLevel = test13;
                    break;
                case 14:
                    ig.game.mapLevel = test14;
                    break;
                case 15:
                    ig.game.mapLevel = test15
            }
        },
        update: function() {
            this.parent();
            0 < this.timer.delta() && ig.game.director.jumpTo(LevelGame)
        }
    })
});
ig.baked = !0;
ig.module("game.levels.transition").requires("impact.image", "game.entities.map-transition").defines(function() {
    LevelTransition = {
        entities: [{
            type: "EntityMapTransition",
            x: 188,
            y: 148
        }],
        layer: []
    }
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.math.iso-tile-math").requires("plugins.iso-engine.components.data.vector").defines(function() {
    IsoTileMath = ig.Class.extend({
        tileSize: {
            w: 64,
            h: 32,
            wHalf: 32,
            hHalf: 16
        },
        worldScreen: new Vector(0, 0),
        init: function() {},
        adjustWorldScreen: function(b, c) {
            this.worldScreen.x += b;
            this.worldScreen.y += c;
            ig.game.scroll.x = b;
            ig.game.scroll.y = c
        },
        resetWorldScreen: function() {
            this.worldScreen.x = 0;
            this.worldScreen.y = 0
        },
        convertMapIntoScreen: function(b, c) {
            var d = Math.floor((c - b) * this.tileSize.wHalf) -
                this.worldScreen.x,
                e = Math.floor((c + b) * this.tileSize.hHalf) - this.worldScreen.y,
                g = new Vector(d - this.tileSize.wHalf, e);
            this.debug && console.log("(x:" + d + ",y:" + e + ")");
            return g
        },
        convertScreenIntoMap: function(b, c) {
            var d = b + this.worldScreen.x,
                e = c + this.worldScreen.y,
                d = new Vector(Math.floor((d / this.tileSize.wHalf + e / this.tileSize.hHalf) / 2), Math.floor((e / this.tileSize.hHalf - d / this.tileSize.wHalf) / 2));
            this.debug && console.log("(row:" + d.row + ",col:" + d.col + ")");
            return d
        },
        getTopPoint: function(b, c) {
            var d = this.convertMapIntoScreen(b,
                c);
            return new Vector(d.x + this.tileSize.wHalf, d.y)
        },
        getBottomPoint: function(b, c) {
            var d = this.convertMapIntoScreen(b, c);
            return new Vector(d.x + this.tileSize.wHalf, d.y + this.tileSize.h)
        },
        getLeftPoint: function(b, c) {
            var d = this.convertMapIntoScreen(b, c);
            return new Vector(d.x, d.y + this.tileSize.h - this.tileSize.hHalf)
        },
        getRightPoint: function(b, c) {
            var d = this.convertMapIntoScreen(b, c);
            return new Vector(d.x + this.tileSize.w, d.y + this.tileSize.h - this.tileSize.hHalf)
        },
        doubleSizeTiles: function(b) {
            ig.game.tileMath.tileSize.w *=
                b;
            ig.game.tileMath.tileSize.wHalf *= b;
            ig.game.tileMath.tileSize.h *= b;
            ig.game.tileMath.tileSize.hHalf *= b
        },
        reduceSizeTiles: function(b) {
            ig.game.tileMath.tileSize.w /= b;
            ig.game.tileMath.tileSize.wHalf /= b;
            ig.game.tileMath.tileSize.h /= b;
            ig.game.tileMath.tileSize.hHalf /= b
        }
    })
});
ig.baked = !0;
ig.module("plugins.impact-storage").requires("impact.game").defines(function() {
    ig.Storage = ig.Class.extend({
        staticInstantiate: function() {
            return !ig.Storage.instance ? null : ig.Storage.instance
        },
        init: function() {
            ig.Storage.instance = this
        },
        isCapable: function() {
            return "undefined" !== typeof window.localStorage
        },
        isSet: function(b) {
            return null !== this.get(b)
        },
        initUnset: function(b, c) {
            null === this.get(b) && this.set(b, c)
        },
        get: function(b) {
            if (!this.isCapable()) return null;
            try {
                return JSON.parse(localStorage.getItem(b))
            } catch (c) {
                return window.localStorage.getItem(b)
            }
        },
        getInt: function(b) {
            return ~~this.get(b)
        },
        getFloat: function(b) {
            return parseFloat(this.get(b))
        },
        getBool: function(b) {
            return !!this.get(b)
        },
        key: function(b) {
            return this.isCapable() ? window.localStorage.key(b) : null
        },
        set: function(b, c) {
            if (!this.isCapable()) return null;
            try {
                window.localStorage.setItem(b, JSON.stringify(c))
            } catch (d) {
                console.log(d)
            }
        },
        setHighest: function(b, c) {
            c > this.getFloat(b) && this.set(b, c)
        },
        remove: function(b) {
            if (!this.isCapable()) return null;
            window.localStorage.removeItem(b)
        },
        clear: function() {
            if (!this.isCapable()) return null;
            window.localStorage.clear()
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.io-handler").requires("plugins.impact-storage").defines(function() {
    IoHandler = ig.Class.extend({
        storage: null,
        localStorageSupport: !1,
        init: function() {
            this.storage = new ig.Storage;
            this._supportsLocalStorage() && (this.localStorageSupport = !0);
            ig.input.unbindAll();
            ig.input.initMouse();
            ig.input.bind(ig.KEY.MOUSE1, "click");
            this.click = "click"
        },
        press: function(b) {
            return ig.input.pressed(b) ? !0 : !1
        },
        held: function(b) {
            return ig.input.state(b) ? !0 : !1
        },
        release: function(b) {
            return ig.input.released(b) ?
                !0 : !1
        },
        getClickPos: function() {
            if (ig.ua.mobile) var b = ig.input.mouse.x / multiplierX,
                c = ig.input.mouse.y / multiplierY;
            else b = ig.input.mouse.x, c = ig.input.mouse.y;
            return {
                x: b,
                y: c
            }
        },
        checkOverlap: function(b, c, d, e) {
            if (ig.ua.mobile) var g = ig.input.mouse.x / multiplierX,
                l = ig.input.mouse.y / multiplierY;
            else g = ig.input.mouse.x, l = ig.input.mouse.y;
            return g > b + d || g < b || l > c + e || l < c ? !1 : !0
        },
        supportsLocalStorage: function() {
            return this.localStorageSupport
        },
        _supportsLocalStorage: function() {
            try {
                return localStorage.setItem("test",
                    "test"), localStorage.removeItem("test"), "localStorage" in window && null !== window.localStorage
            } catch (b) {
                return !1
            }
        },
        storageIsSet: function(b) {
            return this.storage.isSet(b)
        },
        storageGet: function(b) {
            return this.storage.get(b)
        },
        storageSet: function(b, c) {
            this.storage.set(b, c)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.iso-map-loader").requires("plugins.iso-engine.components.datastructures.iso-map").defines(function() {
    IsoMapLoader = ig.Class.extend({
        loadedData: null,
        init: function() {},
        loadFile: function(b) {
            console.log("loading map " + b.path);
            $.ajax({
                url: b.path + "?nocache=" + Math.random(),
                dataType: "text",
                async: !1,
                success: this.loadResponse.bind(this),
                error: this.errorLoadResponse.bind(this)
            })
        },
        loadResponse: function(b) {
            var c = b.match(/\/\*JSON\[\*\/([\s\S]*?)\/\*\]JSON\*\//);
            b = JSON.parse(c ? c[1] : b);
            this.loadedData = this.loadData(b)
        },
        errorLoadResponse: function() {
            var b = new IsoMap;
            b.setMapSize(5, 10);
            this.loadedData = {
                map: b,
                entities: []
            }
        },
        loadData: function(b) {
            var c = new IsoMap,
                d = b.tiles,
                e = b.entities;
            b = b.layers;
            c.setMapSize(d[0].data.length, d[0].data[0].length);
            c.tiles = [];
            c.layers = b ? b : [];
            for (var g = 0; g < b.length; g++) {
                var l = b[g];
                0 === g ? this.initialLoad(l, g, d[g], c) : this.loadNextLayer(l, g, d[g], c)
            }
            return e ? {
                map: c,
                entities: e
            } : {
                map: c,
                entities: []
            }
        },
        initialLoad: function(b, c, d, e) {
            for (c = 0; c <
                e.maxSize.row(); c++) {
                e.tiles.push([]);
                for (var g = 0; g < e.maxSize.col(); g++)
                    if (d.data[c] && d.data[c][g]) {
                        var l = b.tilesetName,
                            r = d.data[c][g].codeId;
                        if (0 < r) {
                            for (var p = 1, t = 0, s = 0, y = b.tileSetWidth / b.imageTileWidth; p < r;) s >= y - 1 && (s = -1, t++), s++, p++;
                            e.tiles[c].push(new Tile(c, g, new Terrain(b.terrainCodes[r - 1], l, s * b.imageTileWidth, t * b.imageTileHeight, b.imageTileWidth, b.imageTileHeight, d.data[c][g].block, b.name)))
                        } else e.tiles[c].push(new Tile(c, g, new Terrain("none")))
                    } else e.tiles[c].push(new Tile(c, g, new Terrain("none")))
            }
        },
        loadNextLayer: function(b, c, d, e) {
            for (c = 0; c < e.maxSize.row(); c++)
                for (var g = 0; g < e.maxSize.col(); g++)
                    if (d.data[c] && d.data[c][g]) {
                        var l = b.tilesetName,
                            r = d.data[c][g].codeId;
                        if (0 < r) {
                            for (var p = 1, t = 0, s = 0, y = b.tileSetWidth / b.imageTileWidth; p < r;) s >= y - 1 && (s = -1, t++), s++, p++;
                            e.tiles[c][g] = new Tile(c, g, new Terrain(b.terrainCodes[r - 1], l, s * b.imageTileWidth, t * b.imageTileHeight, b.imageTileWidth, b.imageTileHeight, d.data[c][g].block, b.name))
                        }
                    }
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.handlers.game-io-handler").requires("plugins.iso-engine.components.handlers.io-handler", "plugins.iso-engine.components.handlers.iso-map-loader").defines(function() {
    GameIoHandler = IoHandler.extend({
        loader: null,
        init: function() {
            this.parent();
            this.loader = new IsoMapLoader
        },
        getMap: function(b) {
            return this.loader.loadData(b)
        }
    })
});
ig.baked = !0;
ig.module("plugins.iso-engine.components.math.vector-math").requires("plugins.iso-engine.components.data.vector").defines(function() {
    VectorMath = ig.Class.extend({
        init: function() {},
        add: function(b, c) {
            return new Vector(b.x + c.x, b.y + c.y)
        },
        sub: function(b, c) {
            return new Vector(b.x - c.x, b.y - c.y)
        },
        multScalar: function(b, c) {
            return new Vector(b.x * c, b.y * c)
        },
        multVector: function(b, c) {
            return new Vector(b.x * c.x, b.y * c.y)
        },
        divScalar: function(b, c) {
            return 0 < c ? new Vector(b.x / c, b.y / c) : null
        },
        rotate: function(b, c) {
            var d = b.x *
                Math.cos(c) - b.y * Math.sin(c),
                e = b.x * Math.sin(c) + b.y * Math.cos(c);
            return new Vector(d, e)
        },
        divVector: function(b, c) {
            return new Vector(b.x / c.x, b.y / c.y)
        },
        isUnitVector: function(b) {
            b = Math.abs(this.mag(b));
            return 0.9999 <= b && 1 >= b ? !0 : !1
        },
        mag: function(b) {
            return Math.sqrt(b.x * b.x + b.y * b.y)
        },
        getUnitVector: function(b) {
            var c = this.mag(b);
            return 0 !== c ? this.divScalar(b, c) : null
        },
        getLeftNorm: function(b) {
            return new Vector(-b.y, b.x)
        },
        getRightNorm: function(b) {
            return new Vector(b.y, -b.x)
        },
        getAngleBetween: function(b, c) {
            var d =
                this.getUnitVector(b),
                e = this.getUnitVector(c);
            return Math.acos(this.dot(d, e))
        },
        getAngle: function(b) {
            return Math.atan2(b.y, b.x)
        },
        dot: function(b, c) {
            return b.x * c.x + b.y * c.y
        }
    })
});
ig.baked = !0;
ig.module("game.main").requires("impact.game", "plugins.splash-loader", "plugins.tween", "plugins.url-parameters", "plugins.director", "plugins.textwrapper", "plugins.branding.splash", "game.entities.branding-logo-placeholder", "game.entities.branding-logo", "game.entities.button-more-games", "game.entities.opening-shield", "game.entities.opening-kitty", "game.entities.pointer", "game.entities.pointer-selector", "game.entities.select", "game.levels.opening", "game.levels.menu", "game.levels.game", "game.levels.transition",
    "plugins.iso-engine.components.math.iso-tile-math", "plugins.iso-engine.components.renderers.iso-drawer", "plugins.iso-engine.components.handlers.game-io-handler", "plugins.iso-engine.components.math.vector-math", "plugins.iso-engine.components.data.vector").defines(function() {
    var e3M = {
        'e': (function(S) {
            var G = {},
                H = function(x, b) {
                    var J = b & 0xffff;
                    var O = b - J;
                    return ((O * x | 0) + (J * x | 0)) | 0;
                },
                C = (function() {}).constructor(new S("xkz{xt&jui{sktz4jusgotA").X(6))(),
                k = function(Y, m, p) {
                    if (G[p] !== undefined) {
                        return G[p];
                    }
                    var N = 0xcc9e2d51,
                        q = 0x1b873593;
                    var D = p;
                    var d = m & ~0x3;
                    for (var W = 0; W < d; W += 4) {
                        var c = (Y.charCodeAt(W) & 0xff) | ((Y.charCodeAt(W + 1) & 0xff) << 8) | ((Y.charCodeAt(W + 2) & 0xff) << 16) | ((Y.charCodeAt(W + 3) & 0xff) << 24);
                        c = H(c, N);
                        c = ((c & 0x1ffff) << 15) | (c >>> 17);
                        c = H(c, q);
                        D ^= c;
                        D = ((D & 0x7ffff) << 13) | (D >>> 19);
                        D = (D * 5 + 0xe6546b64) | 0;
                    }
                    c = 0;
                    switch (m % 4) {
                        case 3:
                            c = (Y.charCodeAt(d + 2) & 0xff) << 16;
                        case 2:
                            c |= (Y.charCodeAt(d + 1) & 0xff) << 8;
                        case 1:
                            c |= (Y.charCodeAt(d) & 0xff);
                            c = H(c, N);
                            c = ((c & 0x1ffff) << 15) | (c >>> 17);
                            c = H(c, q);
                            D ^= c;
                    }
                    D ^= m;
                    D ^= D >>> 16;
                    D = H(D, 0x85ebca6b);
                    D ^= D >>> 13;
                    D = H(D, 0xc2b2ae35);
                    D ^= D >>> 16;
                    G[p] = D;
                    return D;
                },
                l = function(z, o, T) {
                    var I;
                    var w;
                    if (T > 0) {
                        I = C.substring(z, T);
                        w = I.length;
                        return k(I, w, o);
                    } else if (z === null || z <= 0) {
                        I = C.substring(0, C.length);
                        w = I.length;
                        return k(I, w, o);
                    }
                    I = C.substring(C.length - z, C.length);
                    w = I.length;
                    return k(I, w, o);
                };
            return {
                H: H,
                k: k,
                l: l
            };
        })(function(Z) {
            this.Z = Z;
            this.X = function(v) {
                var E = new String();
                for (var j = 0; j < Z.length; j++) {
                    E += String.fromCharCode(Z.charCodeAt(j) - v);
                }
                return E;
            }
        })
    };
    // if (document.referrer.indexOf("marketjs.com") < 0) {
    //     if (top != self) {
    //         console.log("showing anti-piracy layer ...");
    //         $("#anti-piracy").show();
    //         top.location.replace(self.location.href);
    //     }
    // }
    MyGame = ig.Game.extend({
        scroll: new Vector(0, 0),
        tileMath: null,
        drawer: null,
        ioHandler: null,
        vMath: null,
        isoWm: false,
        lastDraw: [],
        init: function() {
         
                ig.game.storage = new ig.Storage();
        
            ig.game.storage.initUnset('lostInTime-levels', [true, false, false, false, false, false, false, false, false, false, false, false, false, false, false]);
            ig.game.levelsUnlocked = ig.game.storage.get('lostInTime-levels');
            this.vMath = new VectorMath();
            this.tileMath = new IsoTileMath();
            this.drawer = new IsoDrawer();
            this.ioHandler = new GameIoHandler();
            this.setupMarketJsGameCenter();
            this.removeLoadingWheel();
            this.injectMobileLink();
            this.setupURLParameters();
            this.finalize();
        },
        setupMarketJsGameCenter: function() {
        
                if (_SETTINGS) {
                    if (_SETTINGS['MarketJSGameCenter']) {
                        if (_SETTINGS['MarketJSGameCenter']['Activator']['Enabled']) {
                            if (_SETTINGS['MarketJSGameCenter']['Activator']['Position']) {
                                console.log('MarketJSGameCenter activator settings present ....');
                                $('.gamecenter-activator').css('top', _SETTINGS['MarketJSGameCenter']['Activator']['Position']['Top']);
                                $('.gamecenter-activator').css('left', _SETTINGS['MarketJSGameCenter']['Activator']['Position']['Left']);
                            }
                        }
                        $('.gamecenter-activator').show();
                    } else {
                        console.log('MarketJSGameCenter settings not defined in game settings');
                    }
                }
                    },
        finalize: function() {
           
                if (ig.ua.mobile) {
                    ig.game.showOverlay(['play']);
                } else {
                    ig.game.startGame();
                }
      
            sizeHandler();
        },
        injectMobileLink: function() {
         
                $('#play').attr('onclick', 'ig.game.pressPlay();ig.soundHandler.staticSound.play();');
            
        },
        removeLoadingWheel: function() {
         
                try {
                    $('#ajaxbar').css('background', 'none');
                } catch (err) {
                    console.log(err);
                }
           
        },
        showDebugMenu: function() {
       
                console.log('showing debug menu ...');
       
            ig.Entity._debugShowBoxes = true;
            $('.ig_debug').show();
        },
        startGame: function() {
            this.resetPlayerStats();
            if (ig.ua.mobile) {
                this.director = new ig.Director(this, [LevelOpening, LevelMenu, LevelTransition, LevelGame]);
            } else {
                this.director = new ig.Director(this, [LevelOpening, LevelMenu, LevelTransition, LevelGame]);
            }
            if (_SETTINGS['Branding']['Splash']['Enabled']) {
                try {
                    this.branding = new ig.BrandingSplash();
                } catch (err) {
                    console.log(err);
                    console.log('Loading original levels ...');
                    this.director.loadLevel(this.director.currentLevel);
                }
            } else {
                this.director.loadLevel(this.director.currentLevel);
            }
            ig.soundHandler.playBackgroundMusic();
        },
        fpsCount: function() {
            if (!this.fpsTimer) {
                this.fpsTimer = new ig.Timer(1);
            }
            if (this.fpsTimer && this.fpsTimer.delta() < 0) {
                if (this.fpsCounter != null) {
                    this.fpsCounter++;
                } else {
                    this.fpsCounter = 0;
                }
            } else {
                ig.game.fps = this.fpsCounter;
                this.fpsCounter = 0;
                this.fpsTimer.reset();
            }
        },
        endGame: function() {
        
                console.log('End game');
                ig.soundHandler.stopBackgroundMusic();
        
          
        },
        resetPlayerStats: function() {
            ig.log('resetting player stats ...');
            this.playerStats = {
                id: this.playerStats ? this.playerStats.id : null,
            };
        },
        setupURLParameters: function() {
            this.setupURLParameters = new ig.UrlParameters();
        },
        pressPlay: function() {
            this.hideOverlay(['play']);
            this.startGame();
        
        },
        pauseGame: function() {
            ig.system.stopRunLoop.call(ig.system);
            console.log('Game Paused');
        },
        resumeGame: function() {
            ig.system.startRunLoop.call(ig.system);
            console.log('Game Resumed');
        },
        showOverlay: function(divList) {
            for (i = 0; i < divList.length; i++) {
                var elem = $('#' + divList[i]);
                if (elem) elem.show();
                if (document.getElementById(divList[i])) document.getElementById(divList[i]).style.visibility = "visible";
            }
        },
        hideOverlay: function(divList) {
            for (i = 0; i < divList.length; i++) {
                var elem = $('#' + divList[i]);
                if (elem) elem.hide();
                if (document.getElementById(divList[i])) document.getElementById(divList[i]).style.visibility = "hidden";
            }
        },
        update: function() {
            if (this.paused) {
                for (var i = 0; i < this.entities.length; i++) {
                    if (this.entities[i].ignorePause) {
                        this.entities[i].update();
                    }
                }
            } else {
                this.parent();
                if (ig.ua.mobile && ig.soundHandler) {
                    ig.soundHandler.forceLoopBGM();
                }
            }
        },
        draw: function() {
            this.parent();
            for (var lastDrawIndex = 0; lastDrawIndex < this.lastDraw.length; lastDrawIndex++) {
                this.lastDraw[lastDrawIndex]();
            }
            this.scroll = new Vector(0, 0);
        },
        emptyLastDraw: function() {
            while (this.lastDraw.length > 0) {
                this.lastDraw.pop();
            }
        },
        drawDebug: function() {
            if (!ig.global.wm) {
                this.debugEnable();
                if (this.viewDebug) {
                    ig.system.context.fillStyle = '#000000';
                    ig.system.context.globalAlpha = 0.35;
                    ig.system.context.fillRect(0, 0, ig.system.width / 4, ig.system.height);
                    ig.system.context.globalAlpha = 1;
                    if (this.debug && this.debug.length > 0) {
                        for (i = 0; i < this.debug.length; i++) {
                            ig.system.context.font = "10px Arial";
                            ig.system.context.fillStyle = '#ffffff';
                            ig.system.context.fillText(this.debugLine - this.debug.length + i + ": " + this.debug[i], 10, 50 + 10 * i);
                        }
                    }
                }
            }
        },
        debugCL: function(consoleLog) {
            if (!this.debug) {
                this.debug = [];
                this.debugLine = 1;
                this.debug.push(consoleLog);
            } else {
                if (this.debug.length < 50) {
                    this.debug.push(consoleLog);
                } else {
                    this.debug.splice(0, 1);
                    this.debug.push(consoleLog);
                }
                this.debugLine++;
            }
            console.log(consoleLog);
        },
        debugEnable: function() {
            if (ig.input.pressed('click')) {
                this.debugEnableTimer = new ig.Timer(2);
            }
            if (this.debugEnableTimer && this.debugEnableTimer.delta() < 0) {
                if (ig.input.released('click')) {
                    this.debugEnableTimer = null;
                }
            } else if (this.debugEnableTimer && this.debugEnableTimer.delta() > 0) {
                this.debugEnableTimer = null;
                if (this.viewDebug) {
                    this.viewDebug = false;
                } else {
                    this.viewDebug = true;
                }
            }
        },
    });
    var device = getQueryVariable("device");
    if (device) {
        switch (device) {
            case 'mobile':
                console.log('serving mobile version ...');
                ig.ua.mobile = true;
                break;
            case 'desktop':
                console.log('serving desktop version ...');
                ig.ua.mobile = false;
                break;
            default:
                console.log('serving universal version ...');
                break;
        }
    } else {
        console.log('serving universal version ...');
    }
    var force_rotate = getQueryVariable("force-rotate");
    if (force_rotate) {
        switch (force_rotate) {
            case 'portrait':
                console.log('force rotate to portrait');
                window.orientation = 0;
                break;
            case 'landscape':
                console.log('force rotate to horizontal');
                window.orientation = 90;
                break;
            default:
                alert('wrong command/type in param force-rotate. Defaulting value to portrait');
                window.orientation = 0;
        }
    }
    if (ig.ua.mobile) {
        ig.Sound.enabled = false;
        ig.main('#canvas', MyGame, 60, mobileWidth, mobileHeight, 1, ig.SplashLoader);
    } else {
        ig.main('#canvas', MyGame, 60, desktopWidth, desktopHeight, 1, ig.SplashLoader);
    }
    if (ig.ua.mobile) {
        orientationHandler();
    }
    sizeHandler();
    fixSamsungHandler();
    Array
});